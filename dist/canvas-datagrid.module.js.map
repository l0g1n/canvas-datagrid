{"version":3,"file":"canvas-datagrid.module.js","sources":["../lib/defaults.js","../lib/component.js","../lib/draw.js","../node_modules/is-printable-key-event/dist/index.js","../lib/events/util.js","../lib/events/index.js","../lib/touch.js","../lib/intf.js","../lib/contextMenu.js","../lib/button.js","../lib/dom.js","../lib/publicMethods.js","../lib/main.js"],"sourcesContent":["/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n\r\n'use strict';\r\nexport default function (self) {\r\n  self.defaults = {\r\n    attributes: [\r\n      ['allowColumnReordering', true],\r\n      ['allowColumnResize', true],\r\n      ['allowColumnResizeFromCell', false],\r\n      ['allowFreezingRows', false],\r\n      ['allowFreezingColumns', false],\r\n      ['allowMovingSelection', true],\r\n      ['allowRowHeaderResize', true],\r\n      ['allowRowReordering', false],\r\n      ['allowRowResize', true],\r\n      ['allowRowResizeFromCell', false],\r\n      ['allowSorting', true],\r\n      ['animationDurationShowContextMenu', 50],\r\n      ['animationDurationHideContextMenu', 50],\r\n      ['autoGenerateSchema', false],\r\n      ['autoResizeColumns', false],\r\n      ['autoResizeRows', false],\r\n      ['autoScrollOnMousemove', false],\r\n      ['autoScrollMargin', 5],\r\n      ['blanksText', '(Blanks)'],\r\n      ['borderDragBehavior', 'none'],\r\n      ['borderResizeZone', 10],\r\n      ['clearSettingsOptionText', 'Clear saved settings'],\r\n      ['columnHeaderClickBehavior', 'sort'],\r\n      ['columnSelectorHiddenText', '&nbsp;&nbsp;&nbsp;'],\r\n      ['columnSelectorText', 'Add/Remove columns'],\r\n      ['columnSelectorVisibleText', '\\u2713'],\r\n      ['contextHoverScrollAmount', 2],\r\n      ['contextHoverScrollRateMs', 5],\r\n      ['copyHeadersOnSelectAll', true],\r\n      ['copyText', 'Copy'],\r\n      ['debug', false],\r\n      ['editable', true],\r\n      ['ellipsisText', '...'],\r\n      ['filterOptionText', 'Filter %s'],\r\n      ['filterTextPrefix', '(filtered) '],\r\n      ['filterFrozenRows', true],\r\n      ['globalRowResize', false],\r\n      ['hideColumnText', 'Hide %s'],\r\n      ['hoverMode', 'cell'],\r\n      ['keepFocusOnMouseOut', false],\r\n      ['maxAutoCompleteItems', 200],\r\n      ['multiLine', false],\r\n      ['name', ''],\r\n      ['pageUpDownOverlap', 1],\r\n      ['pasteText', 'Paste'],\r\n      ['persistantSelectionMode', false],\r\n      ['removeFilterOptionText', 'Remove filter on %s'],\r\n      ['reorderDeadZone', 3],\r\n      ['resizeScrollZone', 20],\r\n      ['rowGrabZoneSize', 5],\r\n      ['saveAppearance', true],\r\n      ['scrollAnimationPPSThreshold', 0.75],\r\n      ['scrollPointerLock', false],\r\n      ['scrollRepeatRate', 75],\r\n      ['selectionFollowsActiveCell', false],\r\n      ['selectionHandleBehavior', 'none'],\r\n      ['selectionMode', 'cell'],\r\n      ['selectionScrollIncrement', 20],\r\n      ['selectionScrollZone', 20],\r\n      ['showClearSettingsOption', true],\r\n      ['showColumnHeaders', true],\r\n      ['showColumnSelector', true],\r\n      ['showCopy', false],\r\n      ['showFilter', true],\r\n      ['showFilterInCell', false],\r\n      ['showNewRow', false],\r\n      ['showOrderByOption', true],\r\n      ['showOrderByOptionTextAsc', 'Order by %s ascending'],\r\n      ['showOrderByOptionTextDesc', 'Order by %s descending'],\r\n      ['showPaste', false],\r\n      ['showPerformance', false],\r\n      ['showRowHeaders', true],\r\n      ['showRowNumbers', true],\r\n      ['showRowNumberGaps', true],\r\n      ['singleSelectionMode', false],\r\n      ['snapToRow', false],\r\n      ['sortFrozenRows', true],\r\n      ['touchContextMenuTimeMs', 800],\r\n      ['touchDeadZone', 3],\r\n      ['touchEasingMethod', 'easeOutQuad'],\r\n      ['touchReleaseAcceleration', 1000],\r\n      ['touchReleaseAnimationDurationMs', 2000],\r\n      ['touchScrollZone', 20],\r\n      ['touchSelectHandleZone', 20],\r\n      ['touchZoomSensitivity', 0.005],\r\n      ['touchZoomMin', 0.5],\r\n      ['touchZoomMax', 1.75],\r\n      ['maxPixelRatio', 2],\r\n      ['tree', false],\r\n      ['treeHorizontalScroll', false],\r\n    ],\r\n    styles: [\r\n      ['activeCellBackgroundColor', 'rgba(255, 255, 255, 1)'],\r\n      ['activeCellBorderColor', 'rgba(110, 168, 255, 1)'],\r\n      ['activeCellBorderWidth', 1],\r\n      ['activeCellColor', 'rgba(0, 0, 0, 1)'],\r\n      ['activeCellFont', '16px sans-serif'],\r\n      ['activeCellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\r\n      ['activeCellHorizontalAlignment', 'left'],\r\n      ['activeCellHoverColor', 'rgba(0, 0, 0, 1)'],\r\n      ['activeCellOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\r\n      ['activeCellOverlayBorderWidth', 1],\r\n      ['activeCellPaddingBottom', 5],\r\n      ['activeCellPaddingLeft', 5],\r\n      ['activeCellPaddingRight', 5],\r\n      ['activeCellPaddingTop', 5],\r\n      ['activeCellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\r\n      ['activeCellSelectedColor', 'rgba(0, 0, 0, 1)'],\r\n      ['activeCellVerticalAlignment', 'center'],\r\n      ['activeColumnHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\r\n      ['activeColumnHeaderCellColor', 'rgba(0, 0, 0, 1)'],\r\n      ['activeRowHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\r\n      ['activeRowHeaderCellColor', 'rgba(0, 0, 0, 1)'],\r\n      ['autocompleteBottomMargin', 60],\r\n      ['autosizeHeaderCellPadding', 8],\r\n      ['autosizePadding', 5],\r\n      ['buttonActiveBackgroundColor', 'rgba(255, 255, 255, 1)'],\r\n      ['buttonActiveBorderColor', 'rgba(110, 168, 255, 1)'],\r\n      ['buttonArrowColor', 'rgba(50, 50, 50, 1)'],\r\n      ['buttonArrowDownHTML', '&#x25BC;'],\r\n      ['buttonZIndex', 10000],\r\n      ['buttonBackgroundColor', 'rgba(255, 255, 255, 1)'],\r\n      ['buttonBorderColor', 'rgba(172, 172, 172, 1)'],\r\n      ['buttonHoverBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['buttonMenuWindowMargin', 30],\r\n      ['buttonPadding', '3px'],\r\n      ['cellAutoResizePadding', 13],\r\n      ['cellBackgroundColor', 'rgba(255, 255, 255, 1)'],\r\n      ['cellBorderColor', 'rgba(195, 199, 202, 1)'],\r\n      ['cellBorderWidth', 1],\r\n      ['cellColor', 'rgba(0, 0, 0, 1)'],\r\n      ['cellFont', '16px sans-serif'],\r\n      ['cellGridHeight', 250],\r\n      ['cellHeight', 24],\r\n      ['cellHeightWithChildGrid', 150],\r\n      ['cellHorizontalAlignment', 'left'],\r\n      ['cellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\r\n      ['cellHoverColor', 'rgba(0, 0, 0, 1)'],\r\n      ['cellPaddingBottom', 5],\r\n      ['cellPaddingLeft', 5],\r\n      ['cellPaddingRight', 5],\r\n      ['cellPaddingTop', 5],\r\n      ['cellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\r\n      ['cellSelectedColor', 'rgba(0, 0, 0, 1)'],\r\n      ['cellVerticalAlignment', 'center'],\r\n      ['cellWidth', 250],\r\n      ['cellWidthWithChildGrid', 250],\r\n      ['cellWhiteSpace', 'nowrap'],\r\n      ['cellLineHeight', 1],\r\n      ['cellLineSpacing', 3],\r\n      ['childContextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\r\n      ['childContextMenuArrowHTML', '&#x25BA;'],\r\n      ['childContextMenuMarginLeft', -11],\r\n      ['childContextMenuMarginTop', -6],\r\n      ['columnHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['columnHeaderCellBorderColor', 'rgba(172, 172, 172, 1)'],\r\n      ['columnHeaderCellBorderWidth', 1],\r\n      ['columnHeaderCellCapBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['columnHeaderCellCapBorderColor', 'rgba(172, 172, 172, 1)'],\r\n      ['columnHeaderCellCapBorderWidth', 1],\r\n      ['columnHeaderCellColor', 'rgba(50, 50, 50, 1)'],\r\n      ['columnHeaderCellFont', '16px sans-serif'],\r\n      ['columnHeaderCellHeight', 25],\r\n      ['columnHeaderCellHorizontalAlignment', 'left'],\r\n      ['columnHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\r\n      ['columnHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\r\n      ['columnHeaderCellPaddingBottom', 5],\r\n      ['columnHeaderCellPaddingLeft', 5],\r\n      ['columnHeaderCellPaddingRight', 5],\r\n      ['columnHeaderCellPaddingTop', 5],\r\n      ['columnHeaderCellVerticalAlignment', 'center'],\r\n      ['columnHeaderOrderByArrowBorderColor', 'rgba(195, 199, 202, 1)'],\r\n      ['columnHeaderOrderByArrowBorderWidth', 1],\r\n      ['columnHeaderOrderByArrowColor', 'rgba(155, 155, 155, 1)'],\r\n      ['columnHeaderOrderByArrowHeight', 8],\r\n      ['columnHeaderOrderByArrowMarginLeft', 0],\r\n      ['columnHeaderOrderByArrowMarginRight', 5],\r\n      ['columnHeaderOrderByArrowMarginTop', 6],\r\n      ['columnHeaderOrderByArrowWidth', 13],\r\n      ['contextFilterButtonBorder', 'solid 1px rgba(158, 163, 169, 1)'],\r\n      ['contextFilterButtonBorderRadius', '3px'],\r\n      ['contextFilterButtonHTML', '&#x25BC;'],\r\n      ['contextFilterInputBackground', 'rgba(255,255,255,1)'],\r\n      ['contextFilterInputBorder', 'solid 1px rgba(158, 163, 169, 1)'],\r\n      ['contextFilterInputBorderRadius', '0'],\r\n      ['contextFilterInputColor', 'rgba(0,0,0,1)'],\r\n      ['contextFilterInputFontFamily', 'sans-serif'],\r\n      ['contextFilterInputFontSize', '14px'],\r\n      ['contextFilterInvalidRegExpBackground', 'rgba(180, 6, 1, 1)'],\r\n      ['contextFilterInvalidRegExpColor', 'rgba(255, 255, 255, 1)'],\r\n      ['contextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\r\n      ['contextMenuArrowDownHTML', '&#x25BC;'],\r\n      ['contextMenuArrowUpHTML', '&#x25B2;'],\r\n      ['contextMenuBackground', 'rgba(240, 240, 240, 1)'],\r\n      ['contextMenuBorder', 'solid 1px rgba(158, 163, 169, 1)'],\r\n      ['contextMenuBorderRadius', '3px'],\r\n      ['contextMenuChildArrowFontSize', '12px'],\r\n      ['contextMenuColor', 'rgba(43, 48, 43, 1)'],\r\n      ['contextMenuCursor', 'default'],\r\n      ['contextMenuFilterButtonFontFamily', 'sans-serif'],\r\n      ['contextMenuFilterButtonFontSize', '10px'],\r\n      ['contextMenuFilterInvalidExpresion', 'rgba(237, 155, 156, 1)'],\r\n      ['contextMenuFontFamily', 'sans-serif'],\r\n      ['contextMenuFontSize', '16px'],\r\n      ['contextMenuHoverBackground', 'rgba(182, 205, 250, 1)'],\r\n      ['contextMenuHoverColor', 'rgba(43, 48, 153, 1)'],\r\n      ['contextMenuItemBorderRadius', '3px'],\r\n      ['contextMenuItemMargin', '2px'],\r\n      ['contextMenuLabelDisplay', 'inline-block'],\r\n      ['contextMenuLabelMargin', '0 3px 0 0'],\r\n      ['contextMenuLabelMaxWidth', '700px'],\r\n      ['contextMenuLabelMinWidth', '75px'],\r\n      ['contextMenuMarginLeft', 3],\r\n      ['contextMenuMarginTop', -3],\r\n      ['contextMenuOpacity', '0.98'],\r\n      ['contextMenuPadding', '2px'],\r\n      ['contextMenuWindowMargin', 30],\r\n      ['contextMenuZIndex', 10000],\r\n      ['cornerCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['cornerCellBorderColor', 'rgba(202, 202, 202, 1)'],\r\n      ['debugBackgroundColor', 'rgba(0, 0, 0, .0)'],\r\n      ['debugColor', 'rgba(255, 15, 24, 1)'],\r\n      ['debugEntitiesColor', 'rgba(76, 231, 239, 1.00)'],\r\n      ['debugFont', '11px sans-serif'],\r\n      ['debugPerfChartBackground', 'rgba(29, 25, 26, 1.00)'],\r\n      ['debugPerfChartTextColor', 'rgba(255, 255, 255, 0.8)'],\r\n      ['debugPerformanceColor', 'rgba(252, 255, 37, 1.00)'],\r\n      ['debugScrollHeightColor', 'rgba(248, 33, 103, 1.00)'],\r\n      ['debugScrollWidthColor', 'rgba(66, 255, 27, 1.00)'],\r\n      ['debugTouchPPSXColor', 'rgba(246, 102, 24, 1.00)'],\r\n      ['debugTouchPPSYColor', 'rgba(186, 0, 255, 1.00)'],\r\n      ['display', 'inline-block'],\r\n      ['editCellBackgroundColor', 'white'],\r\n      ['editCellBorder', 'solid 1px rgba(110, 168, 255, 1)'],\r\n      ['editCellBoxShadow', '0 2px 5px rgba(0,0,0,0.4)'],\r\n      ['editCellColor', 'black'],\r\n      ['editCellFontFamily', 'sans-serif'],\r\n      ['editCellFontSize', '16px'],\r\n      ['editCellPaddingLeft', 4],\r\n      ['editCellZIndex', 10000],\r\n      ['filterButtonActiveBackgroundColor', 'rgba(225, 225, 225, 1)'],\r\n      ['filterButtonArrowBorderColor', 'rgba(195, 199, 202, 1)'],\r\n      ['filterButtonArrowBorderWidth', 1],\r\n      ['filterButtonArrowClickRadius', 5],\r\n      ['filterButtonArrowColor', 'rgba(50, 50, 50, 1)'],\r\n      ['filterButtonArrowHeight', 5],\r\n      ['filterButtonArrowWidth', 8],\r\n      ['filterButtonBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['filterButtonBorderColor', 'rgba(172, 172, 172, 1)'],\r\n      ['filterButtonBorderRadius', 3],\r\n      ['filterButtonHeight', 20],\r\n      ['filterButtonHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\r\n      ['filterButtonMenuOffsetTop', 10],\r\n      ['filterButtonWidth', 20],\r\n      ['frozenMarkerHoverColor', 'rgba(236, 243, 255, 1)'],\r\n      ['frozenMarkerHoverBorderColor', 'rgba(110, 168, 255, 1)'],\r\n      ['frozenMarkerActiveColor', 'rgba(236, 243, 255, 1)'],\r\n      ['frozenMarkerActiveBorderColor', 'rgba(110, 168, 255, 1)'],\r\n      ['frozenMarkerColor', 'rgba(222, 222, 222, 1)'],\r\n      ['frozenMarkerBorderColor', 'rgba(168, 168, 168, 1)'],\r\n      ['frozenMarkerBorderWidth', 1],\r\n      ['frozenMarkerWidth', 2],\r\n      ['gridBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['gridBorderCollapse', 'collapse'],\r\n      ['gridBorderColor', 'rgba(202, 202, 202, 1)'],\r\n      ['gridBorderWidth', 1],\r\n      ['height', 'auto'],\r\n      ['maxHeight', 'inherit'],\r\n      ['maxWidth', 'inherit'],\r\n      ['minColumnWidth', 45],\r\n      ['minHeight', 'inherit'],\r\n      ['minRowHeight', 24],\r\n      ['minWidth', 'inherit'],\r\n      ['mobileContextMenuMargin', 10],\r\n      ['mobileEditInputHeight', 30],\r\n      ['mobileEditFontFamily', 'sans-serif'],\r\n      ['mobileEditFontSize', '16px'],\r\n      ['moveOverlayBorderWidth', 1],\r\n      ['moveOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\r\n      ['moveOverlayBorderSegments', '12, 7'],\r\n      ['name', 'default'],\r\n      ['overflowY', 'auto'],\r\n      ['overflowX', 'auto'],\r\n      ['reorderMarkerBackgroundColor', 'rgba(0, 0, 0, 0.1)'],\r\n      ['reorderMarkerBorderColor', 'rgba(0, 0, 0, 0.2)'],\r\n      ['reorderMarkerBorderWidth', 1.25],\r\n      ['reorderMarkerIndexBorderColor', 'rgba(66, 133, 244, 1)'],\r\n      ['reorderMarkerIndexBorderWidth', 2.75],\r\n      ['rowHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['rowHeaderCellBorderColor', 'rgba(200, 200, 200, 1)'],\r\n      ['rowHeaderCellBorderWidth', 1],\r\n      ['rowHeaderCellColor', 'rgba(50, 50, 50, 1)'],\r\n      ['rowHeaderCellFont', '16px sans-serif'],\r\n      ['rowHeaderCellHeight', 25],\r\n      ['rowHeaderCellHorizontalAlignment', 'left'],\r\n      ['rowHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\r\n      ['rowHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\r\n      ['rowHeaderCellPaddingBottom', 5],\r\n      ['rowHeaderCellPaddingLeft', 5],\r\n      ['rowHeaderCellPaddingRight', 5],\r\n      ['rowHeaderCellPaddingTop', 5],\r\n      ['rowHeaderCellRowNumberGapHeight', 5],\r\n      ['rowHeaderCellRowNumberGapColor', 'rgba(50, 50, 50, 1)'],\r\n      ['rowHeaderCellSelectedBackgroundColor', 'rgba(217, 217, 217, 1)'],\r\n      ['rowHeaderCellSelectedColor', 'rgba(50, 50, 50, 1)'],\r\n      ['rowHeaderCellVerticalAlignment', 'center'],\r\n      ['rowHeaderCellWidth', 57],\r\n      ['scrollBarActiveColor', 'rgba(125, 125, 125, 1)'],\r\n      ['scrollBarBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['scrollBarBorderColor', 'rgba(202, 202, 202, 1)'],\r\n      ['scrollBarBorderWidth', 0.5],\r\n      ['scrollBarBoxBorderRadius', 4.125],\r\n      ['scrollBarBoxColor', 'rgba(192, 192, 192, 1)'],\r\n      ['scrollBarBoxMargin', 2],\r\n      ['scrollBarBoxMinSize', 15],\r\n      ['scrollBarBoxWidth', 8],\r\n      ['scrollBarCornerBackgroundColor', 'rgba(240, 240, 240, 1)'],\r\n      ['scrollBarCornerBorderColor', 'rgba(202, 202, 202, 1)'],\r\n      ['scrollBarWidth', 11],\r\n      ['selectionHandleBorderColor', 'rgba(255, 255, 255, 1)'],\r\n      ['selectionHandleBorderWidth', 1.5],\r\n      ['selectionHandleColor', 'rgba(66, 133, 244, 1)'],\r\n      ['selectionHandleSize', 8],\r\n      ['selectionHandleType', 'square'],\r\n      ['selectionOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\r\n      ['selectionOverlayBorderWidth', 1],\r\n      ['treeArrowBorderColor', 'rgba(195, 199, 202, 1)'],\r\n      ['treeArrowBorderWidth', 1],\r\n      ['treeArrowClickRadius', 5],\r\n      ['treeArrowColor', 'rgba(155, 155, 155, 1)'],\r\n      ['treeArrowHeight', 8],\r\n      ['treeArrowMarginLeft', 0],\r\n      ['treeArrowMarginRight', 5],\r\n      ['treeArrowMarginTop', 6],\r\n      ['treeArrowWidth', 13],\r\n      ['treeGridHeight', 250],\r\n      ['width', 'auto'],\r\n    ],\r\n  };\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nimport defaults from './defaults';\r\n\r\nexport default function () {\r\n  var typeMap,\r\n    component = {};\r\n  var g_observer;\r\n  component.getObserver = function () {\r\n    // console.log(g_observer, 'component.js x obs');\r\n    return g_observer;\r\n  };\r\n  component.dehyphenateProperty = function hyphenateProperty(prop) {\r\n    prop = prop.replace('--cdg-', '');\r\n    var p = '',\r\n      nextLetterCap;\r\n    Array.prototype.forEach.call(prop, function (char) {\r\n      if (nextLetterCap) {\r\n        nextLetterCap = false;\r\n        p += char.toUpperCase();\r\n        return;\r\n      }\r\n      if (char === '-') {\r\n        nextLetterCap = true;\r\n        return;\r\n      }\r\n      p += char;\r\n    });\r\n    return p;\r\n  };\r\n  component.hyphenateProperty = function hyphenateProperty(prop, cust) {\r\n    var p = '';\r\n    Array.prototype.forEach.call(prop, function (char) {\r\n      if (char === char.toUpperCase()) {\r\n        p += '-' + char.toLowerCase();\r\n        return;\r\n      }\r\n      p += char;\r\n    });\r\n    return (cust ? '--cdg-' : '') + p;\r\n  };\r\n  function getDefaultItem(base, item) {\r\n    var i = {},\r\n      r;\r\n    defaults(i);\r\n    r = i.defaults[base].filter(function (i) {\r\n      return (\r\n        i[0].toLowerCase() === item.toLowerCase() ||\r\n        component.hyphenateProperty(i[0]) === item.toLowerCase() ||\r\n        component.hyphenateProperty(i[0], true) === item.toLowerCase()\r\n      );\r\n    })[0];\r\n    return r;\r\n  }\r\n  component.applyComponentStyle = function (supressChangeAndDrawEvents, intf) {\r\n    if (!intf.isComponent) {\r\n      return;\r\n    }\r\n    var cStyle = window.getComputedStyle(\r\n        intf.tagName === 'CANVAS-DATAGRID' ? intf : intf.canvas,\r\n        null,\r\n      ),\r\n      defs = {};\r\n    intf.computedStyle = cStyle;\r\n    defaults(defs);\r\n    defs = defs.defaults.styles;\r\n    defs.forEach(function (def) {\r\n      var val;\r\n      val = cStyle.getPropertyValue(component.hyphenateProperty(def[0], true));\r\n      if (val === '') {\r\n        val = cStyle.getPropertyValue(\r\n          component.hyphenateProperty(def[0], false),\r\n        );\r\n      }\r\n      if (val !== '' && typeof val === 'string') {\r\n        intf.setStyleProperty(\r\n          def[0],\r\n          typeMap[typeof def[1]](\r\n            val.replace(/^\\s+/, '').replace(/\\s+$/, ''),\r\n            def[1],\r\n          ),\r\n          true,\r\n        );\r\n      }\r\n    });\r\n    if (!supressChangeAndDrawEvents && intf.dispatchEvent) {\r\n      requestAnimationFrame(function () {\r\n        intf.resize(true);\r\n      });\r\n      intf.dispatchEvent('stylechanged', intf.style);\r\n    }\r\n  };\r\n  typeMap = {\r\n    data: function (strData) {\r\n      try {\r\n        return JSON.parse(strData);\r\n      } catch (e) {\r\n        throw new Error('Cannot read JSON data in canvas-datagrid data.');\r\n      }\r\n    },\r\n    schema: function (strSchema) {\r\n      try {\r\n        return JSON.parse(strSchema);\r\n      } catch (e) {\r\n        throw new Error(\r\n          'Cannot read JSON data in canvas-datagrid schema attribute.',\r\n        );\r\n      }\r\n    },\r\n    number: function (strNum, def) {\r\n      var n = parseInt(strNum, 10);\r\n      return isNaN(n) ? def : n;\r\n    },\r\n    boolean: function (strBool) {\r\n      return /true/i.test(strBool);\r\n    },\r\n    string: function (str) {\r\n      return str;\r\n    },\r\n  };\r\n  component.getObservableAttributes = function () {\r\n    var i = {},\r\n      attrs = ['data', 'schema', 'style', 'className', 'name'];\r\n    defaults(i);\r\n    i.defaults.attributes.forEach(function (attr) {\r\n      attrs.push(attr[0].toLowerCase());\r\n    });\r\n    return attrs;\r\n  };\r\n  component.disconnectedCallback = function () {\r\n    // g_observer.disconnect();\r\n    // console.log('component.js disconn');\r\n    this.connected = false;\r\n  };\r\n  component.connectedCallback = function () {\r\n    var intf = this;\r\n    intf.parentDOMNode.innerHTML = '';\r\n    intf.parentDOMNode.appendChild(intf.canvas);\r\n    intf.connected = true;\r\n    // console.log('component.js conn');\r\n    component.observe(intf);\r\n    component.applyComponentStyle(true, intf);\r\n    intf.resize(true);\r\n  };\r\n  component.adoptedCallback = function () {\r\n    this.resize();\r\n  };\r\n  component.attributeChangedCallback = function (attrName, oldVal, newVal) {\r\n    var tfn,\r\n      intf = this,\r\n      def;\r\n    if (attrName === 'style') {\r\n      component.applyComponentStyle(false, intf);\r\n      return;\r\n    }\r\n    if (attrName === 'data') {\r\n      if (intf.dataType === 'application/x-canvas-datagrid') {\r\n        intf.dataType = 'application/json+x-canvas-datagrid';\r\n      }\r\n      intf.data = newVal;\r\n      return;\r\n    }\r\n    if (attrName === 'schema') {\r\n      intf.schema = typeMap.schema(newVal);\r\n      return;\r\n    }\r\n    if (attrName === 'name') {\r\n      intf.name = newVal;\r\n      return;\r\n    }\r\n    if (attrName === 'class' || attrName === 'className') {\r\n      return;\r\n    }\r\n    def = getDefaultItem('attributes', attrName);\r\n    if (def) {\r\n      tfn = typeMap[typeof def[1]];\r\n      intf.attributes[def[0]] = tfn(newVal);\r\n      return;\r\n    }\r\n    if (/^on/.test(attrName)) {\r\n      intf.addEventListener('on' + attrName, Function('e', newVal));\r\n    }\r\n    return;\r\n  };\r\n  component.observe = function (intf) {\r\n    // console.log('component.observe');\r\n    // var observer;\r\n    if (!window.MutationObserver) {\r\n      return;\r\n    }\r\n    intf.applyComponentStyle = function () {\r\n      component.applyComponentStyle(false, intf);\r\n      intf.resize();\r\n    };\r\n    /**\r\n     * Applies the computed css styles to the grid.  In some browsers, changing directives in attached style sheets does not automatically update the styles in this component.  It is necessary to call this method to update in these cases.\r\n     * @memberof canvasDatagrid\r\n     * @name applyComponentStyle\r\n     * @method\r\n     */\r\n    /*\r\n    g_observer = new window.MutationObserver(function (mutations) {\r\n      console.log('new window.MutationObserver');\r\n      var checkInnerHTML, checkStyle;\r\n      Array.prototype.forEach.call(mutations, function (mutation) {\r\n        if (\r\n          mutation.attributeName === 'class' ||\r\n          mutation.attributeName === 'style'\r\n        ) {\r\n          checkStyle = true;\r\n          return;\r\n        }\r\n        if (mutation.target.nodeName === 'STYLE') {\r\n          checkStyle = true;\r\n          return;\r\n        }\r\n        if (\r\n          mutation.target.parentNode &&\r\n          mutation.target.parentNode.nodeName === 'STYLE'\r\n        ) {\r\n          checkStyle = true;\r\n          return;\r\n        }\r\n        if (\r\n          mutation.target === intf &&\r\n          (mutation.addedNodes.length > 0 || mutation.type === 'characterData')\r\n        ) {\r\n          checkInnerHTML = true;\r\n        }\r\n      });\r\n      if (checkStyle) {\r\n        intf.applyComponentStyle(false, intf);\r\n      }\r\n      if (checkInnerHTML) {\r\n        if (intf.dataType === 'application/x-canvas-datagrid') {\r\n          intf.dataType = 'application/json+x-canvas-datagrid';\r\n        }\r\n        intf.data = intf.innerHTML;\r\n      }\r\n    });\r\n    // console.log(g_observer, 'component.js obs');\r\n    g_observer.observe(intf, {\r\n      characterData: true,\r\n      childList: true,\r\n      attributes: true,\r\n      subtree: true,\r\n    });\r\n    Array.prototype.forEach.call(\r\n      document.querySelectorAll('style'),\r\n      function (el) {\r\n        g_observer.observe(el, {\r\n          characterData: true,\r\n          childList: true,\r\n          attributes: true,\r\n          subtree: true,\r\n        });\r\n      },\r\n    );*/\r\n    // console.log(g_observer, 'component.js 2 obs');\r\n    // console.log(component, 'component.js 4 obs');\r\n  };\r\n  // console.log(component, 'component.js 3 obs');\r\n  return component;\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals XMLSerializer: false, define: true, Blob: false, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nexport default function (self) {\r\n  var perfCounters = [],\r\n    cachedImagesDrawn = false,\r\n    drawCount = 0,\r\n    perfWindowSize = 300,\r\n    entityCount = [],\r\n    hiddenFrozenColumnCount = 0,\r\n    scrollDebugCounters = [],\r\n    touchPPSCounters = [];\r\n  self.htmlImageCache = {};\r\n  // more heavyweight version than fillArray defined in intf.js\r\n  function fillArray(low, high, step, def) {\r\n    step = step || 1;\r\n    var i = [],\r\n      x;\r\n    for (x = low; x <= high; x += step) {\r\n      i[x] = def === undefined ? x : typeof def === 'function' ? def(x) : def;\r\n    }\r\n    return i;\r\n  }\r\n  function drawPerfLine(w, h, x, y, perfArr, arrIndex, max, color, useAbs) {\r\n    var i = w / perfArr.length,\r\n      r = h / max;\r\n    x += self.canvasOffsetLeft;\r\n    y += self.canvasOffsetTop;\r\n    self.ctx.beginPath();\r\n    self.ctx.moveTo(x, y + h);\r\n    perfArr.forEach(function (n) {\r\n      var val = arrIndex === undefined ? n : n[arrIndex],\r\n        cx,\r\n        cy;\r\n      if (useAbs) {\r\n        val = Math.abs(val);\r\n      }\r\n      cx = x + i;\r\n      cy = y + h - val * r;\r\n      self.ctx.lineTo(cx, cy);\r\n      x += i;\r\n    });\r\n    self.ctx.moveTo(x + w, y + h);\r\n    self.ctx.strokeStyle = color;\r\n    self.ctx.stroke();\r\n  }\r\n  function drawOnAllImagesLoaded() {\r\n    var loaded = true;\r\n    Object.keys(self.htmlImageCache).forEach(function (html) {\r\n      if (!self.htmlImageCache[html].img.complete) {\r\n        loaded = false;\r\n      }\r\n    });\r\n    if (loaded && !cachedImagesDrawn) {\r\n      cachedImagesDrawn = true;\r\n      self.draw();\r\n    }\r\n  }\r\n  function drawHtml(cell) {\r\n    var img,\r\n      v = cell.innerHTML || cell.formattedValue,\r\n      cacheKey =\r\n        v.toString() + cell.rowIndex.toString() + cell.columnIndex.toString(),\r\n      x = Math.round(cell.x + self.canvasOffsetLeft),\r\n      y = Math.round(cell.y + self.canvasOffsetTop);\r\n    if (self.htmlImageCache[cacheKey]) {\r\n      img = self.htmlImageCache[cacheKey].img;\r\n      if (\r\n        self.htmlImageCache[cacheKey].height !== cell.height ||\r\n        self.htmlImageCache[cacheKey].width !== cell.width\r\n      ) {\r\n        // height and width of the cell has changed, invalidate cache\r\n        self.htmlImageCache[cacheKey] = undefined;\r\n      } else {\r\n        if (!img.complete) {\r\n          return;\r\n        }\r\n        return self.ctx.drawImage(img, x, y);\r\n      }\r\n    } else {\r\n      cachedImagesDrawn = false;\r\n    }\r\n    img = new Image(cell.width, cell.height);\r\n    self.htmlImageCache[cacheKey] = {\r\n      img,\r\n      width: cell.width,\r\n      height: cell.height,\r\n    };\r\n    img.onload = function () {\r\n      self.ctx.drawImage(img, x, y);\r\n      drawOnAllImagesLoaded();\r\n    };\r\n    img.src =\r\n      'data:image/svg+xml;base64,' +\r\n      btoa(\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' +\r\n          cell.width +\r\n          '\" height=\"' +\r\n          cell.height +\r\n          '\">\\n' +\r\n          '<foreignObject class=\"node\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\\n' +\r\n          '<body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"margin:0;padding:0;\">\\n' +\r\n          v +\r\n          '\\n' +\r\n          '</body>' +\r\n          '</foreignObject>\\n' +\r\n          '</svg>\\n',\r\n      );\r\n  }\r\n  function drawOrderByArrow(x, y) {\r\n    var mt = self.style.columnHeaderOrderByArrowMarginTop * self.scale,\r\n      ml = self.style.columnHeaderOrderByArrowMarginLeft * self.scale,\r\n      mr = self.style.columnHeaderOrderByArrowMarginRight * self.scale,\r\n      aw = self.style.columnHeaderOrderByArrowWidth * self.scale,\r\n      ah = self.style.columnHeaderOrderByArrowHeight * self.scale;\r\n    x += self.canvasOffsetLeft;\r\n    y += self.canvasOffsetTop;\r\n    self.ctx.fillStyle = self.style.columnHeaderOrderByArrowColor;\r\n    self.ctx.strokeStyle = self.style.columnHeaderOrderByArrowBorderColor;\r\n    self.ctx.beginPath();\r\n    x = x + ml;\r\n    y = y + mt;\r\n    if (self.orderDirection === 'asc') {\r\n      self.ctx.lineTo(x, y + ah);\r\n      self.ctx.lineTo(x + aw, y + ah);\r\n      self.ctx.lineTo(x + aw * 0.5, y);\r\n      self.ctx.lineTo(x, y + ah);\r\n    } else {\r\n      self.ctx.moveTo(x, y);\r\n      self.ctx.lineTo(x + aw, y);\r\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\r\n      self.ctx.moveTo(x, y);\r\n    }\r\n    self.ctx.stroke();\r\n    self.ctx.fill();\r\n    return ml + aw + mr;\r\n  }\r\n  function drawTreeArrow(cell, x, y) {\r\n    var mt = self.style.treeArrowMarginTop * self.scale,\r\n      mr = self.style.treeArrowMarginRight * self.scale,\r\n      ml = self.style.treeArrowMarginLeft * self.scale,\r\n      aw = self.style.treeArrowWidth * self.scale,\r\n      ah = self.style.treeArrowHeight * self.scale;\r\n    x += self.canvasOffsetLeft;\r\n    y += self.canvasOffsetTop;\r\n    self.ctx.fillStyle = self.style.treeArrowColor;\r\n    self.ctx.strokeStyle = self.style.treeArrowBorderColor;\r\n    self.ctx.beginPath();\r\n    x = x + ml;\r\n    y = y + mt;\r\n    if (self.openChildren[cell.rowIndex]) {\r\n      self.ctx.moveTo(x, y);\r\n      self.ctx.lineTo(x + aw, y);\r\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\r\n      self.ctx.moveTo(x, y);\r\n    } else {\r\n      self.ctx.lineTo(x, y);\r\n      self.ctx.lineTo(x + ah, y + aw * 0.5);\r\n      self.ctx.lineTo(x, y + aw);\r\n      self.ctx.lineTo(x, y);\r\n    }\r\n    self.ctx.stroke();\r\n    self.ctx.fill();\r\n    return ml + aw + mr;\r\n  }\r\n  function drawFilterButtonArrow(x, y) {\r\n    var mt =\r\n        ((self.style.filterButtonHeight - self.style.filterButtonArrowHeight) /\r\n          2) *\r\n        self.scale,\r\n      ml =\r\n        ((self.style.filterButtonWidth - self.style.filterButtonArrowWidth) /\r\n          2) *\r\n        self.scale,\r\n      aw = self.style.filterButtonArrowWidth * self.scale,\r\n      ah = self.style.filterButtonArrowHeight * self.scale;\r\n    x += self.canvasOffsetLeft;\r\n    y += self.canvasOffsetTop;\r\n    self.ctx.fillStyle = self.style.filterButtonArrowColor;\r\n    self.ctx.strokeStyle = self.style.filterButtonArrowBorderColor;\r\n    self.ctx.beginPath();\r\n    x = x + ml;\r\n    y = y + mt;\r\n\r\n    self.ctx.moveTo(x, y);\r\n    self.ctx.lineTo(x + aw, y);\r\n    self.ctx.lineTo(x + aw * 0.5, y + ah);\r\n    self.ctx.moveTo(x, y);\r\n\r\n    self.ctx.stroke();\r\n    self.ctx.fill();\r\n    return ml + aw;\r\n  }\r\n  function radiusRect(x, y, w, h, radius) {\r\n    x += self.canvasOffsetLeft;\r\n    y += self.canvasOffsetTop;\r\n    var r = x + w,\r\n      b = y + h;\r\n    self.ctx.beginPath();\r\n    self.ctx.moveTo(x + radius, y);\r\n    self.ctx.lineTo(r - radius, y);\r\n    self.ctx.quadraticCurveTo(r, y, r, y + radius);\r\n    self.ctx.lineTo(r, y + h - radius);\r\n    self.ctx.quadraticCurveTo(r, b, r - radius, b);\r\n    self.ctx.lineTo(x + radius, b);\r\n    self.ctx.quadraticCurveTo(x, b, x, b - radius);\r\n    self.ctx.lineTo(x, y + radius);\r\n    self.ctx.quadraticCurveTo(x, y, x + radius, y);\r\n  }\r\n  function fillRect(x, y, w, h) {\r\n    x += self.canvasOffsetLeft;\r\n    y += self.canvasOffsetTop;\r\n    self.ctx.fillRect(x, y, w, h);\r\n  }\r\n  function strokeRect(x, y, w, h) {\r\n    x += self.canvasOffsetLeft;\r\n    y += self.canvasOffsetTop;\r\n    self.ctx.strokeRect(x, y, w, h);\r\n  }\r\n  function fillText(text, x, y) {\r\n    x += self.canvasOffsetLeft;\r\n    y += self.canvasOffsetTop;\r\n    self.ctx.fillText(text, x, y);\r\n  }\r\n  function fillCircle(x, y, r) {\r\n    x += self.canvasOffsetLeft;\r\n    y += self.canvasOffsetTop;\r\n    self.ctx.beginPath();\r\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n    self.ctx.fill();\r\n  }\r\n  function strokeCircle(x, y, r) {\r\n    x += self.canvasOffsetLeft;\r\n    y += self.canvasOffsetTop;\r\n    self.ctx.beginPath();\r\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n    self.ctx.stroke();\r\n  }\r\n  function clipFrozenArea(mode) {\r\n    // 0 both, 1 rows, 2 cols\r\n    // self.lastFrozenColumnPixel;\r\n    // self.lastFrozenRowPixel;\r\n    self.ctx.beginPath();\r\n    if (mode === 0) {\r\n      self.ctx.moveTo(self.lastFrozenColumnPixel, self.lastFrozenRowPixel);\r\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\r\n      self.ctx.lineTo(self.width, self.height);\r\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\r\n    }\r\n    if (mode === 1) {\r\n      self.ctx.moveTo(0, self.lastFrozenRowPixel);\r\n      self.ctx.lineTo(0, self.height);\r\n      self.ctx.lineTo(self.width, self.height);\r\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\r\n    }\r\n    if (mode === 2) {\r\n      self.ctx.moveTo(self.lastFrozenColumnPixel, 0);\r\n      self.ctx.lineTo(self.width, 0);\r\n      self.ctx.lineTo(self.width, self.height);\r\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\r\n    }\r\n    self.ctx.clip();\r\n  }\r\n  function fillHandle(x, y, r) {\r\n    if (self.style.selectionHandleType === 'circle') {\r\n      return fillCircle(x, y, r * 0.5);\r\n    }\r\n    fillRect(x - r * 0.5, y - r * 0.5, r, r);\r\n  }\r\n  function strokeHandle(x, y, r) {\r\n    if (self.style.selectionHandleType === 'circle') {\r\n      return strokeCircle(x, y, r * 0.5);\r\n    }\r\n    strokeRect(x - r * 0.5, y - r * 0.5, r, r);\r\n  }\r\n  function addselectionHandle(c, pos) {\r\n    var hw = self.style.selectionHandleSize,\r\n      p = {\r\n        tr: function () {\r\n          fillHandle(c.x + c.width, c.y, hw);\r\n          strokeHandle(c.x + c.width, c.y, hw);\r\n        },\r\n        br: function () {\r\n          fillHandle(c.x + c.width, c.y + c.height, hw);\r\n          strokeHandle(c.x + c.width, c.y + c.height, hw);\r\n        },\r\n        tl: function () {\r\n          fillHandle(c.x, c.y, hw);\r\n          strokeHandle(c.x, c.y, hw);\r\n        },\r\n        bl: function () {\r\n          fillHandle(c.x, c.y + c.height, hw);\r\n          strokeHandle(c.x, c.y + c.height, hw);\r\n        },\r\n      };\r\n    p[pos]();\r\n  }\r\n  function addBorderLine(c, pos) {\r\n    self.ctx.beginPath();\r\n    var p = {\r\n      t: function () {\r\n        self.ctx.moveTo(\r\n          c.x + self.canvasOffsetLeft,\r\n          c.y + self.canvasOffsetTop,\r\n        );\r\n        self.ctx.lineTo(\r\n          c.x + self.canvasOffsetLeft + c.width,\r\n          c.y + self.canvasOffsetTop,\r\n        );\r\n      },\r\n      r: function () {\r\n        self.ctx.moveTo(\r\n          c.x + self.canvasOffsetLeft + c.width,\r\n          c.y + self.canvasOffsetTop,\r\n        );\r\n        self.ctx.lineTo(\r\n          c.x + self.canvasOffsetLeft + c.width,\r\n          c.y + self.canvasOffsetTop + c.height,\r\n        );\r\n      },\r\n      b: function () {\r\n        self.ctx.moveTo(\r\n          c.x + self.canvasOffsetLeft,\r\n          c.y + self.canvasOffsetTop + c.height,\r\n        );\r\n        self.ctx.lineTo(\r\n          c.x + self.canvasOffsetLeft + c.width,\r\n          c.y + self.canvasOffsetTop + c.height,\r\n        );\r\n      },\r\n      l: function () {\r\n        self.ctx.moveTo(\r\n          c.x + self.canvasOffsetLeft,\r\n          c.y + self.canvasOffsetTop,\r\n        );\r\n        self.ctx.lineTo(\r\n          c.x + self.canvasOffsetLeft,\r\n          c.y + self.canvasOffsetTop + c.height,\r\n        );\r\n      },\r\n    };\r\n    p[pos]();\r\n    self.ctx.stroke();\r\n  }\r\n  function addEllipsis(text, width) {\r\n    var c,\r\n      w = 0;\r\n    if (self.ellipsisCache[text] && self.ellipsisCache[text][width]) {\r\n      return self.ellipsisCache[text][width];\r\n    }\r\n    //TODO Add ellipsis back when there is a fast way to do it\r\n    w = self.ctx.measureText(text).width;\r\n    self.ellipsisCache[text] = self.ellipsisCache[text] || {};\r\n    c = { value: text, width: w };\r\n    self.ellipsisCache[text][width] = c;\r\n    return c;\r\n  }\r\n  function wrapText(cell, splitChar) {\r\n    if (!cell.formattedValue) {\r\n      return {\r\n        lines: [{ width: 0, value: '' }],\r\n        width: 0,\r\n        height: cell.calculatedLineHeight,\r\n      };\r\n    }\r\n    var max = 0,\r\n      n = '\\n',\r\n      x,\r\n      word,\r\n      words = cell.formattedValue.split(splitChar),\r\n      textHeight = cell.calculatedLineHeight,\r\n      lines = [],\r\n      out = [],\r\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\r\n      autoResize = self.attributes.autoResizeRows && wrap,\r\n      elWidth,\r\n      et = self.attributes.ellipsisText,\r\n      elClipLength,\r\n      plWidth,\r\n      clippedVal,\r\n      ogWordWidth,\r\n      previousLine,\r\n      line = {\r\n        width: 0,\r\n        value: '',\r\n      },\r\n      cHeight = wrap ? cell.paddedHeight : cell.calculatedLineHeight;\r\n    lines.push(line);\r\n    elWidth = self.ctx.measureText(' ' + et).width;\r\n    for (x = 0; x < words.length; x += 1) {\r\n      word = words[x];\r\n      var curSplitChar = word[word.length - 1] === '-' ? '' : splitChar;\r\n      var measure = self.ctx.measureText(word + curSplitChar);\r\n      if (line.width + measure.width + elWidth < cell.paddedWidth) {\r\n        line.value += word + curSplitChar;\r\n        line.width += measure.width;\r\n        continue;\r\n      }\r\n      // if there is a hyphenated word that is too long\r\n      // split it and add the split set to the array\r\n      // then back up and re-read new split set\r\n      // this behavior seems right, it might not be\r\n      if (/\\w-\\w/.test(word) && cell.paddedWidth < measure.width) {\r\n        var arr = word.split('-');\r\n        arr = arr.map((item, index) => {\r\n          return index === arr.length - 1 ? item : item + '-';\r\n        });\r\n        words.splice(x, 1, ...arr);\r\n        x -= 1;\r\n        continue;\r\n      }\r\n      line = {\r\n        width: measure.width,\r\n        value: word + curSplitChar,\r\n      };\r\n      if (x === 0) {\r\n        lines = [];\r\n        lines.push(line);\r\n      }\r\n      textHeight += cell.calculatedLineHeight;\r\n      if (textHeight > cHeight && !autoResize) {\r\n        if (lines.length === 0) {\r\n          break;\r\n        }\r\n        elClipLength = 1;\r\n        previousLine = lines[lines.length - 1];\r\n        if (previousLine.width < cell.paddedWidth && words.length === 1) {\r\n          break;\r\n        }\r\n        clippedVal = previousLine.value + word;\r\n        plWidth = self.ctx.measureText(clippedVal + et).width;\r\n        var originText = clippedVal;\r\n        if (plWidth > cell.paddedWidth) {\r\n          var stepLength = parseInt(clippedVal.length / 2);\r\n          var direction = -1;\r\n          while (stepLength > 0) {\r\n            clippedVal = originText.substr(\r\n              0,\r\n              stepLength * direction + clippedVal.length,\r\n            );\r\n            plWidth = self.ctx.measureText(clippedVal + et).width;\r\n            direction = plWidth > cell.paddedWidth ? -1 : 1;\r\n            stepLength = parseInt(stepLength / 2);\r\n          }\r\n        }\r\n        clippedVal =\r\n          clippedVal + (originText.length != clippedVal.length ? et : '');\r\n        previousLine.value = clippedVal;\r\n        previousLine.width = plWidth;\r\n        break;\r\n      }\r\n      if (x > 0) {\r\n        lines.push(line);\r\n      }\r\n    }\r\n    return {\r\n      lines: lines,\r\n      width: max,\r\n      height: cell.calculatedLineHeight * lines.length,\r\n    };\r\n  }\r\n  function drawText(cell) {\r\n    var ll = cell.text.lines.length,\r\n      h = cell.fontHeight * cell.lineHeight,\r\n      x,\r\n      line,\r\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\r\n      textHeight = 0;\r\n    for (x = 0; x < cell.text.lines.length; x += 1) {\r\n      line = cell.text.lines[x];\r\n      var vPos =\r\n          Math.max(\r\n            (cell.height -\r\n              (wrap ? cell.text.height : cell.calculatedLineHeight)) *\r\n              0.5,\r\n            0,\r\n          ) + h,\r\n        hPos = cell.paddingLeft + cell.treeArrowWidth + cell.orderByArrowWidth;\r\n      if (cell.horizontalAlignment === 'right') {\r\n        hPos = cell.paddingLeft + cell.paddedWidth - line.width;\r\n      } else if (cell.horizontalAlignment === 'center') {\r\n        hPos =\r\n          cell.paddingLeft +\r\n          (cell.paddedWidth + cell.paddingRight) / 2 -\r\n          line.width / 2;\r\n      }\r\n      if (cell.verticalAlignment === 'top') {\r\n        vPos = cell.calculatedLineHeight;\r\n      } else if (cell.verticalAlignment === 'bottom') {\r\n        vPos = cell.height - cell.paddingBottom - cell.text.height;\r\n      }\r\n      line.height = h + cell.lineSpacing;\r\n      line.offsetLeft = hPos;\r\n      line.offsetTop = vPos;\r\n      line.x = cell.x + hPos;\r\n      line.y = cell.y + textHeight + vPos;\r\n      textHeight += line.height;\r\n      fillText(line.value, line.x, line.y);\r\n    }\r\n    if (self.attributes.debug && cell.active) {\r\n      requestAnimationFrame(function () {\r\n        self.ctx.font = self.style.debugFont;\r\n        self.ctx.fillStyle = self.style.debugColor;\r\n        fillText(\r\n          JSON.stringify(\r\n            {\r\n              x: cell.x,\r\n              y: cell.y,\r\n              h: cell.height,\r\n              w: cell.width,\r\n              pw: cell.paddedWidth,\r\n              idx: cell.columnIndex,\r\n              idx_ord: cell.sortColumnIndex,\r\n            },\r\n            null,\r\n            '\\t',\r\n          ),\r\n          cell.x + 14,\r\n          cell.y + 14,\r\n        );\r\n        fillText(\r\n          JSON.stringify(\r\n            cell.text.lines.map(function (l) {\r\n              return { w: l.width, v: l.value.length };\r\n            }),\r\n            null,\r\n            '\\t',\r\n          ),\r\n          cell.x + 14,\r\n          cell.y + 30,\r\n        );\r\n      });\r\n    }\r\n  }\r\n  function getFrozenColumnsWidth() {\r\n    var w = 0,\r\n      s = self.getSchema(),\r\n      x = 0,\r\n      n = Math.min(self.frozenColumn, s.length),\r\n      column;\r\n    hiddenFrozenColumnCount = 0;\r\n    while (x < n) {\r\n      column = s[x];\r\n      if (column.hidden) {\r\n        hiddenFrozenColumnCount += 1;\r\n      } else {\r\n        w += self.getColumnWidth(x);\r\n      }\r\n      x += 1;\r\n    }\r\n    return w;\r\n  }\r\n  /**\r\n   * Redraws the grid. No matter what the change, this is the only method required to refresh everything.\r\n   * @memberof canvasDatagrid\r\n   * @name draw\r\n   * @method\r\n   */\r\n  // r = literal row index\r\n  // rd = row data array\r\n  // i = user order index\r\n  // o = literal data index\r\n  // y = y drawing cursor\r\n  // x = x drawing cursor\r\n  // s = visible schema array\r\n  // cx = current x drawing cursor sub calculation var\r\n  // cy = current y drawing cursor sub calculation var\r\n  // a = static cell (like corner cell)\r\n  // p = perf counter\r\n  // l = data length\r\n  // u = current cell\r\n  // h = current height\r\n  // w = current width\r\n  self.draw = function (internal) {\r\n    if (self.dispatchEvent('beforedraw', {})) {\r\n      return;\r\n    }\r\n    if (!self.isChildGrid && (!self.height || !self.width)) {\r\n      return;\r\n    }\r\n    if (self.isChildGrid && internal) {\r\n      requestAnimationFrame(self.parentGrid.draw);\r\n      return;\r\n    }\r\n    if (self.intf.visible === false) {\r\n      return;\r\n    }\r\n    // initial values\r\n    var checkScrollHeight,\r\n      rowHeaderCell,\r\n      p,\r\n      cx,\r\n      cy,\r\n      treeGrid,\r\n      rowOpen,\r\n      rowHeight,\r\n      cornerCell,\r\n      y,\r\n      x,\r\n      c,\r\n      h,\r\n      w,\r\n      schema,\r\n      rowIndex,\r\n      rowData,\r\n      aCell,\r\n      viewData = self.viewData || [],\r\n      bc = self.style.gridBorderCollapse === 'collapse',\r\n      selectionBorders = [],\r\n      moveBorders = [],\r\n      selectionHandles = [],\r\n      rowHeaders = [],\r\n      l = viewData.length,\r\n      u = self.currentCell || {},\r\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\r\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\r\n      cellHeight = self.style.cellHeight;\r\n    drawCount += 1;\r\n    p = performance.now();\r\n    self.visibleRowHeights = [];\r\n    // if data length has changed, there is no way to know\r\n    if (viewData.length > self.orders.rows.length) {\r\n      self.createRowOrders();\r\n    }\r\n    function drawScrollBars() {\r\n      var drawCorner,\r\n        en = self.scrollBox.entities,\r\n        m = self.style.scrollBarBoxMargin * 2;\r\n      self.ctx.strokeStyle = self.style.scrollBarBorderColor;\r\n      self.ctx.lineWidth = self.style.scrollBarBorderWidth;\r\n      if (self.frozenColumn > 0) {\r\n        en.horizontalBox.x =\r\n          rowHeaderCellWidth +\r\n          self.style.scrollBarBoxMargin +\r\n          self.scrollCache.x[self.frozenColumn - 1] +\r\n          (en.horizontalBar.width -\r\n            self.scrollCache.x[self.frozenColumn - 1] -\r\n            self.scrollBox.scrollBoxWidth) *\r\n            (self.scrollBox.scrollLeft / self.scrollBox.scrollWidth);\r\n      } else {\r\n        en.horizontalBox.x =\r\n          rowHeaderCellWidth +\r\n          self.style.scrollBarBoxMargin +\r\n          (en.horizontalBar.width - self.scrollBox.scrollBoxWidth) *\r\n            (self.scrollBox.scrollLeft / self.scrollBox.scrollWidth);\r\n      }\r\n      en.verticalBox.y =\r\n        columnHeaderCellHeight +\r\n        self.style.scrollBarBoxMargin +\r\n        self.scrollCache.y[self.frozenRow] +\r\n        (en.verticalBar.height -\r\n          self.scrollBox.scrollBoxHeight -\r\n          self.scrollCache.y[self.frozenRow]) *\r\n          (self.scrollBox.scrollTop / self.scrollBox.scrollHeight);\r\n      if (self.scrollBox.horizontalBarVisible) {\r\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\r\n        fillRect(\r\n          en.horizontalBar.x,\r\n          en.horizontalBar.y,\r\n          en.horizontalBar.width + m,\r\n          en.horizontalBar.height,\r\n        );\r\n        strokeRect(\r\n          en.horizontalBar.x,\r\n          en.horizontalBar.y,\r\n          en.horizontalBar.width + m,\r\n          en.horizontalBar.height,\r\n        );\r\n        self.ctx.fillStyle = self.style.scrollBarBoxColor;\r\n        if (self.scrollBox.horizontalBoxVisible) {\r\n          if (/horizontal/.test(u.context)) {\r\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\r\n          }\r\n          radiusRect(\r\n            en.horizontalBox.x,\r\n            en.horizontalBox.y,\r\n            en.horizontalBox.width,\r\n            en.horizontalBox.height,\r\n            self.style.scrollBarBoxBorderRadius,\r\n          );\r\n          self.ctx.stroke();\r\n          self.ctx.fill();\r\n        }\r\n        drawCorner = true;\r\n        self.visibleCells.unshift(en.horizontalBar);\r\n        self.visibleCells.unshift(en.horizontalBox);\r\n      }\r\n      if (self.scrollBox.verticalBarVisible) {\r\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\r\n        fillRect(\r\n          en.verticalBar.x,\r\n          en.verticalBar.y,\r\n          en.verticalBar.width,\r\n          en.verticalBar.height + m,\r\n        );\r\n        strokeRect(\r\n          en.verticalBar.x,\r\n          en.verticalBar.y,\r\n          en.verticalBar.width,\r\n          en.verticalBar.height + m,\r\n        );\r\n        if (self.scrollBox.verticalBoxVisible) {\r\n          self.ctx.fillStyle = self.style.scrollBarBoxColor;\r\n          if (/vertical/.test(u.context)) {\r\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\r\n          }\r\n          radiusRect(\r\n            en.verticalBox.x,\r\n            en.verticalBox.y,\r\n            en.verticalBox.width,\r\n            en.verticalBox.height,\r\n            self.style.scrollBarBoxBorderRadius,\r\n          );\r\n          self.ctx.stroke();\r\n          self.ctx.fill();\r\n        }\r\n        drawCorner = true;\r\n        self.visibleCells.unshift(en.verticalBar);\r\n        self.visibleCells.unshift(en.verticalBox);\r\n      }\r\n      if (drawCorner) {\r\n        //corner\r\n        self.ctx.strokeStyle = self.style.scrollBarCornerBorderColor;\r\n        self.ctx.fillStyle = self.style.scrollBarCornerBackgroundColor;\r\n        radiusRect(\r\n          en.corner.x,\r\n          en.corner.y,\r\n          en.corner.width,\r\n          en.corner.height,\r\n          0,\r\n        );\r\n        self.ctx.stroke();\r\n        self.ctx.fill();\r\n        self.visibleCells.unshift(en.corner);\r\n      }\r\n    }\r\n    function createHandlesOverlayArray(cell) {\r\n      if (self.attributes.allowMovingSelection || self.mobile) {\r\n        if (\r\n          cell.selectionBorderTop &&\r\n          cell.selectionBorderRight &&\r\n          self.mobile\r\n        ) {\r\n          selectionHandles.push([cell, 'tr']);\r\n          cell.selectionHandle = 'tr';\r\n        }\r\n        if (\r\n          cell.selectionBorderTop &&\r\n          cell.selectionBorderLeft &&\r\n          self.mobile\r\n        ) {\r\n          selectionHandles.push([cell, 'tl']);\r\n          cell.selectionHandle = 'tl';\r\n        }\r\n        if (\r\n          cell.selectionBorderBottom &&\r\n          cell.selectionBorderLeft &&\r\n          self.mobile\r\n        ) {\r\n          selectionHandles.push([cell, 'bl']);\r\n          cell.selectionHandle = 'bl';\r\n        }\r\n        if (\r\n          cell.selectionBorderBottom &&\r\n          cell.selectionBorderRight &&\r\n          (self.attributes.selectionHandleBehavior !== 'none' || self.mobile)\r\n        ) {\r\n          selectionHandles.push([cell, 'br']);\r\n          cell.selectionHandle = 'br';\r\n        }\r\n      }\r\n    }\r\n    function createBorderOverlayArray(\r\n      cell,\r\n      drawArray,\r\n      propPrefix,\r\n      offsetPoint,\r\n    ) {\r\n      offsetPoint = offsetPoint || { x: 0, y: 0 };\r\n      cell.selectionBorder = '';\r\n      if (\r\n        !cell.isRowHeader &&\r\n        self.selections[cell.rowIndex + -offsetPoint.y] &&\r\n        self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\r\n          cell.columnIndex + -offsetPoint.x,\r\n        ) !== -1\r\n      ) {\r\n        if (\r\n          (!self.selections[cell.rowIndex - 1 + -offsetPoint.y] ||\r\n            self.selections[cell.rowIndex - 1 + -offsetPoint.y].indexOf(\r\n              cell.columnIndex + -offsetPoint.x,\r\n            ) === -1 ||\r\n            cell.rowIndex === 0) &&\r\n          !cell.isHeader\r\n        ) {\r\n          drawArray.push([cell, 't']);\r\n          cell[propPrefix + 'BorderTop'] = true;\r\n          cell[propPrefix + 'Border'] += 't';\r\n        }\r\n        if (\r\n          !self.selections[cell.rowIndex + 1 + -offsetPoint.y] ||\r\n          self.selections[cell.rowIndex + 1 + -offsetPoint.y].indexOf(\r\n            cell.columnIndex + -offsetPoint.x,\r\n          ) === -1\r\n        ) {\r\n          drawArray.push([cell, 'b']);\r\n          cell[propPrefix + 'BorderBottom'] = true;\r\n          cell[propPrefix + 'Border'] += 'b';\r\n        }\r\n        if (\r\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\r\n          cell.columnIndex === 0 ||\r\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\r\n            cell.columnIndex - 1 + -offsetPoint.x,\r\n          ) === -1\r\n        ) {\r\n          drawArray.push([cell, 'l']);\r\n          cell[propPrefix + 'BorderLeft'] = true;\r\n          cell[propPrefix + 'Border'] += 'l';\r\n        }\r\n        if (\r\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\r\n          cell.columnIndex === schema.length ||\r\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\r\n            cell.columnIndex + 1 + -offsetPoint.x,\r\n          ) === -1\r\n        ) {\r\n          drawArray.push([cell, 'r']);\r\n          cell[propPrefix + 'BorderRight'] = true;\r\n          cell[propPrefix + 'Border'] += 'r';\r\n        }\r\n      }\r\n    }\r\n    function drawCell(rowData, rowOrderIndex, rowIndex) {\r\n      return function drawEach(header, headerIndex, columnOrderIndex) {\r\n        if (header.hidden) {\r\n          return 0;\r\n        }\r\n        var cellStyle = header.style || 'cell',\r\n          cellGridAttributes,\r\n          cell,\r\n          isHeader = /HeaderCell/.test(cellStyle),\r\n          isCorner = /cornerCell/.test(cellStyle),\r\n          isRowHeader = 'rowHeaderCell' === cellStyle,\r\n          isColumnHeader = 'columnHeaderCell' === cellStyle,\r\n          isFilterable =\r\n            self.filterable.rows.includes(rowIndex) &&\r\n            self.filterable.columns.includes(headerIndex),\r\n          wrap = self.style.cellWhiteSpace !== 'nowrap',\r\n          selected =\r\n            self.selections[rowOrderIndex] &&\r\n            self.selections[rowOrderIndex].indexOf(columnOrderIndex) !== -1,\r\n          hovered =\r\n            self.hovers.rowIndex === rowOrderIndex &&\r\n            (self.attributes.hoverMode === 'row' ||\r\n              self.hovers.columnIndex === columnOrderIndex),\r\n          openedFilter =\r\n            self.selectedFilterButton.rowIndex == rowIndex &&\r\n            self.selectedFilterButton.columnIndex == headerIndex,\r\n          active =\r\n            self.activeCell.rowIndex === rowOrderIndex &&\r\n            self.activeCell.columnIndex === columnOrderIndex,\r\n          isColumnHeaderCellCap = cellStyle === 'columnHeaderCellCap',\r\n          rawValue = rowData ? rowData[header.name] : undefined,\r\n          isGrid = header.type === 'canvas-datagrid',\r\n          activeHeader =\r\n            (self.orders.rows[self.activeCell.rowIndex] === rowOrderIndex ||\r\n              self.orders.columns[self.activeCell.columnIndex] ===\r\n                headerIndex) &&\r\n            (columnOrderIndex === -1 || rowOrderIndex === -1)\r\n              ? isRowHeader\r\n                ? 'activeRowHeaderCell'\r\n                : 'activeColumnHeaderCell'\r\n              : false,\r\n          val,\r\n          f = self.formatters[header.type || 'string'],\r\n          orderByArrowSize = 0,\r\n          treeArrowSize = 0,\r\n          cellWidth = self.sizes.columns[headerIndex] || header.width,\r\n          ev = {\r\n            value: rawValue,\r\n            row: rowData,\r\n            header: header,\r\n          };\r\n        if (isColumnHeaderCellCap) {\r\n          cellWidth = w - x;\r\n        }\r\n        // if no data or schema are defined, a width is provided to the stub column\r\n        if (cellWidth === undefined) {\r\n          cellWidth = self.style.cellWidth;\r\n        }\r\n        cellWidth = cellWidth * self.scale;\r\n        if (x + cellWidth + self.style.cellBorderWidth < 0) {\r\n          x += cellWidth + self.style.cellBorderWidth;\r\n        }\r\n        if (active && cellStyle !== 'cornerCell') {\r\n          cellStyle = 'activeCell';\r\n        }\r\n        if (self.visibleRows.indexOf(rowIndex) === -1 && !isHeader) {\r\n          self.visibleRows.push(rowIndex);\r\n        }\r\n        val = self.dispatchEvent('formatcellvalue', ev);\r\n        cx = x;\r\n        cy = y;\r\n        if (cellStyle === 'cornerCell') {\r\n          cx = 0;\r\n          cy = 0;\r\n        } else if (isRowHeader) {\r\n          cx = 0;\r\n        } else if (isHeader) {\r\n          cy = 0;\r\n        }\r\n        cell = {\r\n          type: isGrid ? 'canvas-datagrid-cell' : header.type,\r\n          style: cellStyle,\r\n          nodeType: 'canvas-datagrid-cell',\r\n          x: cx,\r\n          y: cy,\r\n          fontHeight: (self.style[cellStyle + 'FontHeight'] || 0) * self.scale,\r\n          horizontalAlignment: self.style[cellStyle + 'HorizontalAlignment'],\r\n          verticalAlignment: self.style[cellStyle + 'VerticalAlignment'],\r\n          paddingLeft:\r\n            (self.style[cellStyle + 'PaddingLeft'] || 0) * self.scale,\r\n          paddingTop: (self.style[cellStyle + 'PaddingTop'] || 0) * self.scale,\r\n          paddingRight:\r\n            (self.style[cellStyle + 'PaddingRight'] || 0) * self.scale,\r\n          paddingBottom:\r\n            (self.style[cellStyle + 'PaddingBottom'] || 0) * self.scale,\r\n          whiteSpace: self.style.cellWhiteSpace,\r\n          lineHeight: self.style.cellLineHeight,\r\n          lineSpacing: self.style.cellLineSpacing,\r\n          offsetTop: self.canvasOffsetTop + cy,\r\n          offsetLeft: self.canvasOffsetLeft + cx,\r\n          scrollTop: self.scrollBox.scrollTop,\r\n          scrollLeft: self.scrollBox.scrollLeft,\r\n          active: active || activeHeader,\r\n          hovered: hovered,\r\n          selected: selected,\r\n          width: cellWidth,\r\n          height: cellHeight,\r\n          offsetWidth: cellWidth,\r\n          offsetHeight: cellHeight,\r\n          parentNode: self.intf.parentNode,\r\n          offsetParent: self.intf.parentNode,\r\n          data: rowData,\r\n          isCorner: isCorner,\r\n          isHeader: isHeader,\r\n          isColumnHeader: isColumnHeader,\r\n          isColumnHeaderCellCap: isColumnHeaderCellCap,\r\n          isRowHeader: isRowHeader,\r\n          isFilterable: isFilterable,\r\n          openedFilter: openedFilter,\r\n          rowOpen: rowOpen,\r\n          header: header,\r\n\r\n          columnIndex: columnOrderIndex,\r\n          rowIndex: rowOrderIndex,\r\n\r\n          viewRowIndex: rowOrderIndex,\r\n          viewColumnIndex: columnOrderIndex,\r\n\r\n          boundRowIndex: self.getBoundRowIndexFromViewRowIndex(rowOrderIndex),\r\n          boundColumnIndex: self.getBoundColumnIndexFromViewColumnIndex(\r\n            columnOrderIndex,\r\n          ),\r\n\r\n          sortColumnIndex: headerIndex,\r\n          sortRowIndex: rowIndex,\r\n\r\n          isGrid: isGrid,\r\n          isNormal: !isGrid && !isCorner && !isHeader,\r\n          gridId: (self.attributes.name || '') + rowIndex + ':' + headerIndex,\r\n          parentGrid: self.intf,\r\n          innerHTML: '',\r\n          activeHeader: activeHeader,\r\n          value:\r\n            isHeader && !isRowHeader ? header.title || header.name : rawValue,\r\n        };\r\n        cell.calculatedLineHeight =\r\n          cell.fontHeight * cell.lineHeight + cell.lineSpacing;\r\n        cell.paddedWidth = cell.width - cell.paddingRight - cell.paddingLeft;\r\n        cell.paddedHeight = cell.height - cell.paddingTop - cell.paddingBottom;\r\n        ev.cell = cell;\r\n        cell.userHeight = cell.isHeader ? self.sizes.rows[-1] : rowHeight;\r\n        cell.userWidth = cell.isHeader\r\n          ? self.sizes.columns.cornerCell\r\n          : self.sizes.columns[headerIndex];\r\n        self.visibleCells.unshift(cell);\r\n        if (self.dispatchEvent('beforerendercell', ev)) {\r\n          return;\r\n        }\r\n        self.ctx.fillStyle = self.style[cellStyle + 'BackgroundColor'];\r\n        self.ctx.strokeStyle = self.style[cellStyle + 'BorderColor'];\r\n        self.ctx.lineWidth = self.style[cellStyle + 'BorderWidth'];\r\n        if (hovered) {\r\n          self.ctx.fillStyle = self.style[cellStyle + 'HoverBackgroundColor'];\r\n          self.ctx.strokeStyle = self.style[cellStyle + 'HoverBorderColor'];\r\n        }\r\n        if (selected) {\r\n          self.ctx.fillStyle =\r\n            self.style[cellStyle + 'SelectedBackgroundColor'];\r\n          self.ctx.strokeStyle = self.style[cellStyle + 'SelectedBorderColor'];\r\n        }\r\n        if (activeHeader) {\r\n          self.ctx.fillStyle = self.style[activeHeader + 'BackgroundColor'];\r\n        }\r\n        self.dispatchEvent('rendercell', ev);\r\n        if (cell.isGrid) {\r\n          if (cell.height !== rowHeight) {\r\n            cell.height = rowHeight || self.style.cellHeightWithChildGrid;\r\n            checkScrollHeight = true;\r\n          }\r\n          cell.width =\r\n            self.sizes.columns[headerIndex] ||\r\n            self.style.cellWidthWithChildGrid;\r\n        }\r\n        if (rowOpen && !cell.isRowHeader) {\r\n          cell.height = self.sizes.rows[rowIndex] || self.style.cellHeight;\r\n        }\r\n        if (!cell.isGrid) {\r\n          fillRect(cx, cy, cell.width, cell.height);\r\n          strokeRect(cx, cy, cell.width, cell.height);\r\n        }\r\n        self.ctx.save();\r\n        radiusRect(cell.x, cell.y, cell.width, cell.height, 0);\r\n        self.ctx.clip();\r\n        self.dispatchEvent('afterrendercell', ev);\r\n        if (cell.height !== cellHeight && !(rowOpen && !cell.isRowHeader)) {\r\n          self.sizes.rows[isHeader ? -1 : rowIndex] = cell.height;\r\n          checkScrollHeight = true;\r\n        }\r\n        if (cell.width !== cellWidth) {\r\n          self.sizes.columns[headerIndex] = cell.width;\r\n          checkScrollHeight = true;\r\n        }\r\n        if (isRowHeader && self.attributes.tree) {\r\n          if (!self.dispatchEvent('rendertreearrow', ev)) {\r\n            treeArrowSize = drawTreeArrow(\r\n              cell,\r\n              self.style[cellStyle + 'PaddingLeft'],\r\n              cy,\r\n              0,\r\n            );\r\n          }\r\n        }\r\n        if ((self.attributes.showRowNumbers && isRowHeader) || !isRowHeader) {\r\n          if (cell.isGrid && !self.dispatchEvent('beforerendercellgrid', ev)) {\r\n            if (!self.childGrids[cell.gridId]) {\r\n              // HACK: this only allows setting of the child grids styles if data is set _after_\r\n              // this is less than desirable.  An interface needs to be made to effect the\r\n              // style of all cell grids.  One for individual grids already exists.\r\n              cellGridAttributes = self.cellGridAttributes;\r\n              cellGridAttributes.name = self.attributes.saveAppearance\r\n                ? cell.gridId\r\n                : undefined;\r\n              cellGridAttributes.component = false;\r\n              cellGridAttributes.parentNode = cell;\r\n              cellGridAttributes.data = rawValue;\r\n              ev.cellGridAttributes = cellGridAttributes;\r\n              if (self.dispatchEvent('beforecreatecellgrid', ev)) {\r\n                return;\r\n              }\r\n              self.childGrids[cell.gridId] = self.createGrid(\r\n                cellGridAttributes,\r\n              );\r\n              self.sizes.rows[rowIndex] =\r\n                self.sizes.rows[rowIndex] || self.style.cellGridHeight;\r\n              checkScrollHeight = true;\r\n            }\r\n            cell.grid = self.childGrids[cell.gridId];\r\n            cell.grid.parentNode = cell;\r\n            cell.grid.visible = true;\r\n            cell.grid.draw();\r\n            self.dispatchEvent('rendercellgrid', ev);\r\n          } else if (!cell.isGrid) {\r\n            if (self.childGrids[cell.gridId]) {\r\n              self.childGrids[cell.gridId].parentNode.offsetHeight = 0;\r\n            }\r\n            if (isHeader && self.orderBy === header.name) {\r\n              if (!self.dispatchEvent('renderorderbyarrow', ev)) {\r\n                orderByArrowSize = drawOrderByArrow(\r\n                  cx + self.style[cellStyle + 'PaddingLeft'],\r\n                  0,\r\n                );\r\n              }\r\n            }\r\n            self.ctx.fillStyle = self.style[cellStyle + 'Color'];\r\n            if (hovered) {\r\n              self.ctx.fillStyle = self.style[cellStyle + 'HoverColor'];\r\n            }\r\n            if (selected) {\r\n              self.ctx.fillStyle = self.style[cellStyle + 'SelectedColor'];\r\n            }\r\n            if (activeHeader) {\r\n              self.ctx.fillStyle = self.style[activeHeader + 'Color'];\r\n            }\r\n            cell.treeArrowWidth = treeArrowSize;\r\n            cell.orderByArrowWidth = orderByArrowSize;\r\n            // create text ref to see if height needs to expand\r\n            val = val !== undefined ? val : f ? f(ev) : '';\r\n            if (val === undefined && !f) {\r\n              val = '';\r\n              console.warn(\r\n                'canvas-datagrid: Unknown format ' +\r\n                  header.type +\r\n                  ' add a cellFormater',\r\n              );\r\n            }\r\n            cell.formattedValue = (val !== undefined && val !== null\r\n              ? val\r\n              : ''\r\n            ).toString();\r\n            if (\r\n              self.columnFilters &&\r\n              self.columnFilters[val] !== undefined &&\r\n              isHeader\r\n            ) {\r\n              cell.formattedValue = self.attributes.filterTextPrefix + val;\r\n            }\r\n            self.ctx.font =\r\n              self.style[cellStyle + 'FontHeight'] * self.scale +\r\n              'px ' +\r\n              self.style[cellStyle + 'FontName'];\r\n            if (!self.dispatchEvent('formattext', ev)) {\r\n              cell.text = wrapText(cell, ' ');\r\n            }\r\n            if (!self.dispatchEvent('rendertext', ev)) {\r\n              if (cell.innerHTML || header.type === 'html') {\r\n                drawHtml(cell);\r\n              } else {\r\n                drawText(cell);\r\n              }\r\n\r\n              if (wrap && cell.text && cell.text.height > rowHeight) {\r\n                self.sizes.rows[isHeader ? -1 : rowIndex] = cell.text.height;\r\n                checkScrollHeight = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (active) {\r\n          aCell = cell;\r\n        }\r\n        createBorderOverlayArray(cell, selectionBorders, 'selection');\r\n        // createBorderOverlayArray calculates data for createHandlesOverlayArray so it must go 2nd\r\n        createHandlesOverlayArray(cell);\r\n        if (self.movingSelection) {\r\n          createBorderOverlayArray(cell, moveBorders, 'move', self.moveOffset);\r\n        }\r\n        self.ctx.restore();\r\n\r\n        if (isFilterable) {\r\n          drawFilterButton(cell);\r\n        }\r\n\r\n        // Gaps may occur in row numbers between consecutively rendered rows\r\n        // when we are filtering. We draw attention to this by drawing a thick\r\n        // border overlapping the two consecutive row headers. If sorting, visible\r\n        // row numbers stay the same (i.e. they don't correspond to the underlying\r\n        // data's row number), so we do not show row gaps in that case.\r\n        const isSorting =\r\n          self.orderings.columns && self.orderings.columns.length > 0;\r\n\r\n        if (\r\n          isRowHeader &&\r\n          self.attributes.showRowNumbers &&\r\n          self.attributes.showRowNumberGaps &&\r\n          isSorting === false\r\n        ) {\r\n          const previousRowNumber = self.getBoundRowIndexFromViewRowIndex(\r\n            rowOrderIndex - 1,\r\n          );\r\n          const hasRowGap =\r\n            previousRowNumber !== undefined &&\r\n            cell.boundRowIndex > 0 &&\r\n            cell.boundRowIndex - previousRowNumber > 1;\r\n\r\n          if (hasRowGap) {\r\n            const barHeight = self.style.rowHeaderCellRowNumberGapHeight;\r\n            const barColor = self.style.rowHeaderCellRowNumberGapColor;\r\n\r\n            self.ctx.save();\r\n\r\n            self.ctx.fillStyle = barColor;\r\n\r\n            fillRect(cell.x, cell.y - barHeight / 2, cell.width, barHeight);\r\n\r\n            self.ctx.restore();\r\n          }\r\n        }\r\n\r\n        x += cell.width + (bc ? 0 : self.style.cellBorderWidth);\r\n        return cell.width;\r\n      };\r\n    }\r\n    function drawFilterButton(cell, ev) {\r\n      var posX = cell.x + cell.width - self.style.filterButtonWidth - 1;\r\n      var posY = cell.y + cell.height - self.style.filterButtonHeight - 2;\r\n      if (self.dispatchEvent('beforerenderfilterbutton', ev)) {\r\n        return;\r\n      }\r\n      self.ctx.save();\r\n      self.ctx.strokeStyle = self.style.filterButtonBorderColor;\r\n      self.ctx.fillStyle = self.style.filterButtonBackgroundColor;\r\n      if (cell.openedFilter) {\r\n        self.ctx.fillStyle = self.style.filterButtonActiveBackgroundColor;\r\n      } else if (cell.hovered && self.hovers.onFilterButton) {\r\n        self.ctx.fillStyle = self.style.filterButtonHoverBackgroundColor;\r\n      }\r\n      radiusRect(\r\n        posX,\r\n        posY,\r\n        self.style.filterButtonWidth,\r\n        self.style.filterButtonHeight,\r\n        self.style.filterButtonBorderRadius,\r\n      );\r\n      self.ctx.stroke();\r\n      self.ctx.fill();\r\n      drawFilterButtonArrow(posX, posY);\r\n      self.ctx.clip();\r\n      self.dispatchEvent('afterrenderfilterbutton', ev);\r\n      self.ctx.restore();\r\n    }\r\n    function drawRowHeader(rowData, rowIndex, rowOrderIndex) {\r\n      if (self.attributes.showRowHeaders) {\r\n        x = 0;\r\n\r\n        // When filtering we'd like to display the actual row numbers,\r\n        // as it is in the unfiltered data, instead of simply the viewed\r\n        // row index + 1. If rowIndex > viewData.length, it's a new row\r\n        // added to the end, and we want to render that new row's number\r\n        const filteredRowNumber =\r\n          self.viewData && rowIndex < self.viewData.length\r\n            ? self.getBoundRowIndexFromViewRowIndex(rowIndex) + 1\r\n            : self.originalData\r\n            ? self.originalData.length + 1\r\n            : rowOrderIndex + 1;\r\n\r\n        const rowHeaderValue = self.hasActiveFilters()\r\n          ? filteredRowNumber\r\n          : rowIndex + 1;\r\n\r\n        const rowHeaderCell = { rowHeaderCell: rowHeaderValue };\r\n        const headerDescription = {\r\n          name: 'rowHeaderCell',\r\n          width: self.sizes.columns[-1] || self.style.rowHeaderCellWidth,\r\n          style: 'rowHeaderCell',\r\n          type: 'string',\r\n          data: rowHeaderValue,\r\n          index: -1,\r\n        };\r\n        rowOpen = self.openChildren[rowIndex];\r\n        drawCell(rowHeaderCell, rowOrderIndex, rowIndex)(\r\n          headerDescription,\r\n          -1,\r\n          -1,\r\n        );\r\n      }\r\n    }\r\n    function drawHeaders() {\r\n      var d,\r\n        g = schema.length,\r\n        i,\r\n        o,\r\n        columnHeaderCell,\r\n        header,\r\n        nonFrozenHeaderWidth;\r\n      function drawHeaderColumnRange(start, end) {\r\n        end = Math.min(end, g);\r\n        for (o = start; o < end; o += 1) {\r\n          i = self.orders.columns[o];\r\n          header = schema[i];\r\n          if (!header.hidden) {\r\n            d = {\r\n              title: header.title,\r\n              name: header.name,\r\n              width: header.width || self.style.cellWidth,\r\n              style: 'columnHeaderCell',\r\n              type: 'string',\r\n              index: o,\r\n              order: i,\r\n            };\r\n            columnHeaderCell = {\r\n              columnHeaderCell: header.title || header.name,\r\n            };\r\n            x += drawCell(columnHeaderCell, -1, -1)(d, i, o);\r\n            if (x > self.width + self.scrollBox.scrollLeft) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      rowHeaders.forEach(function (rArgs, rhIndex) {\r\n        y = rArgs[3];\r\n        cellHeight = rArgs[4];\r\n        if (rhIndex === self.frozenRow) {\r\n          self.ctx.save();\r\n          radiusRect(\r\n            0,\r\n            self.lastFrozenRowPixel,\r\n            self.width,\r\n            self.height - self.lastFrozenRowPixel,\r\n            0,\r\n          );\r\n          self.ctx.clip();\r\n        }\r\n        drawRowHeader(rArgs[0], rArgs[1], rArgs[2]);\r\n      });\r\n      self.ctx.restore();\r\n      if (self.attributes.showColumnHeaders) {\r\n        x =\r\n          -self.scrollBox.scrollLeft +\r\n          self.scrollPixelLeft +\r\n          self.style.columnHeaderCellBorderWidth;\r\n        if (self.attributes.showRowHeaders) {\r\n          x += rowHeaderCellWidth;\r\n        }\r\n        y = 0;\r\n        // cell height might have changed during drawing\r\n        cellHeight = self.getColumnHeaderCellHeight();\r\n        drawHeaderColumnRange(self.scrollIndexLeft, g);\r\n        nonFrozenHeaderWidth = x;\r\n        x = self.style.columnHeaderCellBorderWidth;\r\n        if (self.attributes.showRowHeaders) {\r\n          x += rowHeaderCellWidth;\r\n        }\r\n        drawHeaderColumnRange(0, self.frozenColumn);\r\n        // fill in the space right of the headers\r\n        x = nonFrozenHeaderWidth;\r\n        if (x < w) {\r\n          c = {\r\n            name: '',\r\n            width: self.style.scrollBarWidth,\r\n            style: 'columnHeaderCellCap',\r\n            isColumnHeaderCell: true,\r\n            isColumnHeaderCellCap: true,\r\n            type: 'string',\r\n            index: schema.length,\r\n          };\r\n          drawCell({ endCap: '' }, -1, -1)(c, -1, -1);\r\n        }\r\n        // fill in the space right of the headers\r\n        if (self.attributes.showRowHeaders) {\r\n          cornerCell = { cornerCell: '' };\r\n          x = 0;\r\n          c = {\r\n            name: 'cornerCell',\r\n            width: self.style.rowHeaderCellWidth,\r\n            style: 'cornerCell',\r\n            type: 'string',\r\n            index: -1,\r\n          };\r\n          drawCell(cornerCell, -1, -1)(c, -1, -1);\r\n        }\r\n      }\r\n    }\r\n    function drawRow(rowOrderIndex, rowIndex) {\r\n      var headerIndex,\r\n        treeHeight,\r\n        rowSansTreeHeight,\r\n        columnOrderIndex,\r\n        g = schema.length;\r\n      if (y - cellHeight * 2 > h) {\r\n        return false;\r\n      }\r\n      rowData = viewData[rowOrderIndex];\r\n      rowOpen = self.openChildren[rowOrderIndex];\r\n      rowSansTreeHeight =\r\n        (self.sizes.rows[rowOrderIndex] || self.style.cellHeight) * self.scale;\r\n      treeHeight = (rowOpen ? self.sizes.trees[rowOrderIndex] : 0) * self.scale;\r\n      rowHeight = rowSansTreeHeight + treeHeight;\r\n      if (y < -rowHeight) {\r\n        return false;\r\n      }\r\n      if (self.attributes.showRowHeaders) {\r\n        x += rowHeaderCellWidth;\r\n      }\r\n      cellHeight = rowHeight;\r\n      //draw normal columns\r\n      for (\r\n        columnOrderIndex = self.scrollIndexLeft;\r\n        columnOrderIndex < g;\r\n        columnOrderIndex += 1\r\n      ) {\r\n        headerIndex = self.orders.columns[columnOrderIndex];\r\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\r\n          schema[headerIndex],\r\n          headerIndex,\r\n          columnOrderIndex,\r\n        );\r\n        if (x > self.width) {\r\n          self.scrollIndexRight = columnOrderIndex;\r\n          self.scrollPixelRight = x;\r\n          break;\r\n        }\r\n      }\r\n      //draw frozen columns\r\n      x = 0;\r\n      if (self.attributes.showRowHeaders) {\r\n        x += rowHeaderCellWidth;\r\n      }\r\n      for (\r\n        columnOrderIndex = 0;\r\n        columnOrderIndex < self.frozenColumn;\r\n        columnOrderIndex += 1\r\n      ) {\r\n        headerIndex = self.orders.columns[columnOrderIndex];\r\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\r\n          schema[headerIndex],\r\n          headerIndex,\r\n          columnOrderIndex,\r\n        );\r\n        if (x > self.width) {\r\n          break;\r\n        }\r\n      }\r\n      self.lastFrozenColumnPixel = x;\r\n      // cell height might have changed during drawing\r\n      cellHeight = rowHeight;\r\n      x =\r\n        -self.scrollBox.scrollLeft +\r\n        self.scrollPixelLeft +\r\n        self.style.cellBorderWidth;\r\n      // don't draw a tree for the new row\r\n      treeGrid = self.childGrids[rowOrderIndex];\r\n      if (rowOrderIndex !== viewData.length && rowOpen) {\r\n        treeGrid.visible = true;\r\n        treeGrid.parentNode = {\r\n          offsetTop: y + rowSansTreeHeight + self.canvasOffsetTop,\r\n          offsetLeft: rowHeaderCellWidth - 1 + self.canvasOffsetLeft,\r\n          offsetHeight: treeHeight,\r\n          offsetWidth:\r\n            self.width - rowHeaderCellWidth - self.style.scrollBarWidth - 1,\r\n          offsetParent: self.intf.parentNode,\r\n          parentNode: self.intf.parentNode,\r\n          style: self.style,\r\n          nodeType: 'canvas-datagrid-tree',\r\n          scrollTop: self.scrollBox.scrollTop,\r\n          scrollLeft: self.scrollBox.scrollLeft,\r\n          rowIndex: rowOrderIndex,\r\n        };\r\n        self.visibleCells.unshift({\r\n          rowIndex: rowOrderIndex,\r\n          columnIndex: 0,\r\n          y: treeGrid.parentNode.offsetTop,\r\n          x: treeGrid.parentNode.offsetLeft,\r\n          height: treeGrid.height,\r\n          width: treeGrid.width,\r\n          style: 'tree-grid',\r\n          type: treeGrid.parentNode.nodeType,\r\n        });\r\n        treeGrid.draw();\r\n      } else if (treeGrid) {\r\n        treeGrid.parentNode.offsetHeight = 0;\r\n        delete self.sizes.trees[rowOrderIndex];\r\n      }\r\n      rowHeaders.push([rowData, rowOrderIndex, rowIndex, y, rowHeight]);\r\n      self.visibleRowHeights[rowOrderIndex] = rowHeight;\r\n      y += cellHeight + (bc ? 0 : self.style.cellBorderWidth);\r\n      return true;\r\n    }\r\n    function initDraw() {\r\n      self.visibleRows = [];\r\n      schema = self.getSchema();\r\n      self.visibleCells = [];\r\n      self.canvasOffsetTop = self.isChildGrid ? self.parentNode.offsetTop : 0.5;\r\n      self.canvasOffsetLeft = self.isChildGrid\r\n        ? self.parentNode.offsetLeft\r\n        : -0.5;\r\n      h = self.height;\r\n      w = self.width;\r\n    }\r\n    function drawBackground() {\r\n      radiusRect(0, 0, w, h, 0);\r\n      self.ctx.clip();\r\n      self.ctx.fillStyle = self.style.gridBackgroundColor;\r\n      fillRect(0, 0, w, h);\r\n    }\r\n    function drawFrozenRows() {\r\n      var rowOrderIndex,\r\n        ln = Math.min(viewData.length, self.frozenRow);\r\n      x =\r\n        -self.scrollBox.scrollLeft +\r\n        self.scrollPixelLeft +\r\n        self.style.cellBorderWidth;\r\n      y = columnHeaderCellHeight;\r\n      for (rowIndex = 0; rowIndex < ln; rowIndex += 1) {\r\n        rowOrderIndex = self.orders.rows[rowIndex];\r\n        if (!drawRow(rowOrderIndex, rowIndex)) {\r\n          break;\r\n        }\r\n      }\r\n      if (self.attributes.allowFreezingRows) {\r\n        // HACK great, another stupid magic number.\r\n        // Background will appear as a 0.5px artifact behind the row freeze bar without this hack\r\n        y +=\r\n          self.style.frozenMarkerBorderWidth +\r\n          self.style.frozenMarkerWidth -\r\n          0.4999999999;\r\n      }\r\n      self.lastFrozenRowPixel = y;\r\n    }\r\n    function drawRows() {\r\n      self.ctx.save();\r\n      if (self.frozenRow > 0) {\r\n        radiusRect(\r\n          0,\r\n          self.lastFrozenRowPixel,\r\n          self.width,\r\n          self.height - self.lastFrozenRowPixel,\r\n          0,\r\n        );\r\n        self.ctx.clip();\r\n      }\r\n      var columnOrderIndex,\r\n        rowOrderIndex,\r\n        headerIndex,\r\n        g = schema.length;\r\n      x =\r\n        -self.scrollBox.scrollLeft +\r\n        self.scrollPixelLeft +\r\n        self.style.cellBorderWidth;\r\n      if (!self.attributes.snapToRow) {\r\n        y +=\r\n          -self.scrollBox.scrollTop +\r\n          self.scrollPixelTop +\r\n          self.style.cellBorderWidth;\r\n      }\r\n      for (\r\n        rowIndex = self.frozenRow + self.scrollIndexTop;\r\n        rowIndex < l;\r\n        rowIndex += 1\r\n      ) {\r\n        rowOrderIndex = self.orders.rows[rowIndex];\r\n        self.scrollIndexBottom = rowIndex;\r\n        self.scrollPixelBottom = y;\r\n        if (!drawRow(rowOrderIndex, rowIndex)) {\r\n          break;\r\n        }\r\n      }\r\n      if (self.attributes.showNewRow) {\r\n        if (self.attributes.showRowHeaders) {\r\n          x += rowHeaderCellWidth;\r\n        }\r\n        rowHeight = cellHeight = self.style.cellHeight;\r\n        rowOpen = false;\r\n        for (\r\n          columnOrderIndex = self.scrollIndexLeft;\r\n          columnOrderIndex < g;\r\n          columnOrderIndex += 1\r\n        ) {\r\n          headerIndex = self.orders.columns[columnOrderIndex];\r\n          x += drawCell(self.newRow, viewData.length, viewData.length)(\r\n            schema[headerIndex],\r\n            headerIndex,\r\n            columnOrderIndex,\r\n          );\r\n          if (x > self.width + self.scrollBox.scrollLeft) {\r\n            break;\r\n          }\r\n        }\r\n        rowHeaders.push([\r\n          self.newRow,\r\n          viewData.length,\r\n          viewData.length,\r\n          y,\r\n          rowHeight,\r\n        ]);\r\n      }\r\n      self.ctx.restore();\r\n    }\r\n    function drawMoveMarkers() {\r\n      if (!self.movingSelection) {\r\n        return;\r\n      }\r\n      self.ctx.lineWidth = self.style.moveOverlayBorderWidth;\r\n      self.ctx.strokeStyle = self.style.moveOverlayBorderColor;\r\n      self.ctx.setLineDash(self.style.moveOverlayBorderSegments);\r\n      moveBorders.forEach(function (c) {\r\n        addBorderLine(c[0], c[1]);\r\n      });\r\n      self.ctx.setLineDash([]);\r\n    }\r\n    function drawReorderMarkers() {\r\n      if (!self.reorderObject) {\r\n        return;\r\n      }\r\n      var b = {\r\n          height: self.reorderObject.height,\r\n          width: self.reorderObject.width,\r\n          x: self.reorderObject.x + self.reorderObject.dragOffset.x,\r\n          y: self.reorderObject.y + self.reorderObject.dragOffset.y,\r\n        },\r\n        m = {\r\n          width: w,\r\n          height: h,\r\n          x: 0,\r\n          y: 0,\r\n        };\r\n      self.ctx.fillStyle = self.style.reorderMarkerBackgroundColor;\r\n      self.ctx.lineWidth = self.style.reorderMarkerBorderWidth;\r\n      self.ctx.strokeStyle = self.style.reorderMarkerBorderColor;\r\n      if (self.dragMode === 'row-reorder') {\r\n        for (var k = 0; k < self.selections.length; k++) {\r\n          if (!self.selections[k] || k == self.reorderObject.rowIndex) continue;\r\n          b.height += self.getRowHeight(k);\r\n        }\r\n        b.width = w;\r\n        b.x = 0;\r\n        m.width = w;\r\n        m.height = self.currentCell.height;\r\n        m.y = self.currentCell.y;\r\n        fillRect(b.x, b.y, b.width, b.height);\r\n        strokeRect(b.x, b.y, b.width, b.height);\r\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\r\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\r\n        if (\r\n          self.currentCell.rowIndex !== self.reorderObject.rowIndex &&\r\n          self.currentCell.rowIndex > -1 &&\r\n          self.currentCell.rowIndex < l\r\n        ) {\r\n          addBorderLine(\r\n            m,\r\n            self.reorderTarget.sortRowIndex > self.reorderObject.sortRowIndex\r\n              ? 'b'\r\n              : 't',\r\n          );\r\n        }\r\n      } else if (self.dragMode === 'column-reorder' && self.reorderObject) {\r\n        var selectedColumns = self.selections[0];\r\n        for (var k = 1; k < selectedColumns.length; k++) {\r\n          b.width += self.getColumnWidth(\r\n            self.orders.columns[selectedColumns[k]],\r\n          );\r\n        }\r\n        b.height = h;\r\n        b.y = 0;\r\n        m.height = h;\r\n        m.width = self.currentCell.width;\r\n        m.y = 0;\r\n        m.x = self.currentCell.x;\r\n        fillRect(b.x, b.y, b.width, b.height);\r\n        strokeRect(b.x, b.y, b.width, b.height);\r\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\r\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\r\n        if (\r\n          self.currentCell.sortColumnIndex !==\r\n            self.reorderObject.sortColumnIndex &&\r\n          self.currentCell.sortColumnIndex > -1 &&\r\n          self.currentCell.sortColumnIndex < schema.length\r\n        ) {\r\n          addBorderLine(\r\n            m,\r\n            self.reorderTarget.columnIndex > self.reorderObject.columnIndex\r\n              ? 'r'\r\n              : 'l',\r\n          );\r\n        }\r\n      }\r\n    }\r\n    function drawBorder() {\r\n      self.ctx.lineWidth = self.style.gridBorderWidth;\r\n      self.ctx.strokeStyle = self.style.gridBorderColor;\r\n      strokeRect(0, 0, self.width, self.height);\r\n    }\r\n    function drawSelectionBorders() {\r\n      self.ctx.lineWidth = self.style.selectionOverlayBorderWidth;\r\n      self.ctx.strokeStyle = self.style.selectionOverlayBorderColor;\r\n      function dsb(c) {\r\n        addBorderLine(c[0], c[1]);\r\n      }\r\n      selectionBorders\r\n        .filter(function (c) {\r\n          return (\r\n            c[0].rowIndex < self.frozenRow &&\r\n            c[0].columnIndex < self.frozenColumn\r\n          );\r\n        })\r\n        .forEach(dsb);\r\n      self.ctx.save();\r\n      clipFrozenArea(0);\r\n      selectionBorders\r\n        .filter(function (c) {\r\n          return (\r\n            c[0].rowIndex >= self.frozenRow &&\r\n            c[0].columnIndex >= self.frozenColumn\r\n          );\r\n        })\r\n        .forEach(dsb);\r\n      self.ctx.restore();\r\n      self.ctx.save();\r\n      clipFrozenArea(1);\r\n      selectionBorders\r\n        .filter(function (c) {\r\n          return (\r\n            c[0].rowIndex >= self.frozenRow &&\r\n            c[0].columnIndex < self.frozenColumn\r\n          );\r\n        })\r\n        .forEach(dsb);\r\n      self.ctx.restore();\r\n      self.ctx.save();\r\n      clipFrozenArea(2);\r\n      selectionBorders\r\n        .filter(function (c) {\r\n          return (\r\n            c[0].rowIndex < self.frozenRow &&\r\n            c[0].columnIndex >= self.frozenColumn\r\n          );\r\n        })\r\n        .forEach(dsb);\r\n      self.ctx.restore();\r\n    }\r\n    function drawSelectionHandles() {\r\n      if (self.mobile || self.attributes.allowMovingSelection) {\r\n        self.ctx.lineWidth = self.style.selectionHandleBorderWidth;\r\n        self.ctx.strokeStyle = self.style.selectionHandleBorderColor;\r\n        self.ctx.fillStyle = self.style.selectionHandleColor;\r\n        selectionHandles.forEach(function (c) {\r\n          addselectionHandle(c[0], c[1]);\r\n          var az = self.attributes.touchSelectHandleZone / 2,\r\n            ax =\r\n              c[0].x + (c[1] === 'tl' || c[1] === 'bl' ? 0 : c[0].width) - az,\r\n            ay =\r\n              c[0].y + (c[1] === 'bl' || c[1] === 'br' ? c[0].height : 0) - az;\r\n          self.visibleCells.unshift({\r\n            x: ax,\r\n            y: ay,\r\n            height: self.style.selectionHandleSize + az,\r\n            width: self.style.selectionHandleSize + az,\r\n            style: 'selection-handle-' + c[1],\r\n          });\r\n        });\r\n      }\r\n    }\r\n    function drawActiveCell() {\r\n      if (!aCell) {\r\n        return;\r\n      }\r\n      self.ctx.save();\r\n      var cl =\r\n          self.activeCell.columnIndex + 1 > self.frozenColumn ||\r\n          self.activeCell.rowIndex + 1 > self.frozenRow,\r\n        acx = cl ? self.lastFrozenColumnPixel : 0,\r\n        acy = cl ? self.lastFrozenRowPixel : 0,\r\n        acw = cl ? self.width - self.lastFrozenColumnPixel : self.width,\r\n        ach = cl ? self.height - self.lastFrozenRowPixel : self.height;\r\n      radiusRect(acx, acy, acw, ach, 0);\r\n      self.ctx.clip();\r\n      if (self.attributes.selectionMode === 'row') {\r\n        if (self.activeCell && self.activeCell.rowIndex === aCell.rowIndex) {\r\n          self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\r\n          self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\r\n          strokeRect(\r\n            1,\r\n            aCell.y,\r\n            self.getHeaderWidth() + rowHeaderCellWidth,\r\n            self.visibleRowHeights[aCell.rowIndex],\r\n          );\r\n        }\r\n      } else {\r\n        self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\r\n        self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\r\n        strokeRect(aCell.x, aCell.y, aCell.width, aCell.height);\r\n      }\r\n      self.ctx.restore();\r\n    }\r\n    function drawFrozenMarkers() {\r\n      var my = self.lastFrozenRowPixel - self.style.frozenMarkerWidth,\r\n        mx = self.lastFrozenColumnPixel - self.style.frozenMarkerBorderWidth,\r\n        xHover =\r\n          self.currentCell && self.currentCell.style === 'frozen-row-marker',\r\n        yHover =\r\n          self.currentCell && self.currentCell.style === 'frozen-column-marker';\r\n      self.ctx.lineWidth = self.style.frozenMarkerBorderWidth;\r\n      if (self.attributes.allowFreezingColumns) {\r\n        self.ctx.fillStyle = yHover\r\n          ? self.style.frozenMarkerHoverColor\r\n          : self.style.frozenMarkerColor;\r\n        self.ctx.strokeStyle = yHover\r\n          ? self.style.frozenMarkerHoverBorderColor\r\n          : self.style.frozenMarkerBorderColor;\r\n        fillRect(mx, 0, self.style.frozenMarkerWidth, self.height);\r\n        strokeRect(mx, 0, self.style.frozenMarkerWidth, self.height);\r\n        self.visibleCells.unshift({\r\n          x: mx,\r\n          y: 0,\r\n          height: self.height,\r\n          width:\r\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\r\n          style: 'frozen-column-marker',\r\n        });\r\n      }\r\n      if (self.attributes.allowFreezingRows) {\r\n        self.ctx.fillStyle = xHover\r\n          ? self.style.frozenMarkerHoverColor\r\n          : self.style.frozenMarkerColor;\r\n        self.ctx.strokeStyle = xHover\r\n          ? self.style.frozenMarkerHoverBorderColor\r\n          : self.style.frozenMarkerBorderColor;\r\n        fillRect(0, my, self.width, self.style.frozenMarkerWidth);\r\n        strokeRect(0, my, self.width, self.style.frozenMarkerWidth);\r\n        self.visibleCells.unshift({\r\n          x: 0,\r\n          y: my,\r\n          height:\r\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\r\n          width: self.width,\r\n          style: 'frozen-row-marker',\r\n        });\r\n      }\r\n      if (self.freezeMarkerPosition) {\r\n        self.ctx.fillStyle = self.style.frozenMarkerActiveColor;\r\n        self.ctx.strokeStyle = self.style.frozenMarkerActiveBorderColor;\r\n        if (self.dragMode === 'frozen-column-marker') {\r\n          fillRect(\r\n            self.freezeMarkerPosition.x,\r\n            0,\r\n            self.style.frozenMarkerWidth,\r\n            self.height,\r\n          );\r\n          strokeRect(\r\n            self.freezeMarkerPosition.x,\r\n            0,\r\n            self.style.frozenMarkerWidth,\r\n            self.height,\r\n          );\r\n        } else {\r\n          fillRect(\r\n            0,\r\n            self.freezeMarkerPosition.y,\r\n            self.width,\r\n            self.style.frozenMarkerWidth,\r\n          );\r\n          strokeRect(\r\n            0,\r\n            self.freezeMarkerPosition.y,\r\n            self.width,\r\n            self.style.frozenMarkerWidth,\r\n          );\r\n        }\r\n      }\r\n    }\r\n    function drawPerfLines() {\r\n      if (!self.attributes.showPerformance) {\r\n        return;\r\n      }\r\n      var pw = 250,\r\n        px =\r\n          self.width -\r\n          pw -\r\n          self.style.scrollBarWidth -\r\n          self.style.scrollBarBorderWidth * 2,\r\n        py = columnHeaderCellHeight,\r\n        ph = 100;\r\n      if (scrollDebugCounters.length === 0) {\r\n        scrollDebugCounters = fillArray(0, perfWindowSize, 1, function () {\r\n          return [0, 0];\r\n        });\r\n      }\r\n      if (touchPPSCounters.length === 0) {\r\n        touchPPSCounters = fillArray(0, perfWindowSize, 1, function () {\r\n          return [0, 0];\r\n        });\r\n      }\r\n      if (entityCount.length === 0) {\r\n        entityCount = fillArray(0, perfWindowSize, 1, 0);\r\n      }\r\n      self.ctx.lineWidth = 0.5;\r\n      function dpl(name, perfArr, arrIndex, max, color, useAbs, rowIndex) {\r\n        var v;\r\n        drawPerfLine(pw, ph, px, py, perfArr, arrIndex, max, color, useAbs);\r\n        self.ctx.fillStyle = color;\r\n        fillRect(3 + px, py + 9 + rowIndex * 11, 8, 8);\r\n        self.ctx.fillStyle = self.style.debugPerfChartTextColor;\r\n        v = arrIndex !== undefined ? perfArr[0][arrIndex] : perfArr[0];\r\n        fillText(\r\n          name + ' ' + (isNaN(v) ? 0 : v).toFixed(3),\r\n          14 + px,\r\n          py + 16 + rowIndex * 11,\r\n        );\r\n      }\r\n      self.ctx.textAlign = 'left';\r\n      self.ctx.font = self.style.debugFont;\r\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\r\n      fillRect(px, py, pw, ph);\r\n      [\r\n        [\r\n          'Scroll Height',\r\n          scrollDebugCounters,\r\n          0,\r\n          self.scrollBox.scrollHeight,\r\n          self.style.debugScrollHeightColor,\r\n          false,\r\n        ],\r\n        [\r\n          'Scroll Width',\r\n          scrollDebugCounters,\r\n          1,\r\n          self.scrollBox.scrollWidth,\r\n          self.style.debugScrollWidthColor,\r\n          false,\r\n        ],\r\n        [\r\n          'Performance',\r\n          perfCounters,\r\n          undefined,\r\n          200,\r\n          self.style.debugPerformanceColor,\r\n          false,\r\n        ],\r\n        [\r\n          'Entities',\r\n          entityCount,\r\n          undefined,\r\n          1500,\r\n          self.style.debugEntitiesColor,\r\n          false,\r\n        ],\r\n        [\r\n          'TouchPPSX',\r\n          touchPPSCounters,\r\n          0,\r\n          1000,\r\n          self.style.debugTouchPPSXColor,\r\n          true,\r\n        ],\r\n        [\r\n          'TouchPPSY',\r\n          touchPPSCounters,\r\n          1,\r\n          1000,\r\n          self.style.debugTouchPPSYColor,\r\n          true,\r\n        ],\r\n      ].forEach(function (i, index) {\r\n        i.push(index);\r\n        dpl.apply(null, i);\r\n      });\r\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\r\n      entityCount.pop();\r\n      entityCount.unshift(self.visibleCells.length);\r\n      scrollDebugCounters.pop();\r\n      scrollDebugCounters.unshift([\r\n        self.scrollBox.scrollTop,\r\n        self.scrollBox.scrollLeft,\r\n      ]);\r\n      touchPPSCounters.pop();\r\n      touchPPSCounters.unshift([self.yPPS, self.xPPS]);\r\n    }\r\n    function drawDebug() {\r\n      self.ctx.save();\r\n      var d;\r\n      if (self.attributes.showPerformance || self.attributes.debug) {\r\n        if (perfCounters.length === 0) {\r\n          perfCounters = fillArray(0, perfWindowSize, 1, 0);\r\n        }\r\n        perfCounters.pop();\r\n        perfCounters.unshift(performance.now() - p);\r\n      }\r\n      if (!self.attributes.debug) {\r\n        self.ctx.restore();\r\n        return;\r\n      }\r\n      self.ctx.font = self.style.debugFont;\r\n      d = {};\r\n      d.perf = (\r\n        perfCounters.reduce(function (a, b) {\r\n          return a + b;\r\n        }, 0) / Math.min(drawCount, perfCounters.length)\r\n      ).toFixed(1);\r\n      d.perfDelta = perfCounters[0].toFixed(1);\r\n      d.frozenColumnsWidth = getFrozenColumnsWidth();\r\n      d.htmlImages = Object.keys(self.htmlImageCache).length;\r\n      d.reorderObject =\r\n        'x: ' +\r\n        (self.reorderObject || { columnIndex: 0 }).columnIndex +\r\n        ', y: ' +\r\n        (self.reorderObject || { rowIndex: 0 }).rowIndex;\r\n      d.reorderTarget =\r\n        'x: ' +\r\n        (self.reorderTarget || { columnIndex: 0 }).columnIndex +\r\n        ', y: ' +\r\n        (self.reorderTarget || { rowIndex: 0 }).rowIndex;\r\n      d.scale = self.scale;\r\n      d.startScale = self.startScale;\r\n      d.scaleDelta = self.scaleDelta;\r\n      d.zoomDeltaStart = self.zoomDeltaStart;\r\n      d.touchLength = self.touchLength;\r\n      d.touches =\r\n        'y0: ' +\r\n        (self.touchPosition || { y: 0 }).y +\r\n        ' y1: ' +\r\n        (self.touchPosition1 || { y: 0 }).y;\r\n      d.scrollBox = self.scrollBox.toString();\r\n      d.scrollIndex =\r\n        'x: ' + self.scrollIndexLeft + ', y: ' + self.scrollIndexTop;\r\n      d.scrollPixel =\r\n        'x: ' + self.scrollPixelLeft + ', y: ' + self.scrollPixelTop;\r\n      d.canvasOffset =\r\n        'x: ' + self.canvasOffsetLeft + ', y: ' + self.canvasOffsetTop;\r\n      d.touchDelta = 'x: ' + self.touchDelta.x + ', y: ' + self.touchDelta.y;\r\n      d.touchAnimateTo =\r\n        'x: ' + self.touchAnimateTo.x + ', y: ' + self.touchAnimateTo.y;\r\n      d.scrollAnimation =\r\n        'x: ' + self.scrollAnimation.x + ', y: ' + self.scrollAnimation.y;\r\n      d.touchPPS = 'x: ' + self.xPPS + ', y: ' + self.yPPS;\r\n      d.touchPPST = 'x: ' + self.xPPST + ', y: ' + self.yPPST;\r\n      d.touchDuration = self.touchDuration;\r\n      d.pointerLockPosition = self.pointerLockPosition\r\n        ? self.pointerLockPosition.x + ', ' + self.pointerLockPosition.y\r\n        : '';\r\n      d.size = 'w: ' + self.width + ', h: ' + self.height;\r\n      d.mouse = 'x: ' + self.mouse.x + ', y: ' + self.mouse.y;\r\n      d.touch = !self.touchStart\r\n        ? ''\r\n        : 'x: ' + self.touchStart.x + ', y: ' + self.touchStart.y;\r\n      d.entities = self.visibleCells.length;\r\n      d.hasFocus = self.hasFocus;\r\n      d.dragMode = self.dragMode;\r\n      if (self.currentCell) {\r\n        d.columnIndex = self.currentCell.columnIndex;\r\n        d.rowIndex = self.currentCell.rowIndex;\r\n        d.sortColumnIndex = self.currentCell.sortColumnIndex;\r\n        d.sortRowIndex = self.currentCell.sortRowIndex;\r\n        d.context = self.currentCell.context;\r\n        d.dragContext = self.currentCell.dragContext;\r\n        d.style = self.currentCell.style;\r\n        d.type = self.currentCell.type;\r\n      }\r\n      self.ctx.textAlign = 'right';\r\n      self.ctx.fillStyle = self.style.debugBackgroundColor;\r\n      fillRect(0, 0, self.width, self.height);\r\n      Object.keys(d).forEach(function (key, index) {\r\n        var m = key + ': ' + d[key],\r\n          lh = 14;\r\n        self.ctx.fillStyle = self.style.debugColor;\r\n        fillText(\r\n          m,\r\n          w - 20,\r\n          (self.attributes.showPerformance ? 140 : 24) + index * lh,\r\n        );\r\n      });\r\n      self.ctx.restore();\r\n    }\r\n    self.ctx.save();\r\n    initDraw();\r\n    drawBackground();\r\n    drawFrozenRows();\r\n    drawRows();\r\n    drawActiveCell();\r\n    drawHeaders();\r\n    drawFrozenMarkers();\r\n    drawSelectionHandles();\r\n    drawReorderMarkers();\r\n    drawMoveMarkers();\r\n    drawBorder();\r\n    drawSelectionBorders();\r\n    drawScrollBars();\r\n    if (checkScrollHeight) {\r\n      self.resize(true);\r\n    }\r\n    drawDebug();\r\n    drawPerfLines();\r\n    if (self.dispatchEvent('afterdraw', {})) {\r\n      return;\r\n    }\r\n    self.ctx.restore();\r\n  };\r\n}\r\n","module.exports=function(e){var o={};function a(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=o,a.d=function(e,o,t){a.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},a.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},a.t=function(e,o){if(1&o&&(e=a(e)),8&o)return e;if(4&o&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&o&&\"string\"!=typeof e)for(var r in e)a.d(t,r,function(o){return e[o]}.bind(null,r));return t},a.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(o,\"a\",o),o},a.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},a.p=\"\",a(a.s=0)}([function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});var t=a(1),r=Object.keys(t.default).reduce((function(e,o){return e.concat(t.default[o])}),[]);o.default=function(e){return-1===r.indexOf(e.key)}},function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});o.default={modifier:[\"Alt\",\"AltGraph\",\"CapsLock\",\"Control\",\"Fn\",\"FnLock\",\"Meta\",\"NumLock\",\"ScrollLock\",\"Shift\",\"Symbol\",\"SymbolLock\"],legacyModifier:[\"Hyper\",\"Super\"],whiteSpace:[\"Enter\",\"Tab\"],navigation:[\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\",\"ArrowUp\",\"End\",\"Home\",\"PageDown\",\"PageUp\"],editing:[\"Backspace\",\"Clear\",\"Copy\",\"CrSel\",\"Cut\",\"Delete\",\"EraseEof\",\"ExSel\",\"Insert\",\"Paste\",\"Redo\",\"Undo\"],ui:[\"Accept\",\"Again\",\"Attn\",\"Cancel\",\"ContextMenu\",\"Escape\",\"Execute\",\"Find\",\"Help\",\"Pause\",\"Play\",\"Props\",\"Select\",\"ZoomIn\",\"ZoomOut\"],device:[\"BrightnessDown\",\"BrightnessUp\",\"Eject\",\"LogOff\",\"Power\",\"PowerOff\",\"PrintScreen\",\"Hibernate\",\"Standby\",\"WakeUp\"],imeCompositionKeys:[\"AllCandidates\",\"Alphanumeric\",\"CodeInput\",\"Compose\",\"Convert\",\"Dead\",\"FinalMode\",\"GroupFirst\",\"GroupLast\",\"GroupNext\",\"GroupPrevious\",\"ModeChange\",\"NextCandidate\",\"NonConvert\",\"PreviousCandidate\",\"Process\",\"SingleCandidate\"],koreanSpecific:[\"HangulMode\",\"HanjaMode\",\"JunjaMode\"],japaneseSpecific:[\"Eisu\",\"Hankaku\",\"Hiragana\",\"HiraganaKatakana\",\"KanaMode\",\"KanjiMode\",\"Katakana\",\"Romaji\",\"Zenkaku\",\"ZenkakuHankaku\"],commonFunction:[\"F1\",\"F2\",\"F3\",\"F4\",\"F5\",\"F6\",\"F7\",\"F8\",\"F9\",\"F10\",\"F11\",\"F12\",\"Soft1\",\"Soft2\",\"Soft3\",\"Soft4\"],multimedia:[\"ChannelDown\",\"ChannelUp\",\"Close\",\"MailForward\",\"MailReply\",\"MailSend\",\"MediaClose\",\"MediaFastForward\",\"MediaPause\",\"MediaPlay\",\"MediaPlayPause\",\"MediaRecord\",\"MediaRewind\",\"MediaStop\",\"MediaTrackNext\",\"MediaTrackPrevious\",\"New\",\"Open\",\"Print\",\"Save\",\"SpellCheck\"],multimediaNumpad:[\"Key11\",\"Key12\"],audio:[\"AudioBalanceLeft\",\"AudioBalanceRight\",\"AudioBassBoostDown\",\"AudioBassBoostToggle\",\"AudioBassBoostUp\",\"AudioFaderFront\",\"AudioFaderRear\",\"AudioSurroundModeNext\",\"AudioTrebleDown\",\"AudioTrebleUp\",\"AudioVolumeDown\",\"AudioVolumeUp\",\"AudioVolumeMute\",\"MicrophoneToggle\",\"MicrophoneVolumeDown\",\"MicrophoneVolumeUp\",\"MicrophoneVolumeMute\"],speech:[\"SpeechCorrectionList\",\"SpeechInputToggle\"],application:[\"LaunchApplication1\",\"LaunchApplication2\",\"LaunchCalendar\",\"LaunchContacts\",\"LaunchMail\",\"LaunchMediaPlayer\",\"LaunchMusicPlayer\",\"LaunchPhone\",\"LaunchScreenSaver\",\"LaunchSpreadsheet\",\"LaunchWebBrowser\",\"LaunchWebCam\",\"LaunchWordProcessor\"],browser:[\"BrowserBack\",\"BrowserFavorites\",\"BrowserForward\",\"BrowserHome\",\"BrowserRefresh\",\"BrowserSearch\",\"BrowserStop\"],mobilePhone:[\"AppSwitch\",\"Call\",\"Camera\",\"CameraFocus\",\"EndCall\",\"GoBack\",\"GoHome\",\"HeadsetHook\",\"LastNumberRedial\",\"Notification\",\"MannerMode\",\"VoiceDial\"],tv:[\"TV\",\"TV3DMode\",\"TVAntennaCable\",\"TVAudioDescription\",\"TVAudioDescriptionMixDown\",\"TVAudioDescriptionMixUp\",\"TVContentsMenu\",\"TVDataService\",\"TVInput\",\"TVInputComponent1\",\"TVInputComponent2\",\"TVInputComposite1\",\"TVInputComposite2\",\"TVInputHDMI1\",\"TVInputHDMI2\",\"TVInputHDMI3\",\"TVInputHDMI4\",\"TVInputVGA1\",\"TVMediaContext\",\"TVNetwork\",\"TVNumberEntry\",\"TVPower\",\"TVRadioService\",\"TVSatellite\",\"TVSatelliteBS\",\"TVSatelliteCS\",\"TVSatelliteToggle\",\"TVTerrestrialAnalog\",\"TVTerrestrialDigital\",\"TVTimer\"],mediaControls:[\"AVRInput\",\"AVRPower\",\"ColorF0Red\",\"ColorF1Green\",\"ColorF2Yellow\",\"ColorF3Blue\",\"ColorF4Grey\",\"ColorF5Brown\",\"ClosedCaptionToggle\",\"Dimmer\",\"DisplaySwap\",\"DVR\",\"Exit\",\"FavoriteClear0\",\"FavoriteClear1\",\"FavoriteClear2\",\"FavoriteClear3\",\"FavoriteRecall0\",\"FavoriteRecall1\",\"FavoriteRecall2\",\"FavoriteRecall3\",\"FavoriteStore0\",\"FavoriteStore1\",\"FavoriteStore2\",\"FavoriteStore3\",\"Guide\",\"GuideNextDay\",\"GuidePreviousDay\",\"Info\",\"InstantReplay\",\"Link\",\"ListProgram\",\"LiveContent\",\"Lock\",\"MediaApps\",\"MediaAudioTrack\",\"MediaLast\",\"MediaSkipBackward\",\"MediaSkipForward\",\"MediaStepBackward\",\"MediaStepForward\",\"MediaTopMenu\",\"NavigateIn\",\"NavigateNext\",\"NavigateOut\",\"NavigatePrevious\",\"NextFavoriteChannel\",\"NextUserProfile\",\"OnDemand\",\"Pairing\",\"PinPDown\",\"PinPMove\",\"PinPToggle\",\"PinPUp\",\"PlaySpeedDown\",\"PlaySpeedReset\",\"PlaySpeedUp\",\"RandomToggle\",\"RcLowBattery\",\"RecordSpeedNext\",\"RfBypass\",\"ScanChannelsToggle\",\"ScreenModeNext\",\"Settings\",\"SplitScreenToggle\",\"STBInput\",\"STBPower\",\"Subtitle\",\"Teletext\",\"VideoModeNext\",\"Wink\",\"ZoomToggle\"]}}]).default;","'use strict';\r\n\r\nconst isSupportedHtml = function (pasteValue) {\r\n  // We need to match new lines in the HTML, .* won't match new line characters.\r\n  // `s` regex modifier can't be used with `ecmaVersion === 2017`.\r\n  // As a workaround using [\\s\\S]*. Fix when we upgrade `ecmaVersion`.\r\n  const genericDiv = /(?:^(<meta[^>]*>)?[\\s\\S]*<div[^>]*>)/;\r\n  const genericSpan = /(?:^(<meta[^>]*>)?[\\s\\S]*<span[^>]*>)/;\r\n  const genericTable = /(?:^(<meta[^>]*>)?[\\s\\S]*<table[^>]*>)/; // Matches Google Sheets format clipboard data format too.\r\n  const excelTable = /(?:<!--StartFragment-->[\\s\\S]*<tr[^>]*>)/;\r\n  const excelTableRow = /(?:<!--StartFragment-->[\\s\\S]*<td[^>]*>)/;\r\n\r\n  return [\r\n    genericDiv,\r\n    genericTable,\r\n    genericSpan,\r\n    excelTable,\r\n    excelTableRow,\r\n  ].some((expression) => expression.test(pasteValue));\r\n};\r\n\r\n// Explanation of nodeType here: https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\nconst IGNORE_NODETYPES = [8, 3]; // '#text' and '#comment'\r\n\r\nconst isHtmlTable = function (pasteValue) {\r\n  return /(?:<table[^>]*>)|(?:<tr[^]*>)/.test(pasteValue);\r\n};\r\n\r\nconst sanitizeElementData = function (element) {\r\n  // It is not entirely clear if this check on nodeType is required.\r\n  let elementData = element.nodeType === 1 ? element.innerText : element.data;\r\n\r\n  return String(elementData).replace(/\\s+/g, ' ').trim();\r\n};\r\n\r\nconst parseHtmlText = function (data) {\r\n  const doc = new DOMParser().parseFromString(data, 'text/html');\r\n  const element = doc.querySelector('div') || doc.querySelector('span');\r\n  const elementData = sanitizeElementData(element);\r\n\r\n  return elementData\r\n    .split('\\n')\r\n    .map((item) => item.split('\\t').map((value) => ({ value: [{ value }] })));\r\n};\r\n\r\nconst parseHtmlTable = function (data) {\r\n  const doc = new DOMParser().parseFromString(data, 'text/html');\r\n  const trs = doc.querySelectorAll('table tr');\r\n  const rows = [];\r\n\r\n  for (const tr of trs) {\r\n    const row = [];\r\n\r\n    for (const childNode of tr.childNodes) {\r\n      if (IGNORE_NODETYPES.includes(childNode.nodeType)) continue;\r\n\r\n      const col = { value: [] };\r\n      const value = sanitizeElementData(childNode);\r\n\r\n      if (value) col.value.push({ value });\r\n\r\n      row.push(col);\r\n    }\r\n\r\n    rows.push(row);\r\n  }\r\n\r\n  return rows;\r\n};\r\n\r\nconst parseText = function (data) {\r\n  return data\r\n    .split('\\n')\r\n    .map((item) => item.split('\\t').map((value) => ({ value: [{ value }] })));\r\n};\r\n\r\nconst parseData = function (data, mimeType) {\r\n  if (mimeType === 'text/html' && isHtmlTable(data)) {\r\n    return parseHtmlTable(data);\r\n  } else if (mimeType === 'text/html') {\r\n    return parseHtmlText(data);\r\n  }\r\n\r\n  // Default data format is string, so split on new line,\r\n  // and then enclose in an array (a row with one cell):\r\n  return parseText(data);\r\n};\r\n\r\nconst htmlSafe = (value) => {\r\n  if (typeof value === 'number') return value;\r\n  return value.replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n};\r\n\r\nconst createTextString = (selectedData, isNeat) => {\r\n  // Selected like [[0, 1], [0, 1]] of [[0, 3]] is neat; Selected like [[0, 1], [1, 2]] is untidy.\r\n  // If not isNeat we just return a simple string of concatenated values.\r\n  if (!isNeat)\r\n    return selectedData.map((row) => Object.values(row).join('')).join('');\r\n\r\n  // If isNeat, we can create tab separated mutti-line text.\r\n  return selectedData.map((row) => Object.values(row).join('\\t')).join('\\n');\r\n};\r\n\r\nconst createHTMLString = (selectedData, isNeat) => {\r\n  if (!isNeat) return createTextString(selectedData, isNeat);\r\n\r\n  // If isNeat, we can create a HTML table with the selected data.\r\n  let htmlString = '<table>';\r\n  htmlString += selectedData\r\n    .map(\r\n      (row) =>\r\n        '<tr>' +\r\n        Object.values(row)\r\n          .map((value) => '<td>' + htmlSafe(value) + '</td>')\r\n          .join('') +\r\n        '</tr>',\r\n    )\r\n    .join('');\r\n  htmlString += '</table>';\r\n\r\n  return htmlString;\r\n};\r\n\r\nexport {\r\n  createTextString,\r\n  createHTMLString,\r\n  isSupportedHtml,\r\n  htmlSafe,\r\n  parseData,\r\n  parseHtmlTable,\r\n  parseHtmlText,\r\n  parseText,\r\n  sanitizeElementData,\r\n};\r\n","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nimport isPrintableKeyEvent from 'is-printable-key-event';\r\nimport { isSupportedHtml, parseData } from './util';\r\n\r\nexport default function (self) {\r\n  var wheeling;\r\n  self.stopPropagation = function (e) {\r\n    e.stopPropagation();\r\n  };\r\n  /**\r\n   * Adds an event listener to the given event.\r\n   * @memberof canvasDatagrid\r\n   * @name addEventListener\r\n   * @method\r\n   * @param {string} ev The name of the event to subscribe to.\r\n   * @param {function} fn The event procedure to execute when the event is raised.\r\n   */\r\n  self.addEventListener = function (ev, fn) {\r\n    self.events[ev] = self.events[ev] || [];\r\n    self.events[ev].unshift(fn);\r\n  };\r\n  /**\r\n   * Removes the given listener function from the given event.  Must be an actual reference to the function that was bound.\r\n   * @memberof canvasDatagrid\r\n   * @name removeEventListener\r\n   * @method\r\n   * @param {string} ev The name of the event to unsubscribe from.\r\n   * @param {function} fn The event procedure to execute when the event is raised.\r\n   */\r\n  self.removeEventListener = function (ev, fn) {\r\n    (self.events[ev] || []).forEach(function removeEachListener(sfn, idx) {\r\n      if (fn === sfn) {\r\n        self.events[ev].splice(idx, 1);\r\n      }\r\n    });\r\n  };\r\n  /**\r\n   * Fires the given event, passing an event object to the event subscribers.\r\n   * @memberof canvasDatagrid\r\n   * @name dispatchEvent\r\n   * @method\r\n   * @param {number} ev The name of the event to dispatch.\r\n   * @param {number} e The event object.\r\n   */\r\n  self.dispatchEvent = function (ev, e) {\r\n    e = ev.type ? ev : e || {};\r\n    ev = ev.type || ev;\r\n    var defaultPrevented;\r\n    function preventDefault() {\r\n      defaultPrevented = true;\r\n    }\r\n    if (!self.events[ev]) {\r\n      return;\r\n    }\r\n    self.events[ev].forEach(function dispatchEachEvent(fn) {\r\n      e.ctx = self.ctx;\r\n      e.preventDefault = preventDefault;\r\n      fn.apply(self.intf, [e]);\r\n    });\r\n    return defaultPrevented;\r\n  };\r\n  self.getRatio = function () {\r\n    return Math.min(\r\n      self.attributes.maxPixelRatio,\r\n      (window.devicePixelRatio || 1) /\r\n        (self.ctx.webkitBackingStorePixelRatio ||\r\n          self.ctx.mozBackingStorePixelRatio ||\r\n          self.ctx.msBackingStorePixelRatio ||\r\n          self.ctx.oBackingStorePixelRatio ||\r\n          self.ctx.backingStorePixelRatio ||\r\n          1),\r\n    );\r\n  };\r\n  self.resize = function (drawAfterResize) {\r\n    if (!self.canvas) {\r\n      return;\r\n    }\r\n    var x,\r\n      v = {\r\n        x: 0,\r\n        y: 0,\r\n        height: 0,\r\n        width: 0,\r\n        style: 'vertical-scroll-bar',\r\n      },\r\n      n = {\r\n        x: 0,\r\n        y: 0,\r\n        height: 0,\r\n        width: 0,\r\n        style: 'horizontal-scroll-bar',\r\n      },\r\n      vb = {\r\n        x: 0,\r\n        y: 0,\r\n        height: 0,\r\n        width: 0,\r\n        style: 'vertical-scroll-box',\r\n      },\r\n      nb = {\r\n        x: 0,\r\n        y: 0,\r\n        height: 0,\r\n        width: 0,\r\n        style: 'horizontal-scroll-box',\r\n      },\r\n      co = {\r\n        x: 0,\r\n        y: 0,\r\n        height: 0,\r\n        width: 0,\r\n        isCorner: true,\r\n        isScrollBoxCorner: true,\r\n        style: 'scroll-box-corner',\r\n      },\r\n      m = self.style.scrollBarBoxMargin * 2,\r\n      b = self.style.scrollBarBorderWidth * 2,\r\n      d = self.style.scrollBarBoxMargin * 0.5,\r\n      sbw = self.style.scrollBarWidth + self.style.scrollBarBorderWidth * 2,\r\n      ratio = self.getRatio(),\r\n      bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\r\n      cellBorder = self.style.cellBorderWidth * bm,\r\n      columnHeaderCellBorder = self.style.columnHeaderCellBorderWidth * bm,\r\n      dataHeight = 0,\r\n      dataWidth = 0,\r\n      dims,\r\n      l = (self.viewData || []).length,\r\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\r\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\r\n      ch = self.style.cellHeight,\r\n      s = self.getSchema();\r\n    // sets actual DOM canvas element\r\n    function checkScrollBoxVisibility() {\r\n      self.scrollBox.horizontalBarVisible =\r\n        (self.style.width !== 'auto' &&\r\n          dataWidth > self.scrollBox.width &&\r\n          self.style.overflowX !== 'hidden') ||\r\n        self.style.overflowX === 'scroll';\r\n      self.scrollBox.horizontalBoxVisible = dataWidth > self.scrollBox.width;\r\n      self.scrollBox.verticalBarVisible =\r\n        (self.style.height !== 'auto' &&\r\n          dataHeight > self.scrollBox.height &&\r\n          self.style.overflowY !== 'hidden') ||\r\n        self.style.overflowY === 'scroll';\r\n      self.scrollBox.verticalBoxVisible = dataHeight > self.scrollBox.height;\r\n    }\r\n    function setScrollBoxSize() {\r\n      self.scrollBox.width = self.width - rowHeaderCellWidth;\r\n      self.scrollBox.height = self.height - columnHeaderCellHeight;\r\n    }\r\n    function setCanvasSize() {\r\n      if (self.isChildGrid) {\r\n        return;\r\n      }\r\n      dims = {\r\n        // HACK +1 ? maybe it's a magic cell border?  Required to line up properly in auto height mode.\r\n        height: columnHeaderCellHeight + dataHeight + cellBorder + 1,\r\n        width: dataWidth + rowHeaderCellWidth + cellBorder,\r\n      };\r\n      ['width', 'height'].forEach(function (dim) {\r\n        //TODO: support inherit\r\n        if (\r\n          ['auto', undefined].indexOf(self.style[dim]) !== -1 &&\r\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) !== -1\r\n        ) {\r\n          self.parentNodeStyle[dim] = dims[dim] + 'px';\r\n        } else if (\r\n          ['auto', undefined].indexOf(self.style[dim]) == -1 &&\r\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) == -1\r\n        ) {\r\n          self.parentNodeStyle[dim] = self.style[dim];\r\n          if (self.isComponent) {\r\n            self.canvas.style[dim] = self.style[dim];\r\n          }\r\n        }\r\n      });\r\n    }\r\n    self.scrollCache.x = [];\r\n    self.scrollCache.y = [];\r\n    for (x = 0; x < l; x += 1) {\r\n      self.scrollCache.y[x] = dataHeight;\r\n      dataHeight +=\r\n        ((self.sizes.rows[x] || ch) + (self.sizes.trees[x] || 0)) * self.scale +\r\n        // HACK? if an expanded tree row is frozen it is necessary to add the tree row's height a second time.\r\n        (self.frozenRow > x ? self.sizes.trees[x] || 0 : 0);\r\n    }\r\n    if (l > 1) {\r\n      self.scrollCache.y[x] = dataHeight;\r\n    }\r\n    dataWidth =\r\n      s.reduce(function reduceSchema(accumulator, column, columnIndex) {\r\n        // intentional redefintion of column.  This causes scrollCache to be in the correct order\r\n        column = s[self.orders.columns[columnIndex]];\r\n        if (column.hidden) {\r\n          self.scrollCache.x[columnIndex] = accumulator;\r\n          return accumulator;\r\n        }\r\n        var va =\r\n          accumulator + self.getColumnWidth(self.orders.columns[columnIndex]);\r\n        self.scrollCache.x[columnIndex] = va;\r\n        return va;\r\n      }, 0) || 0;\r\n    if (self.attributes.showNewRow) {\r\n      dataHeight += ch;\r\n    }\r\n    if (self.attributes.snapToRow) {\r\n      dataHeight += self.style.cellHeight;\r\n    }\r\n    setCanvasSize();\r\n    if (self.isChildGrid) {\r\n      self.width = self.parentNode.offsetWidth;\r\n      self.height = self.parentNode.offsetHeight;\r\n    } else if (\r\n      self.height !== self.canvas.offsetHeight ||\r\n      self.width !== self.canvas.offsetWidth\r\n    ) {\r\n      self.height = self.canvas.offsetHeight;\r\n      self.width = self.canvas.offsetWidth;\r\n      self.canvasOffsetLeft = self.args.canvasOffsetLeft || 0;\r\n      self.canvasOffsetTop = self.args.canvasOffsetTop || 0;\r\n    }\r\n    /// calculate scroll bar dimensions\r\n    // non-controversial\r\n    self.scrollBox.top = columnHeaderCellHeight + columnHeaderCellBorder;\r\n    self.scrollBox.left = rowHeaderCellWidth;\r\n    // width and height of scroll box\r\n    setScrollBoxSize();\r\n    // is the data larger than the scroll box\r\n    checkScrollBoxVisibility();\r\n    // if the scroll box is visible, make room for it by expanding the size of the element\r\n    // if the other dimension is set to auto\r\n    if (self.scrollBox.horizontalBarVisible) {\r\n      if (self.style.height === 'auto' && !self.isChildGrid) {\r\n        self.height += sbw;\r\n      }\r\n      dataHeight += sbw;\r\n      setCanvasSize();\r\n      setScrollBoxSize();\r\n      checkScrollBoxVisibility();\r\n    }\r\n    if (self.scrollBox.verticalBarVisible) {\r\n      if (self.style.width === 'auto' && !self.isChildGrid) {\r\n        self.width += sbw;\r\n      }\r\n      dataWidth += sbw;\r\n      setCanvasSize();\r\n      setScrollBoxSize();\r\n      checkScrollBoxVisibility();\r\n    }\r\n    // set again after bar visibility checks\r\n    setScrollBoxSize();\r\n    self.scrollBox.scrollWidth = dataWidth - self.scrollBox.width;\r\n    self.scrollBox.scrollHeight = dataHeight - self.scrollBox.height;\r\n    if (self.frozenColumn > 0) {\r\n      self.scrollBox.widthBoxRatio =\r\n        (self.scrollBox.width - self.scrollCache.x[self.frozenColumn - 1]) /\r\n        dataWidth;\r\n    } else {\r\n      self.scrollBox.widthBoxRatio = self.scrollBox.width / dataWidth;\r\n    }\r\n    self.scrollBox.scrollBoxWidth =\r\n      self.scrollBox.width * self.scrollBox.widthBoxRatio -\r\n      self.style.scrollBarWidth -\r\n      b -\r\n      d;\r\n    // TODO: This heightBoxRatio number is terribly wrong.\r\n    // They should be a result of the size of the grid/canvas?\r\n    // it being off causes the scroll bar to \"slide\" under\r\n    // the dragged mouse.\r\n    // https://github.com/TonyGermaneri/canvas-datagrid/issues/97\r\n    self.scrollBox.heightBoxRatio =\r\n      (self.scrollBox.height -\r\n        columnHeaderCellHeight -\r\n        self.scrollCache.y[self.frozenRow]) /\r\n      dataHeight;\r\n    self.scrollBox.scrollBoxHeight =\r\n      self.scrollBox.height * self.scrollBox.heightBoxRatio -\r\n      self.style.scrollBarWidth -\r\n      b -\r\n      d;\r\n    self.scrollBox.scrollBoxWidth = Math.max(\r\n      self.scrollBox.scrollBoxWidth,\r\n      self.style.scrollBarBoxMinSize,\r\n    );\r\n    self.scrollBox.scrollBoxHeight = Math.max(\r\n      self.scrollBox.scrollBoxHeight,\r\n      self.style.scrollBarBoxMinSize,\r\n    );\r\n    // horizontal\r\n    n.x += rowHeaderCellWidth;\r\n    n.y += self.height - self.style.scrollBarWidth - d;\r\n    n.width =\r\n      self.width - self.style.scrollBarWidth - rowHeaderCellWidth - d - m;\r\n    n.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\r\n    // horizontal box\r\n    nb.y = n.y + self.style.scrollBarBoxMargin;\r\n    nb.width = self.scrollBox.scrollBoxWidth;\r\n    nb.height = self.style.scrollBarBoxWidth;\r\n    // vertical\r\n    v.x +=\r\n      self.width -\r\n      self.style.scrollBarWidth -\r\n      self.style.scrollBarBorderWidth -\r\n      d;\r\n    v.y += columnHeaderCellHeight + self.scrollCache.y[self.frozenRow];\r\n    v.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\r\n    v.height =\r\n      self.height - columnHeaderCellHeight - self.style.scrollBarWidth - d - m;\r\n    // vertical box\r\n    vb.x = v.x + self.style.scrollBarBoxMargin;\r\n    vb.y += self.scrollCache.y[self.frozenRow];\r\n    vb.width = self.style.scrollBarBoxWidth;\r\n    vb.height = self.scrollBox.scrollBoxHeight;\r\n    // corner\r\n    co.x = n.x + n.width + m;\r\n    co.y = v.y + v.height + m;\r\n    co.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\r\n    co.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\r\n    self.scrollBox.entities = {\r\n      horizontalBar: n,\r\n      horizontalBox: nb,\r\n      verticalBar: v,\r\n      verticalBox: vb,\r\n      corner: co,\r\n    };\r\n    self.scrollBox.bar = {\r\n      v: v,\r\n      h: n,\r\n    };\r\n    self.scrollBox.box = {\r\n      v: vb,\r\n      h: nb,\r\n    };\r\n    /// calculate page and dom elements\r\n    self.page = Math.max(\r\n      1,\r\n      self.visibleRows.length - 3 - self.attributes.pageUpDownOverlap,\r\n    );\r\n    // set canvas drawing related items\r\n    if (!self.isChildGrid) {\r\n      self.canvas.width = self.width * ratio;\r\n      self.canvas.height = self.height * ratio;\r\n      self.ctx.scale(ratio, ratio);\r\n    }\r\n    // resize any open dom elements (input/textarea)\r\n    self.resizeEditInput();\r\n    self.scroll(true);\r\n    if (drawAfterResize) {\r\n      self.draw(true);\r\n    }\r\n    self.dispatchEvent('resize', {});\r\n    return true;\r\n  };\r\n  self.scroll = function (dontDraw) {\r\n    var s = self.getSchema(),\r\n      l = (self.viewData || []).length,\r\n      ch = self.style.cellHeight;\r\n    // go too far in leaps, then get focused\r\n    self.scrollIndexTop = Math.floor(\r\n      l * (self.scrollBox.scrollTop / self.scrollBox.scrollHeight) - 100,\r\n    );\r\n    self.scrollIndexTop = Math.max(self.scrollIndexTop, 0);\r\n    self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\r\n    // sometimes the grid is rendered but the height is zero\r\n    if (self.scrollBox.scrollHeight === 0) {\r\n      self.scrollIndexTop = 0;\r\n    }\r\n    self.scrollPixelTop = 0;\r\n    self.scrollIndexLeft = self.frozenColumn;\r\n    self.scrollPixelLeft = 0;\r\n    while (\r\n      self.scrollPixelTop < self.scrollBox.scrollTop &&\r\n      self.scrollIndexTop < self.viewData.length\r\n    ) {\r\n      // start on index +1 since index 0 was used in \"go too far\" section above\r\n      self.scrollIndexTop += 1;\r\n      self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\r\n    }\r\n    while (\r\n      self.scrollPixelLeft < self.scrollBox.scrollLeft + 1 &&\r\n      self.scrollIndexLeft < s.length\r\n    ) {\r\n      self.scrollPixelLeft = self.scrollCache.x[self.scrollIndexLeft];\r\n      self.scrollIndexLeft += 1;\r\n    }\r\n    if (s.length > 0) {\r\n      self.scrollIndexLeft = Math.max(self.scrollIndexLeft - 1, 0);\r\n      self.scrollPixelLeft -= self.getColumnWidth(\r\n        self.orders.columns[self.scrollIndexLeft],\r\n      );\r\n    }\r\n    if ((self.viewData || []).length > 0) {\r\n      self.scrollIndexTop = Math.max(self.scrollIndexTop - 1, 0);\r\n      self.scrollPixelTop = Math.max(\r\n        self.scrollPixelTop -\r\n          (self.viewData[self.scrollIndexTop]\r\n            ? (self.sizes.rows[self.scrollIndexTop] || ch) +\r\n              (self.sizes.trees[self.scrollIndexTop] || 0)\r\n            : ch) *\r\n            self.scale,\r\n        0,\r\n      );\r\n    }\r\n    self.ellipsisCache = {};\r\n    if (!dontDraw) {\r\n      self.draw(true);\r\n    }\r\n    //TODO: figure out why this has to be delayed for child grids\r\n    //BUG: wheeling event on 3rd level hierarchy fails to move input box\r\n    requestAnimationFrame(self.resizeEditInput);\r\n    self.dispatchEvent('scroll', {\r\n      top: self.scrollBox.scrollTop,\r\n      left: self.scrollBox.scrollLeft,\r\n    });\r\n  };\r\n  self.mousemove = function (e, overridePos) {\r\n    if (self.contextMenu || self.input) {\r\n      return;\r\n    }\r\n    self.mouse = overridePos || self.getLayerPos(e);\r\n    var ctrl =\r\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\r\n        !self.attributes.singleSelectionMode,\r\n      i,\r\n      s = self.getSchema(),\r\n      dragBounds,\r\n      sBounds,\r\n      x = self.mouse.x,\r\n      y = self.mouse.y,\r\n      cell = self.getCellAt(x, y),\r\n      delta,\r\n      ev = { NativeEvent: e, cell: cell, x: x, y: y },\r\n      previousCell = self.currentCell;\r\n    clearTimeout(self.scrollTimer);\r\n    if (!self.isInGrid({ x: x, y: y })) {\r\n      self.hasFocus = false;\r\n    }\r\n    if (self.dispatchEvent('mousemove', ev)) {\r\n      return;\r\n    }\r\n    if (cell && self.currentCell) {\r\n      self.rowBoundaryCrossed = self.currentCell.rowIndex !== cell.rowIndex;\r\n      self.columnBoundaryCrossed =\r\n        self.currentCell.columnIndex !== cell.columnIndex;\r\n      self.cellBoundaryCrossed =\r\n        self.rowBoundaryCrossed || self.columnBoundaryCrossed;\r\n      ['row', 'column', 'cell'].forEach(function (prefix) {\r\n        if (self[prefix + 'BoundaryCrossed']) {\r\n          ev.cell = previousCell;\r\n          self.dispatchEvent(prefix + 'mouseout', ev);\r\n          ev.cell = cell;\r\n          self.dispatchEvent(prefix + 'mouseover', ev);\r\n        }\r\n      });\r\n    }\r\n    self.currentCell = cell;\r\n\r\n    self.hovers = {};\r\n    if (!self.draggingItem && cell) {\r\n      self.dragItem = cell;\r\n      self.dragMode = cell.dragContext;\r\n      self.cursor = cell.context;\r\n      if (cell.context === 'cell') {\r\n        self.cursor = 'default';\r\n        self.hovers = {\r\n          rowIndex: cell.rowIndex,\r\n          columnIndex: cell.columnIndex,\r\n          onFilterButton: false,\r\n        };\r\n        if (\r\n          cell.isFilterable &&\r\n          x >\r\n            cell.x +\r\n              cell.width +\r\n              self.canvasOffsetLeft -\r\n              self.style.filterButtonWidth &&\r\n          x < cell.x + cell.width + self.canvasOffsetLeft &&\r\n          y >\r\n            cell.y +\r\n              cell.height +\r\n              self.canvasOffsetTop -\r\n              self.style.filterButtonHeight &&\r\n          y < cell.y + cell.height + self.canvasOffsetTop\r\n        ) {\r\n          self.hovers.onFilterButton = true;\r\n          self.draw();\r\n        }\r\n      }\r\n      if (self.selecting || self.reorderObject) {\r\n        delta = {\r\n          x: Math.abs(self.dragStart.x - x),\r\n          y: Math.abs(self.dragStart.y - y),\r\n        };\r\n        if (self.dragStartObject.columnIndex !== -1 && e.shiftKey) {\r\n          self.dragStartObject = {\r\n            rowIndex: self.activeCell.rowIndex,\r\n            columnIndex: self.activeCell.columnIndex,\r\n          };\r\n        }\r\n        dragBounds = {\r\n          top: Math.min(self.dragStartObject.rowIndex, cell.rowIndex),\r\n          left: Math.min(self.dragStartObject.columnIndex, cell.columnIndex),\r\n          bottom: Math.max(self.dragStartObject.rowIndex, cell.rowIndex),\r\n          right: Math.max(self.dragStartObject.columnIndex, cell.columnIndex),\r\n        };\r\n        if (self.dragStartObject.columnIndex === -1) {\r\n          sBounds = self.getSelectionBounds();\r\n          dragBounds.left = -1;\r\n          dragBounds.right = s.length - 1;\r\n          dragBounds.top = Math.min(sBounds.top, cell.rowIndex);\r\n          dragBounds.bottom = Math.max(sBounds.bottom, cell.rowIndex);\r\n        }\r\n        if (\r\n          self.dragStartObject.rowIndex !== cell.rowIndex ||\r\n          self.dragStartObject.columnIndex !== cell.columnIndex\r\n        ) {\r\n          self.ignoreNextClick = true;\r\n        }\r\n        if (\r\n          self.cellBoundaryCrossed ||\r\n          (delta.x === 0 && delta.y === 0) ||\r\n          self.attributes.selectionMode === 'row'\r\n        ) {\r\n          if (\r\n            (self.attributes.selectionMode === 'row' ||\r\n              self.dragStartObject.columnIndex === -1) &&\r\n            self.rowBoundaryCrossed\r\n          ) {\r\n            self.selectRow(cell.rowIndex, ctrl, null, true);\r\n          } else if (self.attributes.selectionMode !== 'row') {\r\n            if (cell.hovered && self.hovers.onFilterButton) {\r\n              if (cell.openedFilter) {\r\n                cell.openedFilter = false;\r\n                self.selectedFilterButton = {\r\n                  columnIndex: -1,\r\n                  rowIndex: -1,\r\n                };\r\n              } else {\r\n                self.selectedFilterButton.rowIndex = cell.rowIndex;\r\n                self.selectedFilterButton.columnIndex = cell.columnIndex;\r\n                self.contextmenuEvent(e, {\r\n                  x: cell.x + cell.width - self.style.filterButtonWidth,\r\n                  y: cell.y + cell.height,\r\n                  rect: { left: 0, top: 0 },\r\n                });\r\n              }\r\n              self.draw();\r\n              return;\r\n            } else {\r\n              self.selectedFilterButton = {\r\n                columnIndex: -1,\r\n                rowIndex: -1,\r\n              };\r\n              if (self.hovers.onFilterButton) return;\r\n              if (!self.dragAddToSelection && cell.rowIndex !== undefined) {\r\n                if (\r\n                  self.selections[cell.rowIndex] &&\r\n                  self.selections[cell.rowIndex].indexOf(cell.columnIndex) !==\r\n                    -1\r\n                ) {\r\n                  self.selections[cell.rowIndex].splice(\r\n                    self.selections[cell.rowIndex].indexOf(cell.columnIndex),\r\n                    1,\r\n                  );\r\n                }\r\n              } else {\r\n                self.selections[cell.rowIndex] =\r\n                  self.selections[cell.rowIndex] || [];\r\n                if (\r\n                  self.selections[cell.rowIndex].indexOf(cell.columnIndex) ===\r\n                  -1\r\n                ) {\r\n                  self.selections[cell.rowIndex].push(cell.columnIndex);\r\n                  var event = {\r\n                    selections: self.selections,\r\n                    selectedData: self.getSelectedData(),\r\n                    selectedCells: self.getSelectedCells(),\r\n                    selectionBounds: self.getSelectionBounds(),\r\n                  };\r\n                  self.dispatchEvent('selectionchanged', event);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (\r\n          (!self.selectionBounds ||\r\n            dragBounds.top !== self.selectionBounds.top ||\r\n            dragBounds.left !== self.selectionBounds.left ||\r\n            dragBounds.bottom !== self.selectionBounds.bottom ||\r\n            dragBounds.right !== self.selectionBounds.right) &&\r\n          !ctrl\r\n        ) {\r\n          if (!(cell.hovered && self.hovers.onFilterButton)) {\r\n            self.selections = [];\r\n          }\r\n          if (dragBounds.top === -1) {\r\n            dragBounds.top = 0;\r\n          }\r\n          sBounds = dragBounds;\r\n          if (self.attributes.selectionMode === 'row') {\r\n            for (i = sBounds.top; i <= sBounds.bottom; i += 1) {\r\n              self.selectRow(i, true, null, true);\r\n            }\r\n          } else {\r\n            self.selectArea(sBounds, true);\r\n            if (sBounds.left == -1 && sBounds.top !== sBounds.bottom)\r\n              self.isMultiRowsSelected = true;\r\n          }\r\n        }\r\n\r\n        if (self.attributes.autoScrollOnMousemove) {\r\n          var movedVertically = delta.y > self.attributes.autoScrollMargin;\r\n          var movedHorizontally = delta.x > self.attributes.autoScrollMargin;\r\n\r\n          if (movedVertically && !movedHorizontally)\r\n            self.autoScrollZone(e, -1, y, ctrl);\r\n          else if (movedHorizontally && !movedVertically)\r\n            self.autoScrollZone(e, x, -1, ctrl);\r\n          else if (movedHorizontally && movedVertically)\r\n            self.autoScrollZone(e, x, y, ctrl);\r\n        } else {\r\n          self.autoScrollZone(e, x, y, ctrl);\r\n        }\r\n      }\r\n    }\r\n    self.cellBoundaryCrossed = false;\r\n    self.rowBoundaryCrossed = false;\r\n    self.columnBoundaryCrossed = false;\r\n    self.draw(true);\r\n  };\r\n  self.click = function (e, overridePos) {\r\n    var i,\r\n      startingBounds = JSON.stringify(self.getSelectionBounds()),\r\n      ctrl =\r\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\r\n        !self.attributes.singleSelectionMode,\r\n      pos = overridePos || self.getLayerPos(e);\r\n    self.currentCell = self.getCellAt(pos.x, pos.y);\r\n    if (self.currentCell.grid !== undefined) {\r\n      return;\r\n    }\r\n    function checkSelectionChange() {\r\n      var ev,\r\n        sb = self.getSelectionBounds();\r\n\r\n      if (startingBounds === JSON.stringify(sb)) {\r\n        return;\r\n      }\r\n      ev = {\r\n        selections: self.selections,\r\n        selectionBounds: self.getSelectionBounds(),\r\n        selectedCells: self.getSelectedCells(),\r\n      };\r\n      Object.defineProperty(ev, 'selectedData', {\r\n        get: function () {\r\n          return self.getSelectedData();\r\n        },\r\n      });\r\n      self.dispatchEvent('selectionchanged', ev);\r\n    }\r\n    if (self.input) {\r\n      self.endEdit();\r\n    }\r\n    if (self.ignoreNextClick) {\r\n      self.ignoreNextClick = false;\r\n      return;\r\n    }\r\n    i = self.currentCell;\r\n    if (\r\n      self.dispatchEvent('click', { NativeEvent: e, cell: self.currentCell })\r\n    ) {\r\n      return;\r\n    }\r\n    if (!self.hasFocus) {\r\n      return;\r\n    }\r\n    if (\r\n      ['rowHeaderCell', 'columnHeaderCell'].indexOf(self.currentCell.style) ===\r\n        -1 &&\r\n      !ctrl\r\n    ) {\r\n      if (!self.hovers.onFilterButton) {\r\n        self.setActiveCell(i.columnIndex, i.rowIndex);\r\n      }\r\n    }\r\n    if (self.currentCell.context === 'cell') {\r\n      if (self.currentCell.style === 'cornerCell') {\r\n        self.selectAll();\r\n        self.draw();\r\n        checkSelectionChange();\r\n        return;\r\n      }\r\n      if (self.currentCell.style === 'columnHeaderCell') {\r\n        if (self.attributes.columnHeaderClickBehavior === 'sort') {\r\n          if (self.orderBy === i.header.name) {\r\n            self.orderDirection =\r\n              self.orderDirection === 'asc' ? 'desc' : 'asc';\r\n          } else {\r\n            self.orderDirection = 'asc';\r\n          }\r\n          self.order(i.header.name, self.orderDirection);\r\n          checkSelectionChange();\r\n          return;\r\n        }\r\n      }\r\n      self.selections[i.rowIndex] = self.selections[i.rowIndex] || [];\r\n      if (\r\n        self.attributes.selectionMode === 'row' ||\r\n        self.currentCell.style === 'rowHeaderCell'\r\n      ) {\r\n        if (\r\n          self.currentCell.style === 'rowHeaderCell' &&\r\n          self.attributes.tree &&\r\n          pos.x > 0 &&\r\n          pos.x - self.currentCell.x <\r\n            self.style.treeArrowWidth +\r\n              self.style.treeArrowMarginLeft +\r\n              self.style.treeArrowMarginRight +\r\n              self.style.treeArrowClickRadius &&\r\n          pos.y - self.currentCell.y <\r\n            self.style.treeArrowHeight +\r\n              self.style.treeArrowMarginTop +\r\n              self.style.treeArrowClickRadius &&\r\n          pos.y > 0\r\n        ) {\r\n          self.toggleTree(i.rowIndex);\r\n          return;\r\n        }\r\n      }\r\n      if (e.shiftKey && !ctrl) {\r\n        self.selectionBounds = self.getSelectionBounds();\r\n        self.selectArea(undefined, false);\r\n      }\r\n    }\r\n    checkSelectionChange();\r\n    self.draw(true);\r\n  };\r\n  self.dragResizeColumn = function (e) {\r\n    var pos, x, y;\r\n    pos = self.getLayerPos(e);\r\n    x = self.resizingStartingWidth + pos.x - self.dragStart.x;\r\n    y = self.resizingStartingHeight + pos.y - self.dragStart.y;\r\n    if (x < self.style.minColumnWidth) {\r\n      x = self.style.minColumnWidth;\r\n    }\r\n    if (y < self.style.minRowHeight) {\r\n      y = self.style.minRowHeight;\r\n    }\r\n    if (\r\n      self.dispatchEvent('resizecolumn', {\r\n        x: x,\r\n        y: y,\r\n        draggingItem: self.draggingItem,\r\n      })\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      self.scrollBox.scrollLeft >\r\n        self.scrollBox.scrollWidth - self.attributes.resizeScrollZone &&\r\n      self.dragMode === 'ew-resize'\r\n    ) {\r\n      self.resize(true);\r\n      self.scrollBox.scrollLeft += x;\r\n    }\r\n    if (self.dragMode === 'ew-resize') {\r\n      self.sizes.columns[\r\n        self.draggingItem.header.style === 'rowHeaderCell'\r\n          ? 'cornerCell'\r\n          : self.draggingItem.sortColumnIndex\r\n      ] = x;\r\n      if (\r\n        ['rowHeaderCell', 'cornerCell'].indexOf(\r\n          self.draggingItem.header.style,\r\n        ) !== -1\r\n      ) {\r\n        self.resize(true);\r\n      }\r\n      self.resizeChildGrids();\r\n      return;\r\n    }\r\n    if (self.dragMode === 'ns-resize') {\r\n      if (self.draggingItem.rowOpen) {\r\n        self.sizes.trees[self.draggingItem.rowIndex] = y;\r\n      } else if (self.attributes.globalRowResize) {\r\n        self.style.cellHeight = y;\r\n      } else {\r\n        self.sizes.rows[self.draggingItem.rowIndex] = y;\r\n      }\r\n      self.dispatchEvent('resizerow', { row: y });\r\n      self.resizeChildGrids();\r\n      return;\r\n    }\r\n    self.ellipsisCache = {};\r\n  };\r\n  self.stopDragResize = function (event) {\r\n    const pos = self.getLayerPos(event);\r\n\r\n    if (self.dragMode === 'ew-resize') {\r\n      const hasMoved = !!(pos.x - self.dragStart.x);\r\n      // Check that dragItem is selected or part of selection.\r\n      const dragItemIsSelected = self.isColumnSelected(\r\n        self.dragItem.columnIndex,\r\n      );\r\n\r\n      if (hasMoved && dragItemIsSelected) {\r\n        const width = Math.max(\r\n          self.resizingStartingWidth + pos.x - self.dragStart.x,\r\n          self.style.minColumnWidth,\r\n        );\r\n        // If the column is selected, resize it to width plus any other selected columns.\r\n        self.fitSelectedColumns(width);\r\n      }\r\n    }\r\n\r\n    self.resize();\r\n    document.body.removeEventListener(\r\n      'mousemove',\r\n      self.dragResizeColumn,\r\n      false,\r\n    );\r\n    document.body.removeEventListener('mouseup', self.stopDragResize, false);\r\n    self.setStorageData();\r\n    self.draw(true);\r\n    self.ignoreNextClick = true;\r\n  };\r\n  self.scrollGrid = function (e) {\r\n    var pos = self.getLayerPos(e);\r\n    if (\r\n      self.attributes.scrollPointerLock &&\r\n      self.pointerLockPosition &&\r\n      ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\r\n        self.scrollStartMode,\r\n      ) !== -1\r\n    ) {\r\n      self.pointerLockPosition.x += e.movementX;\r\n      self.pointerLockPosition.y += e.movementY;\r\n      self.pointerLockPosition.x = Math.min(\r\n        self.width - self.style.scrollBarWidth,\r\n        Math.max(0, self.pointerLockPosition.x),\r\n      );\r\n      self.pointerLockPosition.y = Math.min(\r\n        self.height - self.style.scrollBarWidth,\r\n        Math.max(0, self.pointerLockPosition.y),\r\n      );\r\n      pos = self.pointerLockPosition;\r\n    }\r\n    self.scrollMode = self.getCellAt(pos.x, pos.y).context;\r\n    if (\r\n      self.scrollMode === 'horizontal-scroll-box' &&\r\n      self.scrollStartMode !== 'horizontal-scroll-box'\r\n    ) {\r\n      self.scrollStartMode = 'horizontal-scroll-box';\r\n      self.dragStart = pos;\r\n      self.scrollStart.left = self.scrollBox.scrollLeft;\r\n      clearTimeout(self.scrollTimer);\r\n      return;\r\n    }\r\n    if (\r\n      self.scrollMode === 'vertical-scroll-box' &&\r\n      self.scrollStartMode !== 'vertical-scroll-box'\r\n    ) {\r\n      self.scrollStartMode = 'vertical-scroll-box';\r\n      self.dragStart = pos;\r\n      self.scrollStart.top = self.scrollBox.scrollTop;\r\n      clearTimeout(self.scrollTimer);\r\n      return;\r\n    }\r\n    if (\r\n      self.scrollStartMode === 'vertical-scroll-box' &&\r\n      self.scrollMode !== 'vertical-scroll-box'\r\n    ) {\r\n      self.scrollMode = 'vertical-scroll-box';\r\n    }\r\n    if (\r\n      self.scrollStartMode === 'horizontal-scroll-box' &&\r\n      self.scrollMode !== 'horizontal-scroll-box'\r\n    ) {\r\n      self.scrollMode = 'horizontal-scroll-box';\r\n    }\r\n    clearTimeout(self.scrollTimer);\r\n    if (self.scrollModes.indexOf(self.scrollMode) === -1) {\r\n      return;\r\n    }\r\n    if (self.scrollMode === 'vertical-scroll-box') {\r\n      self.scrollBox.scrollTop =\r\n        self.scrollStart.top +\r\n        (pos.y - self.dragStart.y) / self.scrollBox.heightBoxRatio;\r\n    } else if (self.scrollMode === 'vertical-scroll-top') {\r\n      self.scrollBox.scrollTop -= self.page * self.style.cellHeight;\r\n      self.scrollTimer = setTimeout(\r\n        self.scrollGrid,\r\n        self.attributes.scrollRepeatRate,\r\n        e,\r\n      );\r\n    } else if (self.scrollMode === 'vertical-scroll-bottom') {\r\n      self.scrollBox.scrollTop += self.page * self.style.cellHeight;\r\n      self.scrollTimer = setTimeout(\r\n        self.scrollGrid,\r\n        self.attributes.scrollRepeatRate,\r\n        e,\r\n      );\r\n    }\r\n    if (self.scrollMode === 'horizontal-scroll-box') {\r\n      self.scrollBox.scrollLeft =\r\n        self.scrollStart.left +\r\n        (pos.x - self.dragStart.x) / self.scrollBox.widthBoxRatio;\r\n    } else if (self.scrollMode === 'horizontal-scroll-right') {\r\n      self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\r\n      self.scrollTimer = setTimeout(\r\n        self.scrollGrid,\r\n        self.attributes.scrollRepeatRate,\r\n        e,\r\n      );\r\n    } else if (self.scrollMode === 'horizontal-scroll-left') {\r\n      self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\r\n      self.scrollTimer = setTimeout(\r\n        self.scrollGrid,\r\n        self.attributes.scrollRepeatRate,\r\n        e,\r\n      );\r\n    }\r\n  };\r\n  self.stopScrollGrid = function () {\r\n    clearTimeout(self.scrollTimer);\r\n    if (document.exitPointerLock) {\r\n      document.exitPointerLock();\r\n    }\r\n    document.removeEventListener('mousemove', self.scrollGrid, false);\r\n  };\r\n  self.dragReorder = function (e) {\r\n    var pos,\r\n      x,\r\n      y,\r\n      columReorder = self.dragMode === 'column-reorder',\r\n      rowReorder = self.dragMode === 'row-reorder';\r\n    pos = self.getLayerPos(e);\r\n    x = pos.x - self.dragStart.x;\r\n    y = pos.y - self.dragStart.y;\r\n    if (!self.attributes.allowColumnReordering && columReorder) {\r\n      return;\r\n    }\r\n    if (!self.attributes.allowRowReordering && rowReorder) {\r\n      return;\r\n    }\r\n    if ((e.ctrlKey || e.metaKey || e.shiftKey) && self.reorderObject) {\r\n      if (\r\n        self.dragMode === 'column-reorder' &&\r\n        !self.isMultiColumnsSelected(self.draggingItem.header.index)\r\n      ) {\r\n        self.selectColumn(self.draggingItem.header.index, false, false);\r\n      }\r\n    }\r\n    if (\r\n      self.dispatchEvent('reordering', {\r\n        NativeEvent: e,\r\n        source: self.dragStartObject,\r\n        target: self.currentCell,\r\n        dragMode: self.dragMode,\r\n      })\r\n    ) {\r\n      return;\r\n    }\r\n    if (\r\n      Math.abs(x) > self.attributes.reorderDeadZone ||\r\n      Math.abs(y) > self.attributes.reorderDeadZone\r\n    ) {\r\n      self.reorderObject = self.draggingItem;\r\n      if (self.isMultiRowsSelected)\r\n        self.reorderObject = self.getVisibleCellByIndex(\r\n          -1,\r\n          self.activeCell.rowIndex,\r\n        );\r\n      self.reorderTarget = self.currentCell;\r\n      self.reorderObject.dragOffset = {\r\n        x: x,\r\n        y: y,\r\n      };\r\n      self.autoScrollZone(\r\n        e,\r\n        columReorder ? pos.x : -1,\r\n        rowReorder ? pos.y : -1,\r\n        false,\r\n      );\r\n    }\r\n  };\r\n  self.stopDragReorder = function (e) {\r\n    var oIndex,\r\n      tIndex,\r\n      odata = [],\r\n      cr = {\r\n        'row-reorder': self.orders.rows,\r\n        'column-reorder': self.orders.columns,\r\n      },\r\n      i = {\r\n        'row-reorder': 'rowIndex',\r\n        'column-reorder': 'sortColumnIndex',\r\n      }[self.dragMode];\r\n    document.body.removeEventListener('mousemove', self.dragReorder, false);\r\n    document.body.removeEventListener('mouseup', self.stopDragReorder, false);\r\n    if (\r\n      self.reorderObject &&\r\n      self.reorderTarget &&\r\n      ((self.dragMode === 'column-reorder' &&\r\n        self.reorderTarget.sortColumnIndex > -1 &&\r\n        self.reorderTarget.sortColumnIndex < self.getSchema().length) ||\r\n        (self.dragMode === 'row-reorder' &&\r\n          self.reorderTarget.rowIndex > -1 &&\r\n          self.reorderTarget.rowIndex < self.viewData.length)) &&\r\n      self.reorderObject[i] !== self.reorderTarget[i] &&\r\n      !self.dispatchEvent('reorder', {\r\n        NativeEvent: e,\r\n        source: self.reorderObject,\r\n        target: self.reorderTarget,\r\n        dragMode: self.dragMode,\r\n      })\r\n    ) {\r\n      self.ignoreNextClick = true;\r\n      oIndex = cr[self.dragMode].indexOf(self.reorderObject[i]);\r\n      tIndex = cr[self.dragMode].indexOf(self.reorderTarget[i]);\r\n      if (self.dragMode === 'column-reorder') {\r\n        var sortColumnIndices = [];\r\n        var seletedColumnIndices = [];\r\n        if (self.selections[0]) {\r\n          self.selections[0].forEach(function (value) {\r\n            sortColumnIndices.push(self.orders.columns[value]);\r\n          });\r\n        }\r\n        var deleteCount = sortColumnIndices.length;\r\n        cr[self.dragMode].splice(oIndex, deleteCount);\r\n        if (tIndex > oIndex) tIndex = tIndex - (deleteCount - 1);\r\n        for (var i = 0; i < sortColumnIndices.length; i++) {\r\n          seletedColumnIndices.push(tIndex + i);\r\n          cr[self.dragMode].splice(tIndex + i, 0, sortColumnIndices[i]);\r\n        }\r\n        self.orders.columns = cr[self.dragMode];\r\n        self.viewData.forEach(function (row, rowIndex) {\r\n          self.selections[rowIndex] = seletedColumnIndices;\r\n        });\r\n      } else {\r\n        var selectedRows = [];\r\n        self.selections.forEach(function (row, rowIndex) {\r\n          if (row) {\r\n            selectedRows.push(row);\r\n            odata.push(self.viewData[rowIndex]);\r\n          }\r\n        });\r\n        self.viewData.splice(oIndex, odata.length);\r\n        self.selections = [];\r\n        if (tIndex > oIndex) tIndex = tIndex - (odata.length - 1);\r\n        self.activeCell.rowIndex = tIndex;\r\n        for (var i = 0; i < odata.length; i++) {\r\n          self.viewData.splice(tIndex + i, 0, odata[i]);\r\n          self.selections[tIndex + i] = selectedRows[i];\r\n        }\r\n      }\r\n      self.resize();\r\n      self.setStorageData();\r\n    }\r\n    self.reorderObject = undefined;\r\n    self.reorderTarget = undefined;\r\n    self.draw(true);\r\n  };\r\n  self.dragMove = function (e) {\r\n    if (\r\n      self.dispatchEvent('moving', { NativeEvent: e, cell: self.currentCell })\r\n    ) {\r\n      return;\r\n    }\r\n    var pos = self.getLayerPos(e);\r\n    self.moveOffset = {\r\n      x: self.currentCell.columnIndex - self.dragStartObject.columnIndex,\r\n      y: self.currentCell.rowIndex - self.dragStartObject.rowIndex,\r\n    };\r\n    if (\r\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\r\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\r\n    ) {\r\n      setTimeout(function () {\r\n        self.autoScrollZone(e, pos.x, pos.y, false);\r\n      }, 1);\r\n    }\r\n  };\r\n  self.stopDragMove = function (e) {\r\n    document.body.removeEventListener('mousemove', self.dragMove, false);\r\n    document.body.removeEventListener('mouseup', self.stopDragMove, false);\r\n    var b = self.getSelectionBounds();\r\n    if (\r\n      self.dispatchEvent('endmove', { NativeEvent: e, cell: self.currentCell })\r\n    ) {\r\n      self.movingSelection = undefined;\r\n      self.moveOffset = undefined;\r\n      self.draw(true);\r\n      return;\r\n    }\r\n    if (self.moveOffset) {\r\n      self.moveTo(\r\n        self.movingSelection,\r\n        b.left + self.moveOffset.x,\r\n        b.top + self.moveOffset.y,\r\n      );\r\n      self.moveSelection(self.moveOffset.x, self.moveOffset.y);\r\n    }\r\n    self.movingSelection = undefined;\r\n    self.moveOffset = undefined;\r\n    self.draw(true);\r\n  };\r\n  self.freezeMove = function (e) {\r\n    if (\r\n      self.dispatchEvent('freezemoving', {\r\n        NativeEvent: e,\r\n        cell: self.currentCell,\r\n      })\r\n    ) {\r\n      return;\r\n    }\r\n    var pos = self.getLayerPos(e),\r\n      bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\r\n      columnHeaderCellBorder = self.style.columnHeaderCellBorderWidth * bm,\r\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\r\n      rowHeaderCellWidth = self.getRowHeaderCellWidth();\r\n\r\n    self.ignoreNextClick = true;\r\n    self.freezeMarkerPosition = pos;\r\n    if (\r\n      self.currentCell &&\r\n      self.currentCell.rowIndex !== undefined &&\r\n      self.dragMode === 'frozen-row-marker'\r\n    ) {\r\n      self.scrollBox.scrollTop = 0;\r\n      self.frozenRow = self.currentCell.rowIndex + 1;\r\n      self.scrollBox.bar.v.y =\r\n        columnHeaderCellHeight +\r\n        columnHeaderCellBorder +\r\n        self.scrollCache.y[self.frozenRow];\r\n      self.scrollBox.box.v.y =\r\n        columnHeaderCellHeight +\r\n        columnHeaderCellBorder +\r\n        self.scrollCache.y[self.frozenRow];\r\n      var dataHeight = self.scrollCache.y[self.scrollCache.y.length - 1];\r\n      self.scrollBox.heightBoxRatio =\r\n        (self.scrollBox.height -\r\n          columnHeaderCellHeight -\r\n          self.scrollCache.y[self.frozenRow]) /\r\n        dataHeight;\r\n      self.scrollBox.scrollBoxHeight =\r\n        self.scrollBox.height * self.scrollBox.heightBoxRatio -\r\n        self.style.scrollBarWidth;\r\n      self.scrollBox.scrollBoxHeight = Math.max(\r\n        self.scrollBox.scrollBoxHeight,\r\n        self.style.scrollBarBoxMinSize,\r\n      );\r\n      self.scrollBox.box.v.height = self.scrollBox.scrollBoxHeight;\r\n    }\r\n    if (\r\n      self.currentCell &&\r\n      self.currentCell.columnIndex !== undefined &&\r\n      self.dragMode === 'frozen-column-marker'\r\n    ) {\r\n      self.scrollBox.scrollLeft = 0;\r\n      self.frozenColumn = self.currentCell.columnIndex + 1;\r\n      self.scrollBox.bar.h.x =\r\n        rowHeaderCellWidth + self.scrollCache.x[self.frozenColumn - 1];\r\n      self.scrollBox.box.h.x =\r\n        rowHeaderCellWidth + self.scrollCache.x[self.frozenColumn - 1];\r\n      var dataWidth = self.scrollCache.x[self.scrollCache.x.length - 1];\r\n      self.scrollBox.widthBoxRatio =\r\n        (self.scrollBox.width - self.scrollCache.x[self.frozenColumn - 1]) /\r\n        dataWidth;\r\n      self.scrollBox.scrollBoxWidth =\r\n        self.scrollBox.width * self.scrollBox.widthBoxRatio -\r\n        self.style.scrollBarWidth;\r\n      self.scrollBox.scrollBoxWidth = Math.max(\r\n        self.scrollBox.scrollBoxWidth,\r\n        self.style.scrollBarBoxMinSize,\r\n      );\r\n      self.scrollBox.box.h.width = self.scrollBox.scrollBoxWidth;\r\n    }\r\n    if (\r\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\r\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\r\n    ) {\r\n      setTimeout(function () {\r\n        self.autoScrollZone(e, pos.x, pos.y, false);\r\n      }, 1);\r\n    }\r\n  };\r\n  self.stopFreezeMove = function (e) {\r\n    document.body.removeEventListener('mousemove', self.freezeMove, false);\r\n    document.body.removeEventListener('mouseup', self.stopFreezeMove, false);\r\n    self.freezeMarkerPosition = undefined;\r\n    if (\r\n      self.dispatchEvent('endfreezemove', {\r\n        NativeEvent: e,\r\n        cell: self.currentCell,\r\n      })\r\n    ) {\r\n      self.frozenRow = self.startFreezeMove.x;\r\n      self.frozenColumn = self.startFreezeMove.y;\r\n      self.draw(true);\r\n      return;\r\n    }\r\n    self.draw(true);\r\n  };\r\n  self.mousedown = function (e, overridePos) {\r\n    self.lastMouseDownTarget = e.target;\r\n    if (\r\n      self.dispatchEvent('mousedown', {\r\n        NativeEvent: e,\r\n        cell: self.currentCell,\r\n      })\r\n    ) {\r\n      return;\r\n    }\r\n    if (!self.hasFocus) {\r\n      return;\r\n    }\r\n    if (e.button === 2 || self.input) {\r\n      return;\r\n    }\r\n    var ctrl = e.ctrlKey || e.metaKey,\r\n      move = /-move/.test(self.dragMode),\r\n      freeze = /frozen-row-marker|frozen-column-marker/.test(self.dragMode),\r\n      resize = /-resize/.test(self.dragMode);\r\n    self.dragStart = overridePos || self.getLayerPos(e);\r\n    self.scrollStart = {\r\n      left: self.scrollBox.scrollLeft,\r\n      top: self.scrollBox.scrollTop,\r\n    };\r\n    self.dragStartObject = self.getCellAt(self.dragStart.x, self.dragStart.y);\r\n    self.dragAddToSelection = !self.dragStartObject.selected;\r\n    if (\r\n      !ctrl &&\r\n      !e.shiftKey &&\r\n      !/(vertical|horizontal)-scroll-(bar|box)/.test(\r\n        self.dragStartObject.context,\r\n      ) &&\r\n      self.currentCell &&\r\n      !self.currentCell.isColumnHeader &&\r\n      !move &&\r\n      !freeze &&\r\n      !resize\r\n    ) {\r\n      if (\r\n        !(self.dragMode == 'row-reorder' && self.isMultiRowsSelected) &&\r\n        !(self.currentCell.hovered && self.hovers.onFilterButton)\r\n      ) {\r\n        self.selections = [];\r\n      }\r\n    }\r\n    if (self.dragStartObject.isGrid) {\r\n      return;\r\n    }\r\n    if (self.scrollModes.indexOf(self.dragStartObject.context) !== -1) {\r\n      self.scrollMode = self.dragStartObject.context;\r\n      self.scrollStartMode = self.dragStartObject.context;\r\n      self.scrollGrid(e);\r\n      if (\r\n        self.attributes.scrollPointerLock &&\r\n        ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\r\n          self.scrollStartMode,\r\n        ) !== -1\r\n      ) {\r\n        self.pointerLockPosition = {\r\n          x: self.dragStart.x,\r\n          y: self.dragStart.y,\r\n        };\r\n        self.canvas.requestPointerLock();\r\n      }\r\n      document.addEventListener('mousemove', self.scrollGrid, false);\r\n      document.addEventListener('mouseup', self.stopScrollGrid, false);\r\n      self.ignoreNextClick = true;\r\n      return;\r\n    }\r\n    if (self.dragMode === 'cell') {\r\n      self.selecting = true;\r\n      if (\r\n        (self.attributes.selectionMode === 'row' ||\r\n          self.dragStartObject.columnIndex === -1) &&\r\n        self.dragStartObject.rowIndex > -1\r\n      ) {\r\n        self.selectRow(self.dragStartObject.rowIndex, ctrl, null);\r\n      } else if (self.attributes.selectionMode !== 'row') {\r\n        self.mousemove(e);\r\n      }\r\n      return;\r\n    }\r\n    if (move) {\r\n      self.draggingItem = self.dragItem;\r\n      self.movingSelection = self.selections.concat([]);\r\n      self.dragging = self.dragStartObject;\r\n      if (\r\n        self.dispatchEvent('beginmove', {\r\n          NativeEvent: e,\r\n          cell: self.currentCell,\r\n        })\r\n      ) {\r\n        return;\r\n      }\r\n      document.body.addEventListener('mousemove', self.dragMove, false);\r\n      document.body.addEventListener('mouseup', self.stopDragMove, false);\r\n      return self.mousemove(e);\r\n    }\r\n    if (freeze) {\r\n      self.draggingItem = self.dragItem;\r\n      self.startFreezeMove = {\r\n        x: self.frozenRow,\r\n        y: self.frozenColumn,\r\n      };\r\n      if (self.dispatchEvent('beginfreezemove', { NativeEvent: e })) {\r\n        return;\r\n      }\r\n      document.body.addEventListener('mousemove', self.freezeMove, false);\r\n      document.body.addEventListener('mouseup', self.stopFreezeMove, false);\r\n      return self.mousemove(e);\r\n    }\r\n    if (resize) {\r\n      self.draggingItem = self.dragItem;\r\n      if (self.draggingItem.rowOpen) {\r\n        self.resizingStartingHeight =\r\n          self.sizes.trees[self.draggingItem.rowIndex];\r\n      } else {\r\n        self.resizingStartingHeight =\r\n          self.sizes.rows[self.draggingItem.rowIndex] || self.style.cellHeight;\r\n      }\r\n      self.resizingStartingWidth =\r\n        self.sizes.columns[\r\n          self.draggingItem.header.style === 'rowHeaderCell'\r\n            ? 'cornerCell'\r\n            : self.draggingItem.sortColumnIndex\r\n        ] || self.draggingItem.width;\r\n      document.body.addEventListener('mousemove', self.dragResizeColumn, false);\r\n      document.body.addEventListener('mouseup', self.stopDragResize, false);\r\n      return;\r\n    }\r\n    if (['row-reorder', 'column-reorder'].indexOf(self.dragMode) !== -1) {\r\n      self.draggingItem = self.dragStartObject;\r\n      if (\r\n        self.dragMode === 'column-reorder' &&\r\n        !self.isMultiColumnsSelected(self.currentCell.header.index)\r\n      ) {\r\n        self.selectColumn(self.currentCell.header.index, ctrl, e.shiftKey);\r\n      } else if (self.dragMode === 'row-reorder' && !self.isMultiRowsSelected) {\r\n        self.selectRow(self.dragStartObject.rowIndex, ctrl, null);\r\n      }\r\n      document.body.addEventListener('mousemove', self.dragReorder, false);\r\n      document.body.addEventListener('mouseup', self.stopDragReorder, false);\r\n      return;\r\n    }\r\n  };\r\n  self.mouseup = function (e) {\r\n    clearTimeout(self.scrollTimer);\r\n    self.cellBoundaryCrossed = true;\r\n    self.rowBoundaryCrossed = true;\r\n    self.columnBoundaryCrossed = true;\r\n    self.selecting = undefined;\r\n    self.draggingItem = undefined;\r\n    self.dragStartObject = undefined;\r\n    if (\r\n      self.dispatchEvent('mouseup', { NativeEvent: e, cell: self.currentCell })\r\n    ) {\r\n      return;\r\n    }\r\n    if (!self.hasFocus && e.target !== self.canvas) {\r\n      return;\r\n    }\r\n    if (self.currentCell && self.currentCell.grid !== undefined) {\r\n      return;\r\n    }\r\n    if (self.contextMenu || self.input) {\r\n      return;\r\n    }\r\n    if (self.dragStart && self.isInGrid(self.dragStart)) {\r\n      self.controlInput.focus();\r\n    }\r\n    e.preventDefault();\r\n  };\r\n  // gets the horizontal adjacent cells as well as first/last based on column visibility\r\n  self.getAdjacentCells = function () {\r\n    var x,\r\n      i,\r\n      s = self.getSchema(),\r\n      o = {};\r\n    for (x = 0; x < s.length; x += 1) {\r\n      i = self.orders.columns[x];\r\n      if (!s[i].hidden) {\r\n        if (o.first === undefined) {\r\n          o.first = x;\r\n          o.left = x;\r\n        }\r\n        o.last = x;\r\n        if (x > self.activeCell.columnIndex && o.right === undefined) {\r\n          o.right = x;\r\n        }\r\n        if (x < self.activeCell.columnIndex) {\r\n          o.left = x;\r\n        }\r\n      }\r\n    }\r\n    if (o.right === undefined) {\r\n      o.right = o.last;\r\n    }\r\n    return o;\r\n  };\r\n  self.keydown = function (e) {\r\n    var i,\r\n      ev,\r\n      adjacentCells = self.getAdjacentCells(),\r\n      x = Math.max(self.activeCell.columnIndex, 0),\r\n      y = Math.max(self.activeCell.rowIndex, 0),\r\n      ctrl = e.ctrlKey || e.metaKey,\r\n      last = self.viewData.length - 1,\r\n      s = self.getSchema(),\r\n      cols = s.length - 1;\r\n\r\n    var defaultPrevented = self.dispatchEvent('keydown', {\r\n      NativeEvent: e,\r\n      cell: self.currentCell,\r\n    });\r\n\r\n    if (defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (!self.attributes.keepFocusOnMouseOut && !self.hasFocus) {\r\n      return;\r\n    }\r\n\r\n    // If a user starts typing content, switch to \"Enter\" mode\r\n    if (isPrintableKeyEvent(e) && !ctrl) {\r\n      return self.beginEditAt(x, y, e, true);\r\n    }\r\n\r\n    if (self.attributes.showNewRow) {\r\n      last += 1;\r\n    }\r\n\r\n    if (e.key === 'Tab') {\r\n      e.preventDefault();\r\n    }\r\n\r\n    if (e.key === 'Escape') {\r\n      self.selectNone();\r\n    } else if (ctrl && e.key === 'a') {\r\n      self.selectAll();\r\n    } else if (['Backspace', 'Delete'].includes(e.key)) {\r\n      self.deleteSelectedData();\r\n    } else if (e.key === 'ArrowDown') {\r\n      y += 1;\r\n    } else if (e.key === 'ArrowUp') {\r\n      y -= 1;\r\n    } else if (\r\n      (e.key === 'ArrowLeft' && !ctrl) ||\r\n      (e.shiftKey && e.key === 'Tab')\r\n    ) {\r\n      x = adjacentCells.left;\r\n    } else if (\r\n      (e.key === 'ArrowRight' && !ctrl) ||\r\n      (!e.shiftKey && e.key === 'Tab')\r\n    ) {\r\n      x = adjacentCells.right;\r\n    } else if (e.key === 'PageUp') {\r\n      y -= self.page;\r\n      e.preventDefault();\r\n    } else if (e.key === 'PageDown') {\r\n      y += self.page;\r\n      e.preventDefault();\r\n    } else if (e.key === 'Home' || (ctrl && e.key === 'ArrowUp')) {\r\n      y = 0;\r\n    } else if (e.key === 'End' || (ctrl && e.key === 'ArrowDown')) {\r\n      y = self.viewData.length - 1;\r\n    } else if (ctrl && e.key === 'ArrowRight') {\r\n      x = adjacentCells.last;\r\n    } else if (ctrl && e.key === 'ArrowLeft') {\r\n      x = adjacentCells.first;\r\n    }\r\n\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      return self.beginEditAt(x, y, e);\r\n    }\r\n    if (x < 0 || Number.isNaN(x)) {\r\n      x = adjacentCells.first;\r\n    }\r\n    if (y > last) {\r\n      y = last;\r\n    }\r\n    if (y < 0 || Number.isNaN(y)) {\r\n      y = 0;\r\n    }\r\n    if (x > cols) {\r\n      x = adjacentCells.last;\r\n    }\r\n\r\n    // TODO - most likely some column order related bugs in key based selection\r\n    // Arrows\r\n    var isArrowKey = [\r\n      'ArrowLeft',\r\n      'ArrowUp',\r\n      'ArrowRight',\r\n      'ArrowDown',\r\n    ].includes(e.key);\r\n\r\n    // Shrinking and expanding selection using shift and arrow keys\r\n    if (e.shiftKey && isArrowKey) {\r\n      const firstSelectedRowIndex = self.selections.findIndex((el) => !!el);\r\n      const firstSelectedRow = self.selections[firstSelectedRowIndex];\r\n      const firstSelectedColumnIndex = firstSelectedRow[0];\r\n      const lastSelectedColumn = firstSelectedRow[firstSelectedRow.length - 1];\r\n      const yAtTop = y === 0;\r\n      const yAtBottom = y === last;\r\n      const xAtLeft = x === 0;\r\n      const xAtRight = x === cols;\r\n\r\n      if (e.key === 'ArrowUp') {\r\n        if (y + 1 > firstSelectedRowIndex && !yAtTop) {\r\n          self.selections.pop();\r\n        } else if (y < firstSelectedRowIndex) {\r\n          self.selections[y] = self.selections[y] || [];\r\n          self.selections[y].push(x);\r\n        } else if (yAtTop && self.activeCell.rowIndex !== 0) {\r\n          self.selections.pop();\r\n        }\r\n      }\r\n\r\n      if (e.key === 'ArrowDown') {\r\n        if (y > firstSelectedRowIndex && y === self.selections.length) {\r\n          self.selections[y] = self.selections[y] || [];\r\n          self.selections[y].push(x);\r\n        } else if (y >= firstSelectedRowIndex && !yAtBottom) {\r\n          delete self.selections[y - 1];\r\n        } else if (yAtBottom && self.activeCell.rowIndex !== last) {\r\n          delete self.selections[y - 1];\r\n        }\r\n      }\r\n\r\n      for (const selection of self.selections) {\r\n        if (e.key === 'ArrowRight' && selection) {\r\n          if (x > lastSelectedColumn) {\r\n            selection.push(x);\r\n          } else if (x <= lastSelectedColumn && !xAtRight) {\r\n            selection.shift();\r\n          } else if (xAtRight && self.activeCell.columnIndex !== cols) {\r\n            selection.shift();\r\n          }\r\n        }\r\n\r\n        if (e.key === 'ArrowLeft' && selection) {\r\n          if (x < firstSelectedColumnIndex) {\r\n            selection.unshift(x);\r\n          } else if (x >= firstSelectedColumnIndex && !xAtLeft) {\r\n            selection.pop();\r\n          } else if (xAtLeft && self.activeCell.columnIndex !== 0) {\r\n            selection.pop();\r\n          }\r\n        }\r\n      }\r\n\r\n      self.selectionBounds = self.getSelectionBounds();\r\n      self.selectArea(undefined, ctrl);\r\n\r\n      self.draw(true);\r\n    }\r\n\r\n    if (x !== self.activeCell.columnIndex || y !== self.activeCell.rowIndex) {\r\n      self.scrollIntoView(\r\n        x !== self.activeCell.columnIndex ? x : undefined,\r\n        y !== self.activeCell.rowIndex && !Number.isNaN(y) ? y : undefined,\r\n      );\r\n\r\n      self.setActiveCell(x, y);\r\n      if (!e.shiftKey && self.attributes.selectionFollowsActiveCell) {\r\n        if (!ctrl) {\r\n          self.selections = [];\r\n        }\r\n        self.selections[y] = self.selections[y] || [];\r\n        self.selections[y].push(x);\r\n        ev = {\r\n          selectedData: self.getSelectedData(),\r\n          selections: self.selections,\r\n          selectionBounds: self.getSelectionBounds(),\r\n          selectedCells: self.getSelectedCells(),\r\n        };\r\n        Object.defineProperty(ev, 'selectedData', {\r\n          get: function () {\r\n            return self.getSelectedData();\r\n          },\r\n        });\r\n        self.dispatchEvent('selectionchanged', ev);\r\n      }\r\n      self.draw(true);\r\n    }\r\n  };\r\n  self.keyup = function (e) {\r\n    if (\r\n      self.dispatchEvent('keyup', { NativeEvent: e, cell: self.currentCell })\r\n    ) {\r\n      return;\r\n    }\r\n    if (!self.hasFocus) {\r\n      return;\r\n    }\r\n  };\r\n  self.keypress = function (e) {\r\n    if (!self.hasFocus) {\r\n      return;\r\n    }\r\n    if (\r\n      self.dispatchEvent('keypress', { NativeEvent: e, cell: self.currentCell })\r\n    ) {\r\n      return;\r\n    }\r\n  };\r\n  self.dblclick = function (e) {\r\n    if (\r\n      self.dispatchEvent('dblclick', { NativeEvent: e, cell: self.currentCell })\r\n    ) {\r\n      return;\r\n    }\r\n    if (!self.hasFocus) {\r\n      return;\r\n    }\r\n    if (\r\n      self.currentCell.context === 'ew-resize' &&\r\n      self.currentCell.style === 'columnHeaderCell'\r\n    ) {\r\n      // Check that double-clicked cell is selected or part of selection.\r\n      const currentCellIsSelected = self.isColumnSelected(\r\n        self.currentCell.columnIndex,\r\n      );\r\n\r\n      if (currentCellIsSelected) {\r\n        // There might be more\r\n        self.fitSelectedColumns();\r\n      } else {\r\n        self.fitColumnToValues(self.currentCell.header.name);\r\n      }\r\n    } else if (\r\n      self.currentCell.context === 'ew-resize' &&\r\n      self.currentCell.style === 'cornerCell'\r\n    ) {\r\n      self.autosize();\r\n    } else if (\r\n      ['cell', 'activeCell'].includes(self.currentCell.style) &&\r\n      !self.hovers.onFilterButton\r\n    ) {\r\n      self.beginEditAt(self.currentCell.columnIndex, self.currentCell.rowIndex);\r\n    }\r\n  };\r\n  self.scrollWheel = function (e) {\r\n    var l,\r\n      t,\r\n      ev = e,\r\n      deltaX = e.deltaX === undefined ? e.NativeEvent.deltaX : e.deltaX,\r\n      deltaY = e.deltaY === undefined ? e.NativeEvent.deltaY : e.deltaY,\r\n      deltaMode =\r\n        e.deltaMode === undefined ? e.NativeEvent.deltaMode : e.deltaMode;\r\n    var e = e.NativeEvent || e;\r\n    if (wheeling) {\r\n      ev.preventDefault(e);\r\n      return;\r\n    }\r\n    if (self.dispatchEvent('wheel', { NativeEvent: e })) {\r\n      return;\r\n    }\r\n    self.touchHaltAnimation = true;\r\n    l = self.scrollBox.scrollLeft;\r\n    t = self.scrollBox.scrollTop;\r\n    if (self.hasFocus) {\r\n      //BUG Issue 42: https://github.com/TonyGermaneri/canvas-datagrid/issues/42\r\n      //https://stackoverflow.com/questions/20110224/what-is-the-height-of-a-line-in-a-wheel-event-deltamode-dom-delta-line\r\n      if (deltaMode === 1) {\r\n        // line mode = 17 pixels per line\r\n        deltaY = deltaY * 17;\r\n      }\r\n      if (\r\n        (self.scrollBox.scrollTop < self.scrollBox.scrollHeight &&\r\n          deltaY > 0) ||\r\n        (self.scrollBox.scrollLeft < self.scrollBox.scrollWidth &&\r\n          deltaX > 0) ||\r\n        (self.scrollBox.scrollTop > 0 && deltaY < 0) ||\r\n        (self.scrollBox.scrollLeft > 0 && deltaX < 0)\r\n      ) {\r\n        ev.preventDefault(e);\r\n      }\r\n      wheeling = setTimeout(function () {\r\n        wheeling = undefined;\r\n        self.scrollBox.scrollTo(deltaX + l, deltaY + t);\r\n      }, 1);\r\n    }\r\n  };\r\n  self.pasteData = function (\r\n    pasteValue,\r\n    mimeType,\r\n    startRowIndex,\r\n    startColIndex,\r\n  ) {\r\n    if (mimeType === 'text/html' && !isSupportedHtml(pasteValue)) {\r\n      console.warn(\r\n        'Unrecognized HTML format. HTML must be a simple table, e.g.: <table><tr><td>data</td></tr></table>.',\r\n      );\r\n      console.warn(\r\n        'Data with the mime type text/html not in this format will not be imported as row data.',\r\n      );\r\n\r\n      return;\r\n    }\r\n    var schema = self.getSchema();\r\n    var rows = parseData(pasteValue, mimeType);\r\n\r\n    // selected cell. This mimics Excel's paste functionality, and works\r\n    // as a poor-man's fill-down.\r\n    if (rows.length === 1 && rows[0].length === 1) {\r\n      var cellData = rows[0][0].value.map((item) => item.value).join();\r\n\r\n      self.forEachSelectedCell(function (data, rowIndex, colName) {\r\n        data[rowIndex][colName] = cellData;\r\n      });\r\n    } else {\r\n      var selections = [];\r\n      for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\r\n        // Rows may have been moved by user, so get the actual row index\r\n        // (instead of the row index at which the row is rendered):\r\n        var realRowIndex = self.orders.rows[startRowIndex + rowIndex];\r\n        var cells = rows[rowIndex];\r\n\r\n        var existingRowData = self.viewData[realRowIndex];\r\n        var newRowData = Object.assign({}, existingRowData);\r\n\r\n        selections[realRowIndex] = [];\r\n\r\n        for (var colIndex = 0; colIndex < cells.length; colIndex++) {\r\n          var column = schema[startColIndex + colIndex];\r\n\r\n          if (!column) {\r\n            console.warn('Paste data exceeded grid bounds. Skipping.');\r\n            continue;\r\n          }\r\n\r\n          var columnName = column.name;\r\n          var cellData = cells[colIndex].value\r\n            .map((item) => item.value)\r\n            .join('');\r\n\r\n          if (cellData === undefined || cellData === null) {\r\n            newRowData[columnName] = existingRowData[columnName];\r\n            continue;\r\n          }\r\n\r\n          selections[realRowIndex].push(startColIndex + colIndex);\r\n\r\n          newRowData[columnName] = cellData;\r\n        }\r\n\r\n        self.originalData[self.boundRowIndexMap.get(realRowIndex)] = newRowData;\r\n        // Update view date here to avoid a full refresh of `viewData`.\r\n        // To stay in line with Excel and Google Sheet behaviour,\r\n        // don't perform a full refresh (and filter/sort results)\r\n        // as this would make any pasted values disappear and/or suddenly change position.\r\n        self.viewData[realRowIndex] = newRowData;\r\n      }\r\n      self.selections = selections;\r\n    }\r\n\r\n    // selections is a sparse array, so we condense:\r\n    var affectedCells = [];\r\n\r\n    self.selections.forEach(function (row, rowIndex) {\r\n      if (rowIndex === undefined) return;\r\n\r\n      row.forEach(function (columnIndex) {\r\n        affectedCells.push([\r\n          rowIndex,\r\n          columnIndex,\r\n          self.getBoundRowIndexFromViewRowIndex(rowIndex),\r\n          self.getBoundColumnIndexFromViewColumnIndex(columnIndex),\r\n        ]);\r\n      });\r\n    });\r\n\r\n    self.dispatchEvent('afterpaste', {\r\n      cells: affectedCells,\r\n    });\r\n\r\n    return rows.length;\r\n  };\r\n  self.getNextVisibleColumnIndex = function (visibleColumnIndex) {\r\n    var x,\r\n      s = self.getVisibleSchema();\r\n    for (x = 0; x < s.length; x += 1) {\r\n      if (s[x].columnIndex === visibleColumnIndex) {\r\n        return s[x + 1].columnIndex;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n  self.getVisibleColumnIndexOf = function (columnIndex) {\r\n    var x,\r\n      s = self.getVisibleSchema();\r\n    for (x = 0; x < s.length; x += 1) {\r\n      if (s[x].columnIndex === columnIndex) {\r\n        return x;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n  self.paste = function (event) {\r\n    if (!self.attributes.editable) {\r\n      return;\r\n    }\r\n\r\n    var defaultPrevented = self.dispatchEvent('beforepaste', {\r\n      NativeEvent: event,\r\n    });\r\n\r\n    if (defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    var clipboardItems = new Map(\r\n      Array.from(event.clipboardData.items).map((item) => [item.type, item]),\r\n    );\r\n\r\n    // Supported MIME types, in order of preference:\r\n    var supportedMimeTypes = ['text/html', 'text/csv', 'text/plain'];\r\n\r\n    // The clipboard will often contain the same data in multiple formats,\r\n    // which can be used depending on the context in which it's pasted. Here\r\n    // we'll prefere more structured (HTML/CSV) over less structured, when\r\n    // available, so we try to find those first:\r\n    var pasteableItems = supportedMimeTypes\r\n      .map((mimeType) => clipboardItems.get(mimeType))\r\n      .filter((item) => !!item); // filter out not-found MIME types (= undefined)\r\n\r\n    if (pasteableItems.length === 0) {\r\n      console.warn(\r\n        'Cannot find supported clipboard data type. Supported types are:',\r\n        supportedMimeTypes.join(', '),\r\n      );\r\n      return;\r\n    }\r\n\r\n    var itemToPaste = pasteableItems[0];\r\n\r\n    let startCell = [];\r\n    for (\r\n      let rowIndex = 0, len = self.selections.length;\r\n      rowIndex < len;\r\n      rowIndex++\r\n    ) {\r\n      const row = self.selections[rowIndex];\r\n      if (row) {\r\n        if (row[0] === undefined) return;\r\n        startCell = [rowIndex, row[0] < 0 ? row[1] : row[0]];\r\n        break;\r\n      }\r\n    }\r\n\r\n    // itemToPaste is cleared once accessed (getData or getAsString),\r\n    // so we need to store the type here, before reading its value:\r\n    var pasteType = itemToPaste.type;\r\n\r\n    itemToPaste.getAsString(function (pasteValue) {\r\n      self.pasteData(pasteValue, pasteType, startCell[0], startCell[1]);\r\n\r\n      self.draw();\r\n    });\r\n  };\r\n  self.cut = function (e) {\r\n    if (self.dispatchEvent('cut', { NativeEvent: e })) {\r\n      return;\r\n    }\r\n\r\n    // Expecting instance of `ClipboardEvent` with `clipboardData` attribute\r\n    if (!self.hasFocus || !e.clipboardData) {\r\n      return;\r\n    }\r\n\r\n    self.copySelectedCellsToClipboard(e.clipboardData);\r\n\r\n    const affectedCells = self.clearSelectedCells();\r\n\r\n    self.dispatchEvent('aftercut', {\r\n      cells: affectedCells,\r\n    });\r\n\r\n    requestAnimationFrame(() => self.draw());\r\n  };\r\n  self.copy = function (e) {\r\n    if (self.dispatchEvent('copy', { NativeEvent: e })) {\r\n      return;\r\n    }\r\n\r\n    // Expecting instance of `ClipboardEvent` with `clipboardData` attribute\r\n    if (!self.hasFocus || !e.clipboardData) {\r\n      return;\r\n    }\r\n\r\n    self.copySelectedCellsToClipboard(e.clipboardData);\r\n\r\n    e.preventDefault();\r\n  };\r\n  return;\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nexport default function (self) {\r\n  var touchTimerMs = 50,\r\n    debounceTouchMove,\r\n    touchMoving,\r\n    touchScrollTimeout;\r\n  self.scrollAnimation = {};\r\n  self.touchDelta = {};\r\n  self.touchAnimateTo = {};\r\n  self.animationFrames = 0;\r\n  self.getTouchPos = function (e, touchIndex) {\r\n    var t = touchIndex ? e.touches[touchIndex] : e.touches[0],\r\n      rect = self.canvas.getBoundingClientRect(),\r\n      pos;\r\n    if (!t) {\r\n      return;\r\n    }\r\n    pos = {\r\n      x: t.clientX - rect.left,\r\n      y: t.clientY - rect.top,\r\n    };\r\n    if (self.isChildGrid) {\r\n      pos.x -= self.canvasOffsetLeft;\r\n      pos.y -= self.canvasOffsetTop;\r\n    }\r\n    return {\r\n      x: pos.x,\r\n      y: pos.y,\r\n      rect: rect,\r\n    };\r\n  };\r\n  // shamelessly stolen from from https://gist.github.com/gre/1650294\r\n  self.easingFunctions = {\r\n    linear: function (t) {\r\n      return t;\r\n    },\r\n    easeInQuad: function (t) {\r\n      return t * t;\r\n    },\r\n    easeOutQuad: function (t) {\r\n      return t * (2 - t);\r\n    },\r\n    easeInOutQuad: function (t) {\r\n      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\r\n    },\r\n    easeInCubic: function (t) {\r\n      return t * t * t;\r\n    },\r\n    easeOutCubic: function (t) {\r\n      return --t * t * t + 1;\r\n    },\r\n    easeInOutCubic: function (t) {\r\n      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n    },\r\n    easeInQuart: function (t) {\r\n      return t * t * t * t;\r\n    },\r\n    easeOutQuart: function (t) {\r\n      return 1 - --t * t * t * t;\r\n    },\r\n    easeInOutQuart: function (t) {\r\n      return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\r\n    },\r\n    easeInQuint: function (t) {\r\n      return t * t * t * t * t;\r\n    },\r\n    easeOutQuint: function (t) {\r\n      return 1 + --t * t * t * t * t;\r\n    },\r\n    easeInOutQuint: function (t) {\r\n      return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\r\n    },\r\n  };\r\n  self.easing = function (t, b, c, d) {\r\n    return (\r\n      c * self.easingFunctions[self.attributes.touchEasingMethod](t / d) + b\r\n    );\r\n  };\r\n  self.calculatePPSTimed = function () {\r\n    self.xPPST = -(\r\n      (self.touchDelta.x - self.touchSigmaTimed.x) /\r\n      (self.touchDelta.t - self.touchSigmaTimed.t)\r\n    );\r\n    self.yPPST = -(\r\n      (self.touchDelta.y - self.touchSigmaTimed.y) /\r\n      (self.touchDelta.t - self.touchSigmaTimed.t)\r\n    );\r\n    self.touchSigmaTimed = {\r\n      x: self.touchDelta.x,\r\n      y: self.touchDelta.y,\r\n      t: performance.now(),\r\n    };\r\n  };\r\n  self.calculatePPS = function () {\r\n    self.xPPS = -(\r\n      (self.touchDelta.x - self.touchSigma.x) /\r\n      (self.touchDelta.t - self.touchSigma.t)\r\n    );\r\n    self.yPPS = -(\r\n      (self.touchDelta.y - self.touchSigma.y) /\r\n      (self.touchDelta.t - self.touchSigma.t)\r\n    );\r\n    self.touchSigma = {\r\n      x: self.touchDelta.x,\r\n      y: self.touchDelta.y,\r\n      t: performance.now(),\r\n    };\r\n  };\r\n  self.touchEndAnimation = function () {\r\n    if (!self.canvas || !self.scrollBox.scrollTo) {\r\n      return requestAnimationFrame(self.touchEndAnimation);\r\n    }\r\n    var n = performance.now(),\r\n      d = self.attributes.touchReleaseAnimationDurationMs,\r\n      t;\r\n    t = n - self.touchDelta.t;\r\n    self.animationFrames += 1;\r\n    self.scrollAnimation.x = self.easing(\r\n      t,\r\n      self.touchDelta.scrollLeft,\r\n      self.touchAnimateTo.x,\r\n      d,\r\n    );\r\n    self.scrollAnimation.y = self.easing(\r\n      t,\r\n      self.touchDelta.scrollTop,\r\n      self.touchAnimateTo.y,\r\n      d,\r\n    );\r\n    if (\r\n      t > d ||\r\n      (self.scrollAnimation.y === self.scrollBox.scrollTop &&\r\n        self.scrollAnimation.x === self.scrollBox.scrollLeft) ||\r\n      self.stopAnimation\r\n    ) {\r\n      return;\r\n    }\r\n    self.scrollBox.scrollTo(self.scrollAnimation.x, self.scrollAnimation.y);\r\n    requestAnimationFrame(self.touchEndAnimation);\r\n  };\r\n  self.touchEditCell = function (cell) {\r\n    self.beginEditAt(cell.columnIndex, cell.rowIndex);\r\n  };\r\n  self.touchstart = function (e) {\r\n    if (e.changedTouches[0]) {\r\n      self.touchStart = self.getTouchPos(e);\r\n      self.startingCell = self.getCellAt(\r\n        self.touchStart.x,\r\n        self.touchStart.y,\r\n        true,\r\n      );\r\n    }\r\n    if (\r\n      self.dispatchEvent('touchstart', {\r\n        NativeEvent: e,\r\n        cell: self.startingCell,\r\n      })\r\n    ) {\r\n      return;\r\n    }\r\n    self.disposeContextMenu();\r\n    clearInterval(self.calculatePPSTimer);\r\n    clearTimeout(self.touchContextTimeout);\r\n    self.touchStartEvent = e;\r\n    self.stopAnimation = true;\r\n    self.animationFrames = 0;\r\n    self.stopPropagation(e);\r\n    if (e.touches.length === 1 && e.changedTouches[0] && !self.zoomAltered) {\r\n      self.touchLength = 1;\r\n      self.touchStart = self.touchStart || self.touchStart1;\r\n      self.touchScrollStart = {\r\n        x: self.scrollBox.scrollLeft,\r\n        y: self.scrollBox.scrollTop,\r\n        t: performance.now(),\r\n      };\r\n      self.touchDelta = {\r\n        x: 0,\r\n        y: 0,\r\n        scrollLeft: self.scrollBox.scrollLeft,\r\n        scrollTop: self.scrollBox.scrollTop,\r\n        t: self.touchScrollStart.t,\r\n      };\r\n      self.touchSigma = {\r\n        x: self.touchDelta.x,\r\n        y: self.touchDelta.y,\r\n        t: self.touchDelta.t,\r\n      };\r\n      self.touchSigmaTimed = {\r\n        x: self.touchDelta.x,\r\n        y: self.touchDelta.y,\r\n        t: self.touchDelta.t,\r\n      };\r\n      self.touchContextTimeout = setTimeout(function () {\r\n        self.contextmenuEvent(e, self.touchStart);\r\n      }, self.attributes.touchContextMenuTimeMs);\r\n      self.calculatePPSTimer = setInterval(\r\n        self.calculatePPSTimed,\r\n        touchTimerMs,\r\n      );\r\n      if (\r\n        self.startingCell &&\r\n        (self.startingCell.isGrid ||\r\n          ['tree', 'inherit'].indexOf(self.startingCell.context) !== -1)\r\n      ) {\r\n        self.hasFocus = false;\r\n        return;\r\n      }\r\n      self.hasFocus = true;\r\n      if (self.startingCell.isHeader) {\r\n        if (self.startingCell.isRowHeader) {\r\n          self.selectArea({\r\n            top: self.startingCell.rowIndex,\r\n            bottom: self.startingCell.rowIndex,\r\n            left: 0,\r\n            right: self.getVisibleSchema().length - 1,\r\n          });\r\n          self.draw(true);\r\n        } else if (self.startingCell.isColumnHeader) {\r\n          if (self.attributes.columnHeaderClickBehavior === 'sort') {\r\n            if (self.orderBy === self.startingCell.header.name) {\r\n              self.orderDirection =\r\n                self.orderDirection === 'asc' ? 'desc' : 'asc';\r\n            } else {\r\n              self.orderDirection = 'asc';\r\n            }\r\n            self.order(self.startingCell.header.name, self.orderDirection);\r\n          }\r\n          if (self.attributes.columnHeaderClickBehavior === 'select') {\r\n            self.selectArea({\r\n              top: 0,\r\n              bottom: self.viewData.length - 1,\r\n              left: self.startingCell.columnIndex,\r\n              right: self.startingCell.columnIndex,\r\n            });\r\n            self.draw(true);\r\n          }\r\n        }\r\n        self.touchEndEvents(e);\r\n        return;\r\n      }\r\n    }\r\n    if (self.zoomAltered) {\r\n      return;\r\n    }\r\n    document.body.addEventListener('touchmove', self.touchmove, {\r\n      passive: false,\r\n    });\r\n    document.body.addEventListener('touchend', self.touchend, false);\r\n    document.body.addEventListener('touchcancel', self.touchcancel, false);\r\n    self.draw(true);\r\n  };\r\n  self.touchSelect = function (cell, handleType) {\r\n    if (cell.rowIndex === undefined || cell.columnIndex === undefined) {\r\n      return;\r\n    }\r\n    self.touchSelecting = true;\r\n    var bounds = self.getSelectionBounds();\r\n    if (\r\n      handleType === 'selection-handle-bl' &&\r\n      cell.rowIndex >= bounds.top &&\r\n      cell.columnIndex <= bounds.right\r\n    ) {\r\n      bounds.bottom = cell.rowIndex;\r\n      bounds.left = cell.columnIndex;\r\n    } else if (\r\n      handleType === 'selection-handle-tl' &&\r\n      cell.rowIndex <= bounds.bottom &&\r\n      cell.columnIndex <= bounds.right\r\n    ) {\r\n      bounds.top = cell.rowIndex;\r\n      bounds.left = cell.columnIndex;\r\n    } else if (\r\n      handleType === 'selection-handle-tr' &&\r\n      cell.rowIndex <= bounds.bottom &&\r\n      cell.columnIndex >= bounds.left\r\n    ) {\r\n      bounds.top = cell.rowIndex;\r\n      bounds.right = cell.columnIndex;\r\n    } else if (\r\n      handleType === 'selection-handle-br' &&\r\n      cell.rowIndex >= bounds.top &&\r\n      cell.columnIndex >= bounds.left\r\n    ) {\r\n      bounds.bottom = cell.rowIndex;\r\n      bounds.right = cell.columnIndex;\r\n    }\r\n    if (self.attributes.selectionMode === 'row' || cell.rowIndex === -1) {\r\n      bounds.left = 0;\r\n      bounds.right = self.getSchema().length - 1;\r\n    } else {\r\n      bounds.left = Math.max(0, bounds.left);\r\n    }\r\n    self.selectArea(bounds);\r\n    self.draw(true);\r\n  };\r\n  function touchMove(e) {\r\n    var ch, rw, rScrollZone, lScrollZone, bScrollZone, tScrollZone, sbw, t1, t2;\r\n    if (self.dispatchEvent('beforetouchmove', { NativeEvent: e })) {\r\n      return;\r\n    }\r\n    clearTimeout(touchScrollTimeout);\r\n    if (e.changedTouches[0]) {\r\n      self.touchPosition = self.getTouchPos(e);\r\n    }\r\n    if (e.changedTouches[1]) {\r\n      self.touchPosition1 = self.getTouchPos(e, 1);\r\n    }\r\n    if (\r\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) >\r\n      self.attributes.touchDeadZone\r\n    ) {\r\n      clearTimeout(self.touchContextTimeout);\r\n    }\r\n    if (e.touches.length === 2 && self.touchPosition && self.touchPosition1) {\r\n      t1 = self.touchPosition.y;\r\n      t2 = self.touchPosition1.y;\r\n      if (!self.zoomDeltaStart) {\r\n        self.zoomDeltaStart = Math.abs(t1 - t2);\r\n        self.startScale = self.scale;\r\n      }\r\n      self.touchLength = 2;\r\n      self.scaleDelta = self.zoomDeltaStart - Math.abs(t1 - t2);\r\n      self.scale =\r\n        self.startScale -\r\n        self.scaleDelta * self.attributes.touchZoomSensitivity;\r\n      self.scale = Math.min(\r\n        Math.max(self.scale, self.attributes.touchZoomMin),\r\n        self.attributes.touchZoomMax,\r\n      );\r\n      self.zoomAltered = true;\r\n      self.resize(true);\r\n      self.resizeChildGrids();\r\n      return;\r\n    }\r\n    if (self.zoomAltered) {\r\n      return;\r\n    }\r\n    self.touchLength = 1;\r\n    self.touchPosition = self.touchPosition || self.touchPosition1;\r\n    ch = self.getColumnHeaderCellHeight();\r\n    rw = self.getRowHeaderCellWidth();\r\n    rScrollZone =\r\n      self.width - self.style.scrollBarWidth - self.touchPosition.x <\r\n      self.attributes.selectionScrollZone;\r\n    lScrollZone =\r\n      self.touchPosition.x - rw < self.attributes.selectionScrollZone;\r\n    bScrollZone =\r\n      self.height - self.style.scrollBarWidth - self.touchPosition.y <\r\n      self.attributes.selectionScrollZone;\r\n    tScrollZone =\r\n      self.touchPosition.y - ch < self.attributes.selectionScrollZone;\r\n    sbw = self.style.scrollBarWidth;\r\n    function touchScroll() {\r\n      var x = self.scrollBox.scrollLeft,\r\n        y = self.scrollBox.scrollTop;\r\n      x += rScrollZone ? self.attributes.selectionScrollIncrement : 0;\r\n      y += bScrollZone ? self.attributes.selectionScrollIncrement : 0;\r\n      y -= tScrollZone ? self.attributes.selectionScrollIncrement : 0;\r\n      x -= lScrollZone ? self.attributes.selectionScrollIncrement : 0;\r\n      self.scrollBox.scrollTo(x, y);\r\n      touchScrollTimeout = setTimeout(\r\n        touchScroll,\r\n        self.attributes.scrollRepeatRate,\r\n      );\r\n    }\r\n    e.stopPropagation();\r\n    self.touchDelta = {\r\n      x: self.touchPosition.x - self.touchStart.x,\r\n      y: self.touchPosition.y - self.touchStart.y,\r\n      scrollLeft: self.scrollBox.scrollLeft,\r\n      scrollTop: self.scrollBox.scrollTop,\r\n      t: performance.now(),\r\n    };\r\n    self.currentCell = self.getCellAt(\r\n      self.touchPosition.x,\r\n      self.touchPosition.y,\r\n    );\r\n    self.dispatchEvent('touchmove', { NativeEvent: e, cell: self.currentCell });\r\n    self.calculatePPS();\r\n    self.touchDuration = performance.now() - self.touchScrollStart.t;\r\n    self.stopAnimation = true;\r\n    self.animationFrames = 0;\r\n    if (\r\n      self.touchSelecting &&\r\n      (rScrollZone || lScrollZone || tScrollZone || bScrollZone)\r\n    ) {\r\n      touchScroll();\r\n    }\r\n    if (/vertical-scroll-/.test(self.startingCell.style)) {\r\n      self.scrollBox.scrollTop =\r\n        self.scrollBox.scrollHeight *\r\n        ((self.touchPosition.y - ch - sbw) /\r\n          (self.scrollBox.height - sbw - ch));\r\n      return;\r\n    }\r\n    if (/horizontal-scroll-/.test(self.startingCell.style)) {\r\n      self.scrollBox.scrollLeft =\r\n        self.scrollBox.scrollWidth *\r\n        ((self.touchPosition.x - rw - sbw) / (self.scrollBox.width - sbw - rw));\r\n      return;\r\n    }\r\n    if (/selection-handle-/.test(self.startingCell.style)) {\r\n      self.touchSelect(self.currentCell, self.startingCell.style);\r\n      return;\r\n    }\r\n    self.scrollBox.scrollTo(\r\n      self.touchScrollStart.x - self.touchDelta.x,\r\n      self.touchScrollStart.y - self.touchDelta.y,\r\n    );\r\n  }\r\n  self.touchmove = function (e) {\r\n    if (touchMoving) {\r\n      return;\r\n    }\r\n    requestAnimationFrame(function () {\r\n      touchMoving = true;\r\n      touchMove(e);\r\n      touchMoving = false;\r\n    });\r\n  };\r\n  self.touchEndEvents = function (e) {\r\n    self.zoomDeltaStart = undefined;\r\n    self.touchSelecting = false;\r\n    clearInterval(self.touchScrollTimeout);\r\n    clearInterval(self.touchContextTimeout);\r\n    clearInterval(self.calculatePPSTimer);\r\n    e.stopPropagation();\r\n    document.body.removeEventListener('touchmove', self.touchmove, {\r\n      passive: false,\r\n    });\r\n    document.body.removeEventListener('touchend', self.touchend, false);\r\n    document.body.removeEventListener('touchcancel', self.touchcancel, false);\r\n  };\r\n  self.touchend = function (e) {\r\n    if (\r\n      self.dispatchEvent('touchend', { NativeEvent: e, cell: self.currentCell })\r\n    ) {\r\n      return;\r\n    }\r\n    self.zoomDeltaStart = undefined;\r\n    if (e.changedTouches[0]) {\r\n      self.touchPosition = undefined;\r\n    }\r\n    if (e.changedTouches[1]) {\r\n      self.touchPosition1 = undefined;\r\n    }\r\n    if (self.zoomAltered) {\r\n      if (e.touches.length === 0) {\r\n        self.zoomAltered = false;\r\n      }\r\n      return;\r\n    }\r\n    var dz =\r\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\r\n      self.attributes.touchDeadZone;\r\n    if (isNaN(self.xPPS)) {\r\n      self.xPPS = 0;\r\n    }\r\n    if (isNaN(self.yPPS)) {\r\n      self.yPPS = 0;\r\n    }\r\n    if (isNaN(self.xPPST)) {\r\n      self.xPPST = 0;\r\n    }\r\n    if (isNaN(self.yPPST)) {\r\n      self.yPPST = 0;\r\n    }\r\n    self.touchAnimateTo.x =\r\n      self.xPPS * self.attributes.touchReleaseAcceleration;\r\n    self.touchAnimateTo.y =\r\n      self.yPPS * self.attributes.touchReleaseAcceleration;\r\n    self.calculatePPSTimed();\r\n    if (\r\n      !dz &&\r\n      self.animationFrames === 0 &&\r\n      (Math.abs(self.xPPST) > self.attributes.scrollAnimationPPSThreshold ||\r\n        Math.abs(self.yPPST) > self.attributes.scrollAnimationPPSThreshold) &&\r\n      !/-scroll-/.test(self.startingCell.style) &&\r\n      !dz\r\n    ) {\r\n      self.stopAnimation = false;\r\n      self.touchEndAnimation();\r\n    }\r\n    self.touchEndEvents(e);\r\n  };\r\n  self.touchcancel = function (e) {\r\n    if (\r\n      self.dispatchEvent('touchcancel', {\r\n        NativeEvent: e,\r\n        cell: self.currentCell,\r\n      })\r\n    ) {\r\n      return;\r\n    }\r\n    self.touchEndEvents(e);\r\n  };\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals HTMLElement: false, Reflect: false, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nimport { createHTMLString, createTextString } from './events/util';\r\n\r\nexport default function (self, ctor) {\r\n  self.scale = 1;\r\n  self.orders = {\r\n    rows: [],\r\n    columns: [],\r\n  };\r\n  self.appliedInlineStyles = {};\r\n  self.cellGridAttributes = {};\r\n  self.treeGridAttributes = {};\r\n  self.visibleRowHeights = [];\r\n  self.hasFocus = false;\r\n  self.activeCell = {\r\n    columnIndex: 0,\r\n    rowIndex: 0,\r\n  };\r\n  self.innerHTML = '';\r\n  self.storageName = 'canvasDataGrid';\r\n  self.invalidSearchExpClass = 'canvas-datagrid-invalid-search-regExp';\r\n  self.localStyleLibraryStorageKey = 'canvas-datagrid-user-style-library';\r\n  self.dataType = 'application/x-canvas-datagrid';\r\n  self.orderBy = null;\r\n  self.orderDirection = 'asc';\r\n  self.orderings = {\r\n    columns: [],\r\n    add: function (orderBy, orderDirection, sortFunction) {\r\n      self.orderings.columns = self.orderings.columns.filter(function (col) {\r\n        return col.orderBy !== orderBy;\r\n      });\r\n      self.orderings.columns.push({\r\n        orderBy: orderBy,\r\n        orderDirection: orderDirection,\r\n        sortFunction: sortFunction,\r\n      });\r\n    },\r\n    sort: function () {\r\n      console.warn(\r\n        'grid.orderings.sort has been deprecated. Please use grid.refresh().',\r\n      );\r\n\r\n      self.orderings.columns.forEach(function (col) {\r\n        self.viewData.sort(col.sortFunction(col.orderBy, col.orderDirection));\r\n      });\r\n    },\r\n  };\r\n  self.columnFilters = {};\r\n  self.filters = {};\r\n  self.frozenRow = 0;\r\n  self.frozenColumn = 0;\r\n  self.ellipsisCache = {};\r\n  self.scrollCache = { x: [], y: [] };\r\n  self.scrollBox = {};\r\n  self.visibleRows = [];\r\n  self.visibleCells = [];\r\n  self.sizes = {\r\n    rows: {},\r\n    columns: {},\r\n    trees: {},\r\n  };\r\n  self.selections = [];\r\n  self.filterable = {\r\n    rows: [],\r\n    columns: [],\r\n  };\r\n  self.selectedFilterButton = {\r\n    columnIndex: -1,\r\n    rowIndex: -1,\r\n  };\r\n  self.hovers = {};\r\n  self.attributes = {};\r\n  self.style = {};\r\n  self.formatters = {};\r\n  self.sorters = {};\r\n  self.parsers = {};\r\n  self.schemaHashes = {};\r\n  self.events = {};\r\n  self.changes = [];\r\n  self.scrollIndexTop = 0;\r\n  self.scrollPixelTop = 0;\r\n  self.scrollIndexLeft = 0;\r\n  self.scrollPixelLeft = 0;\r\n  self.childGrids = {};\r\n  self.openChildren = {};\r\n  self.scrollModes = [\r\n    'vertical-scroll-box',\r\n    'vertical-scroll-top',\r\n    'vertical-scroll-bottom',\r\n    'horizontal-scroll-box',\r\n    'horizontal-scroll-right',\r\n    'horizontal-scroll-left',\r\n  ];\r\n  self.componentL1Events = {};\r\n  self.eventNames = [\r\n    'afterdraw',\r\n    'afterrendercell',\r\n    'afterrenderfilterbutton',\r\n    'attributechanged',\r\n    'beforebeginedit',\r\n    'beforecreatecellgrid',\r\n    'beforedraw',\r\n    'beforeendedit',\r\n    'beforerendercell',\r\n    'beforerendercellgrid',\r\n    'beforerenderfilterbutton',\r\n    'beginedit',\r\n    'cellmouseout',\r\n    'cellmouseover',\r\n    'click',\r\n    'collapsetree',\r\n    'contextmenu',\r\n    'copy',\r\n    'datachanged',\r\n    'dblclick',\r\n    'endedit',\r\n    'expandtree',\r\n    'formatcellvalue',\r\n    'keydown',\r\n    'keypress',\r\n    'keyup',\r\n    'mousedown',\r\n    'mousemove',\r\n    'mouseup',\r\n    'newrow',\r\n    'ordercolumn',\r\n    'rendercell',\r\n    'rendercellgrid',\r\n    'renderorderbyarrow',\r\n    'rendertext',\r\n    'rendertreearrow',\r\n    'reorder',\r\n    'reordering',\r\n    'resize',\r\n    'resizecolumn',\r\n    'resizerow',\r\n    'schemachanged',\r\n    'scroll',\r\n    'selectionchanged',\r\n    'stylechanged',\r\n    'touchcancel',\r\n    'touchend',\r\n    'touchmove',\r\n    'touchstart',\r\n    'wheel',\r\n  ];\r\n  self.mouse = { x: 0, y: 0 };\r\n  self.getSelectedData = function (expandToRow) {\r\n    const selectedData = [];\r\n    const schema = self.getSchema();\r\n    const viewDataLength = self.viewData.length;\r\n\r\n    if (viewDataLength === 0) {\r\n      return [];\r\n    }\r\n\r\n    // self.selections is a sparse array, so `viewRowIndex` here\r\n    // will equal the row index as where it's rendered,\r\n    // not as where it is in the original data array.\r\n    self.selections.forEach(function (row, viewRowIndex) {\r\n      if (!row) {\r\n        return;\r\n      }\r\n\r\n      if (viewRowIndex === viewDataLength) {\r\n        return;\r\n      }\r\n\r\n      if (row.length === 0) {\r\n        selectedData[viewRowIndex] = null;\r\n        return;\r\n      }\r\n\r\n      selectedData[viewRowIndex] = {};\r\n\r\n      row.forEach(function (col) {\r\n        if (col === -1 || !schema[col]) {\r\n          return;\r\n        }\r\n\r\n        const orderedIndex = self.orders.columns[col];\r\n\r\n        if (!expandToRow && schema[orderedIndex].hidden) {\r\n          return;\r\n        }\r\n\r\n        if (self.viewData[viewRowIndex]) {\r\n          selectedData[viewRowIndex][schema[orderedIndex].name] =\r\n            self.viewData[viewRowIndex][schema[orderedIndex].name];\r\n        }\r\n      });\r\n    });\r\n\r\n    return selectedData;\r\n  };\r\n  self.getSelectedCells = function (expandToRow) {\r\n    const selectedCells = [];\r\n    const schema = self.getSchema();\r\n    const viewDataLength = self.viewData.length;\r\n\r\n    if (viewDataLength === 0) {\r\n      return [];\r\n    }\r\n\r\n    for (const [viewRowIndex, row] of self.selections.entries()) {\r\n      if (!row || row.length === 0) continue;\r\n\r\n      for (const [, viewColumnIndex] of row.entries()) {\r\n        if (viewColumnIndex === -1 || !schema[viewColumnIndex]) {\r\n          continue;\r\n        }\r\n\r\n        const boundColumnIndex = self.getBoundColumnIndexFromViewColumnIndex(\r\n          viewColumnIndex,\r\n        );\r\n\r\n        if (!expandToRow && schema[boundColumnIndex].hidden) {\r\n          continue;\r\n        }\r\n\r\n        if (self.viewData[viewRowIndex]) {\r\n          const header = schema[boundColumnIndex];\r\n          const value = self.viewData[viewRowIndex][header.name];\r\n          const boundRowIndex = self.getBoundRowIndexFromViewRowIndex(\r\n            viewRowIndex,\r\n          );\r\n\r\n          const cell = {\r\n            value,\r\n            header,\r\n            boundRowIndex,\r\n            boundColumnIndex,\r\n            viewRowIndex,\r\n            viewColumnIndex,\r\n          };\r\n\r\n          selectedCells.push(cell);\r\n        }\r\n      }\r\n    }\r\n\r\n    return selectedCells;\r\n  };\r\n  self.copySelectedCellsToClipboard = function (clipboardData) {\r\n    const selectedData = [];\r\n    const schema = self.getSchema();\r\n    let firstRowAsString;\r\n    let isNeat = true; // Selected like [[0, 1], [0, 1]] of [[0, 3]] is neat; Selected like [[0, 1], [1, 2]] is untidy\r\n\r\n    for (const [rowIndex, row] of self.selections.entries()) {\r\n      // If no cells are selected for a particular rowIndex the selections array will contain an empty element for that rowIndex.\r\n      if (!row) continue;\r\n\r\n      // Convert to string for easy comparison to the first row.\r\n      const rowAsString = row.join(',').toString();\r\n      const rowDict = {};\r\n\r\n      if (!firstRowAsString) firstRowAsString = row.join(',').toString();\r\n      if (isNeat && rowAsString !== firstRowAsString) isNeat = false;\r\n\r\n      const boundRowIndex = self.getBoundRowIndexFromViewRowIndex(rowIndex);\r\n\r\n      for (let columnIndex of row) {\r\n        // If the whole row is selected the columnIndex for the rowHeader is -1.\r\n        if (columnIndex < 0) continue;\r\n\r\n        const boundColumnIndex = self.getBoundColumnIndexFromViewColumnIndex(\r\n          columnIndex,\r\n        );\r\n        const columnName = schema[boundColumnIndex].name;\r\n\r\n        const value = self.originalData[boundRowIndex][columnName];\r\n\r\n        rowDict[columnName] = value;\r\n      }\r\n      selectedData.push(rowDict);\r\n    }\r\n\r\n    if (selectedData.length > 0) {\r\n      const textString = createTextString(selectedData, isNeat);\r\n      const htmlString = createHTMLString(selectedData, isNeat);\r\n\r\n      const copiedData = {\r\n        'text/plain': textString,\r\n        'text/html': htmlString,\r\n        'text/csv': textString,\r\n        'application/json': JSON.stringify(selectedData),\r\n      };\r\n\r\n      for (const [mimeType, data] of Object.entries(copiedData)) {\r\n        clipboardData.setData(mimeType, data);\r\n      }\r\n    }\r\n  };\r\n  self.clearSelectedCells = function () {\r\n    const schema = self.getSchema();\r\n    const affectedCells = [];\r\n\r\n    for (const [rowIndex, row] of self.selections.entries()) {\r\n      // If no cells are selected for a particular rowIndex the selections array will contain an empty element for that rowIndex.\r\n      if (!row) continue;\r\n\r\n      const boundRowIndex = self.getBoundRowIndexFromViewRowIndex(rowIndex);\r\n\r\n      for (let columnIndex of row) {\r\n        // If the whole row is selected the columnIndex for the rowHeader is -1.\r\n        if (columnIndex < 0) continue;\r\n\r\n        const boundColumnIndex = self.getBoundColumnIndexFromViewColumnIndex(\r\n          columnIndex,\r\n        );\r\n        const columnName = schema[boundColumnIndex].name;\r\n\r\n        self.viewData[boundRowIndex][columnName] = '';\r\n\r\n        affectedCells.push([\r\n          rowIndex,\r\n          columnIndex,\r\n          boundRowIndex,\r\n          boundColumnIndex,\r\n        ]);\r\n      }\r\n    }\r\n\r\n    return affectedCells;\r\n  };\r\n  self.getBoundRowIndexFromViewRowIndex = function (viewRowIndex) {\r\n    if (self.boundRowIndexMap && self.boundRowIndexMap.has(viewRowIndex)) {\r\n      return self.boundRowIndexMap.get(viewRowIndex);\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n  self.getBoundColumnIndexFromViewColumnIndex = function (viewColumnIndex) {\r\n    return self.orders.columns[viewColumnIndex];\r\n  };\r\n  self.getColumnHeaderCellHeight = function () {\r\n    if (!self.attributes.showColumnHeaders) {\r\n      return 0;\r\n    }\r\n    return (\r\n      (self.sizes.rows[-1] || self.style.columnHeaderCellHeight) * self.scale\r\n    );\r\n  };\r\n  self.getRowHeaderCellWidth = function () {\r\n    if (!self.attributes.showRowHeaders) {\r\n      return 0;\r\n    }\r\n    return (\r\n      (self.sizes.columns[-1] || self.style.rowHeaderCellWidth) * self.scale\r\n    );\r\n  };\r\n  self.setStorageData = function () {\r\n    if (!self.attributes.saveAppearance || !self.attributes.name) {\r\n      return;\r\n    }\r\n    var visibility = {};\r\n    self.getSchema().forEach(function (column) {\r\n      visibility[column.name] = !column.hidden;\r\n    });\r\n    localStorage.setItem(\r\n      self.storageName + '-' + self.attributes.name,\r\n      JSON.stringify({\r\n        sizes: {\r\n          rows: self.sizes.rows,\r\n          columns: self.sizes.columns,\r\n        },\r\n        orders: {\r\n          rows: self.orders.rows,\r\n          columns: self.orders.columns,\r\n        },\r\n        orderBy: self.orderBy,\r\n        orderDirection: self.orderDirection,\r\n        visibility: visibility,\r\n      }),\r\n    );\r\n  };\r\n  self.getSchema = function () {\r\n    return self.schema || self.tempSchema || [];\r\n  };\r\n  function fillArray(low, high) {\r\n    var i = [],\r\n      x;\r\n    for (x = low; x <= high; x += 1) {\r\n      i[x] = x;\r\n    }\r\n    return i;\r\n  }\r\n  self.createColumnOrders = function () {\r\n    var s = self.getSchema();\r\n    self.orders.columns = fillArray(0, s.length - 1);\r\n  };\r\n  self.createRowOrders = function () {\r\n    self.orders.rows = fillArray(0, self.originalData.length - 1);\r\n  };\r\n  self.fitSelectedColumns = function (width) {\r\n    const selectedColumns = self.selections[0];\r\n    const schema = self.getSchema();\r\n\r\n    for (const selectedColumn of selectedColumns) {\r\n      // Make sure the column is not the row header and that the whole column has in fact been selected.\r\n      if (selectedColumn >= 0 && self.isColumnSelected(selectedColumn)) {\r\n        if (isNaN(width)) {\r\n          const column = schema[self.orders.columns[selectedColumn]];\r\n          self.fitColumnToValues(column.name);\r\n        } else {\r\n          self.sizes.columns[selectedColumn] = width;\r\n          self.dispatchEvent('resizecolumn', {\r\n            x: width,\r\n            y: self.resizingStartingHeight,\r\n            draggingItem: self.currentCell,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  self.getVisibleSchema = function () {\r\n    return self.getSchema().filter(function (col) {\r\n      return !col.hidden;\r\n    });\r\n  };\r\n  self.applyDefaultValue = function (row, header, rowIndex) {\r\n    var d = header.defaultValue || '';\r\n    if (typeof d === 'function') {\r\n      d = d.apply(self.intf, [header, rowIndex]);\r\n    }\r\n    row[header.name] = d;\r\n  };\r\n  self.createNewRowData = function () {\r\n    self.newRow = {};\r\n\r\n    // The third argument of applyDefaultValue is the row index\r\n    // of the row for which to apply the default value. In this\r\n    // case, we're creating a new row but not yet appending it\r\n    // to self.originalData, so no row index exists\r\n    const newRowIndex = undefined;\r\n\r\n    self.getSchema().forEach(function forEachHeader(header) {\r\n      self.applyDefaultValue(self.newRow, header, newRowIndex);\r\n    });\r\n  };\r\n  self.getSchemaNameHash = function (key) {\r\n    var n = 0;\r\n    while (self.schemaHashes[key]) {\r\n      n += 1;\r\n      key = key + n;\r\n    }\r\n    return key;\r\n  };\r\n  self.filter = function (type) {\r\n    var f = self.filters[type];\r\n    if (!f && type !== undefined) {\r\n      console.warn(\r\n        'Cannot find filter for type %s, falling back to substring match.',\r\n        type,\r\n      );\r\n      f = self.filters.string;\r\n    }\r\n    return f;\r\n  };\r\n  self.hasActiveFilters = function () {\r\n    return self.columnFilters && Object.keys(self.columnFilters).length > 0;\r\n  };\r\n  self.getFilteredAndSortedViewData = function (originalData) {\r\n    // We make a copy of originalData here in order be able to\r\n    // filter and sort rows without modifying the original array.\r\n    // Each row is turned into a (row, rowIndex) tuple\r\n    // so that when we apply filters, we can refer back to the\r\n    // row's original row number in originalData. This becomes\r\n    // useful when emitting cell events.\r\n    let newViewData = originalData.map((row, originalRowIndex) => [\r\n      row,\r\n      originalRowIndex,\r\n    ]);\r\n\r\n    // Apply filtering\r\n    for (const [headerName, filterText] of Object.entries(self.columnFilters)) {\r\n      const header = self.getHeaderByName(headerName);\r\n\r\n      if (!header) {\r\n        continue;\r\n      }\r\n\r\n      const currentFilterFunction =\r\n        header.filter || self.filter(header.type || 'string');\r\n\r\n      newViewData = newViewData.filter(function ([row, originalRowIndex]) {\r\n        if (\r\n          self.attributes.allowFreezingRows &&\r\n          !self.attributes.filterFrozenRows &&\r\n          originalRowIndex < self.frozenRow\r\n        )\r\n          return true;\r\n\r\n        return currentFilterFunction(row[headerName], filterText);\r\n      });\r\n    }\r\n\r\n    // Apply sorting\r\n    for (const column of self.orderings.columns) {\r\n      const sortFn = column.sortFunction(column.orderBy, column.orderDirection);\r\n\r\n      newViewData.sort(([rowA], [rowB, rowIndexB]) => {\r\n        if (\r\n          self.attributes.allowFreezingRows &&\r\n          !self.attributes.sortFrozenRows &&\r\n          rowIndexB < self.frozenRow\r\n        )\r\n          return 0;\r\n        return sortFn(rowA, rowB);\r\n      });\r\n    }\r\n\r\n    return {\r\n      viewData: newViewData.map(([row]) => row),\r\n      boundRowIndexMap: new Map(\r\n        newViewData.map(([_row, originalRowIndex], viewRowIndex) => [\r\n          viewRowIndex,\r\n          originalRowIndex,\r\n        ]),\r\n      ),\r\n    };\r\n  };\r\n  self.refresh = function () {\r\n    const { viewData, boundRowIndexMap } = self.getFilteredAndSortedViewData(\r\n      self.originalData,\r\n    );\r\n\r\n    self.viewData = viewData;\r\n    self.boundRowIndexMap = boundRowIndexMap;\r\n\r\n    self.resize();\r\n    self.draw(true);\r\n  };\r\n  self.getBestGuessDataType = function (columnName, data) {\r\n    var t,\r\n      x,\r\n      l = data.length;\r\n    for (x = 0; x < l; x += 1) {\r\n      if (\r\n        data[x] !== undefined &&\r\n        data[x] !== null &&\r\n        [null, undefined].indexOf(data[x][columnName]) !== -1\r\n      ) {\r\n        t = typeof data[x];\r\n        return t === 'object' ? 'string' : t;\r\n      }\r\n    }\r\n    return 'string';\r\n  };\r\n  self.drawChildGrids = function () {\r\n    Object.keys(self.childGrids).forEach(function (gridKey) {\r\n      self.childGrids[gridKey].draw();\r\n    });\r\n  };\r\n  self.resizeChildGrids = function () {\r\n    Object.keys(self.childGrids).forEach(function (gridKey) {\r\n      self.childGrids[gridKey].resize();\r\n    });\r\n  };\r\n  self.autoScrollZone = function (e, x, y, ctrl) {\r\n    var setTimer,\r\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\r\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight();\r\n    if (x !== -1) {\r\n      if (x > self.width - self.attributes.selectionScrollZone) {\r\n        self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\r\n        setTimer = true;\r\n      }\r\n      if (x - self.attributes.selectionScrollZone - rowHeaderCellWidth < 0) {\r\n        self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\r\n        setTimer = true;\r\n      }\r\n    }\r\n    if (y !== -1) {\r\n      if (y > self.height - self.attributes.selectionScrollZone) {\r\n        self.scrollBox.scrollTop += self.attributes.selectionScrollIncrement;\r\n        setTimer = true;\r\n      }\r\n      if (\r\n        y - self.attributes.selectionScrollZone - columnHeaderCellHeight <\r\n        0\r\n      ) {\r\n        self.scrollBox.scrollTop -= self.attributes.selectionScrollIncrement;\r\n        setTimer = true;\r\n      }\r\n    }\r\n    if (\r\n      setTimer &&\r\n      !ctrl &&\r\n      self.currentCell &&\r\n      self.currentCell.columnIndex !== -1\r\n    ) {\r\n      self.scrollTimer = setTimeout(\r\n        self.mousemove,\r\n        self.attributes.scrollRepeatRate,\r\n        e,\r\n      );\r\n    }\r\n  };\r\n  self.validateColumn = function (c, s) {\r\n    if (!c.name) {\r\n      throw new Error('A column must contain at least a name.');\r\n    }\r\n    if (\r\n      s.filter(function (i) {\r\n        return i.name === c.name;\r\n      }).length > 0\r\n    ) {\r\n      throw new Error(\r\n        'A column with the name ' +\r\n          c.name +\r\n          ' already exists and cannot be added again.',\r\n      );\r\n    }\r\n    return true;\r\n  };\r\n  self.setDefaults = function (obj1, obj2, key, def) {\r\n    obj1[key] = obj2[key] === undefined ? def : obj2[key];\r\n  };\r\n  self.setAttributes = function () {\r\n    self.defaults.attributes.forEach(function eachAttribute(i) {\r\n      self.setDefaults(self.attributes, self.args, i[0], i[1]);\r\n    });\r\n  };\r\n  self.setStyle = function () {\r\n    self.defaults.styles.forEach(function eachStyle(i) {\r\n      self.setDefaults(self.style, self.args.style || {}, i[0], i[1]);\r\n    });\r\n  };\r\n  self.autosize = function (colName) {\r\n    self.getVisibleSchema().forEach(function (col, colIndex) {\r\n      if (col.name === colName || colName === undefined) {\r\n        self.sizes.columns[colIndex] = Math.max(\r\n          self.findColumnMaxTextLength(col.name),\r\n          self.style.minColumnWidth,\r\n        );\r\n      }\r\n    });\r\n    self.sizes.columns[-1] = self.findColumnMaxTextLength('cornerCell');\r\n  };\r\n  self.dispose = function () {\r\n    if (!self.isChildGrid && self.canvas && self.canvas.parentNode) {\r\n      self.canvas.parentNode.removeChild(self.canvas);\r\n    }\r\n    if (!self.isChildGrid) {\r\n      document.body.removeChild(self.controlInput);\r\n    }\r\n    self.eventParent.removeEventListener('mouseup', self.mouseup, false);\r\n    self.eventParent.removeEventListener('mousedown', self.mousedown, false);\r\n    self.eventParent.removeEventListener('dblclick', self.dblclick, false);\r\n    self.eventParent.removeEventListener('click', self.click, false);\r\n    self.eventParent.removeEventListener('mousemove', self.mousemove);\r\n    self.eventParent.removeEventListener('wheel', self.scrollWheel, false);\r\n    self.canvas.removeEventListener('contextmenu', self.contextmenu, false);\r\n    self.canvas.removeEventListener('copy', self.copy);\r\n    self.controlInput.removeEventListener('copy', self.copy);\r\n    self.controlInput.removeEventListener('cut', self.cut);\r\n    self.controlInput.removeEventListener('paste', self.paste);\r\n    self.controlInput.removeEventListener('keypress', self.keypress, false);\r\n    self.controlInput.removeEventListener('keyup', self.keyup, false);\r\n    self.controlInput.removeEventListener('keydown', self.keydown, false);\r\n    document.body.removeEventListener('mousemove', self.mousemove);\r\n    window.removeEventListener('resize', self.resize);\r\n    // console.log(self, 'obs');\r\n    if (self.observer && self.observer.disconnect) {\r\n      self.observer.disconnect();\r\n    }\r\n  };\r\n  self.tryLoadStoredSettings = function () {\r\n    var s;\r\n    self.reloadStoredValues();\r\n    if (\r\n      self.storedSettings &&\r\n      typeof self.storedSettings.orders === 'object' &&\r\n      self.storedSettings.orders !== null\r\n    ) {\r\n      if (\r\n        self.storedSettings.orders.rows.length >= (self.viewData || []).length\r\n      ) {\r\n        self.orders.rows = self.storedSettings.orders.rows;\r\n      }\r\n      s = self.getSchema();\r\n      if (self.storedSettings.orders.columns.length === s.length) {\r\n        self.orders.columns = self.storedSettings.orders.columns;\r\n      }\r\n      self.orderBy =\r\n        self.storedSettings.orderBy === undefined\r\n          ? s[0].name\r\n          : self.storedSettings.orderBy;\r\n      self.orderDirection =\r\n        self.storedSettings.orderDirection === undefined\r\n          ? 'asc'\r\n          : self.storedSettings.orderDirection;\r\n      if (\r\n        self.storedSettings.orderBy !== undefined &&\r\n        self.getHeaderByName(self.orderBy) &&\r\n        self.orderDirection\r\n      ) {\r\n        self.order(self.orderBy, self.orderDirection);\r\n      }\r\n    }\r\n  };\r\n  self.getDomRoot = function () {\r\n    return self.shadowRoot ? self.shadowRoot.host : self.parentNode;\r\n  };\r\n  self.getFontName = function (fontStyle) {\r\n    return fontStyle.replace(/\\d+\\.?\\d*px/, '');\r\n  };\r\n  self.getFontHeight = function (fontStyle) {\r\n    return parseFloat(fontStyle, 10);\r\n  };\r\n  self.parseStyleValue = function (key) {\r\n    if (/Font/.test(key)) {\r\n      self.style[key + 'Height'] = self.getFontHeight(self.style[key]);\r\n      self.style[key + 'Name'] = self.getFontName(self.style[key]);\r\n      return;\r\n    }\r\n    // when inheriting styles from already instantiated grids, don't parse already parsed values.\r\n    if (\r\n      key === 'moveOverlayBorderSegments' &&\r\n      typeof self.style[key] === 'string'\r\n    ) {\r\n      self.style[key] = self.style[key].split(',').map(function (i) {\r\n        return parseInt(i, 10);\r\n      });\r\n    }\r\n  };\r\n  self.initProp = function (propName) {\r\n    if (!self.args[propName]) {\r\n      return;\r\n    }\r\n    Object.keys(self.args[propName]).forEach(function (key) {\r\n      self[propName][key] = self.args[propName][key];\r\n    });\r\n  };\r\n  self.getStyleProperty = function (key) {\r\n    if (self.styleKeys.indexOf(key) === -1) {\r\n      return self.parentNodeStyle[key];\r\n    }\r\n    return self.style[key];\r\n  };\r\n  self.setStyleProperty = function (key, value, supressDrawAndEvent) {\r\n    var isDim =\r\n      [\r\n        'height',\r\n        'width',\r\n        'minHeight',\r\n        'minWidth',\r\n        'maxHeight',\r\n        'maxWidth',\r\n      ].indexOf(key) !== -1;\r\n    if (self.styleKeys.indexOf(key) === -1) {\r\n      self.parentNodeStyle[key] = value;\r\n    } else {\r\n      if (/-/.test(key)) {\r\n        key = self.dehyphenateProperty(key);\r\n      }\r\n      self.style[key] = value;\r\n      self.parseStyleValue(key);\r\n    }\r\n    if (isDim) {\r\n      self.resize();\r\n    }\r\n    if (!supressDrawAndEvent) {\r\n      self.draw(true);\r\n      self.dispatchEvent('stylechanged', { name: 'style', value: value });\r\n    }\r\n  };\r\n  self.reloadStoredValues = function () {\r\n    if (self.attributes.name && self.attributes.saveAppearance) {\r\n      try {\r\n        self.storedSettings = localStorage.getItem(\r\n          self.storageName + '-' + self.attributes.name,\r\n        );\r\n      } catch (e) {\r\n        console.warn('Error loading stored values. ' + e.message);\r\n        self.storedSettings = undefined;\r\n      }\r\n      if (self.storedSettings) {\r\n        try {\r\n          self.storedSettings = JSON.parse(self.storedSettings);\r\n        } catch (e) {\r\n          console.warn('could not read settings from localStore', e);\r\n          self.storedSettings = undefined;\r\n        }\r\n      }\r\n      if (self.storedSettings) {\r\n        if (\r\n          typeof self.storedSettings.sizes === 'object' &&\r\n          self.storedSettings.sizes !== null\r\n        ) {\r\n          self.sizes.rows = self.storedSettings.sizes.rows;\r\n          self.sizes.columns = self.storedSettings.sizes.columns;\r\n          ['trees', 'columns', 'rows'].forEach(function (i) {\r\n            if (!self.sizes[i]) {\r\n              self.sizes[i] = {};\r\n            }\r\n          });\r\n        }\r\n        if (typeof self.storedSettings.visibility === 'object') {\r\n          self.getSchema().forEach(function (column) {\r\n            if (\r\n              self.storedSettings.visibility &&\r\n              self.storedSettings.visibility[column.name] !== undefined\r\n            ) {\r\n              column.hidden = !self.storedSettings.visibility[column.name];\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  self.init = function () {\r\n    if (self.initialized) {\r\n      return;\r\n    }\r\n    function addStyleKeyIfNoneExists(key) {\r\n      if (self.styleKeys.indexOf(key) === -1) {\r\n        self.styleKeys.push(key);\r\n      }\r\n    }\r\n    var publicStyleKeyIntf = {};\r\n    self.setAttributes();\r\n    self.setStyle();\r\n    self.initScrollBox();\r\n    self.setDom();\r\n    self.nodeType = 'canvas-datagrid';\r\n    self.ie = /Trident/.test(window.navigator.userAgent);\r\n    self.edge = /Edge/.test(window.navigator.userAgent);\r\n    self.webKit = /WebKit/.test(window.navigator.userAgent);\r\n    self.moz = /Gecko/.test(window.navigator.userAgent);\r\n    self.mobile = /Mobile/i.test(window.navigator.userAgent);\r\n    self.blankValues = [undefined, null, ''];\r\n    self.cursorGrab = 'grab';\r\n    self.cursorGrabing = 'grabbing';\r\n    self.cursorGrab = self.webKit ? '-webkit-grab' : self.cursorGrab;\r\n    self.cursorGrabing = self.moz ? '-webkit-grabbing' : self.cursorGrabbing;\r\n    self.pointerLockPosition = { x: 0, y: 0 };\r\n    Object.keys(self.style).forEach(self.parseStyleValue);\r\n    self.intf.moveSelection = self.moveSelection;\r\n    self.intf.deleteSelectedData = self.deleteSelectedData;\r\n    self.intf.moveTo = self.moveTo;\r\n    self.intf.addEventListener = self.addEventListener;\r\n    self.intf.removeEventListener = self.removeEventListener;\r\n    self.intf.dispatchEvent = self.dispatchEvent;\r\n    /**\r\n     * Releases grid resources and removes grid elements.\r\n     * @memberof canvasDatagrid\r\n     * @name dispose\r\n     * @method\r\n     */\r\n    self.intf.dispose = self.dispose;\r\n    /**\r\n     * Appends the grid to another element later.  Not implemented.\r\n     * @memberof canvasDatagrid\r\n     * @name appendTo\r\n     * @method\r\n     * @param {number} el The element to append the grid to.\r\n     */\r\n    self.intf.appendTo = self.appendTo;\r\n    self.intf.getVisibleCellByIndex = self.getVisibleCellByIndex;\r\n    self.intf.filters = self.filters;\r\n    self.intf.sorters = self.sorters;\r\n    self.intf.autosize = self.autosize;\r\n    self.intf.beginEditAt = self.beginEditAt;\r\n    self.intf.endEdit = self.endEdit;\r\n    self.intf.setActiveCell = self.setActiveCell;\r\n    self.intf.forEachSelectedCell = self.forEachSelectedCell;\r\n    self.intf.scrollIntoView = self.scrollIntoView;\r\n    self.intf.clearChangeLog = self.clearChangeLog;\r\n    self.intf.gotoCell = self.gotoCell;\r\n    self.intf.gotoRow = self.gotoRow;\r\n    self.intf.addButton = self.addButton;\r\n    self.intf.getHeaderByName = self.getHeaderByName;\r\n    self.intf.findColumnScrollLeft = self.findColumnScrollLeft;\r\n    self.intf.findRowScrollTop = self.findRowScrollTop;\r\n    self.intf.fitColumnToValues = self.fitColumnToValues;\r\n    self.intf.findColumnMaxTextLength = self.findColumnMaxTextLength;\r\n    self.intf.disposeContextMenu = self.disposeContextMenu;\r\n    self.intf.getCellAt = self.getCellAt;\r\n    self.intf.isCellVisible = self.isCellVisible;\r\n    self.intf.isRowVisible = self.isRowVisible;\r\n    self.intf.isColumnVisible = self.isColumnVisible;\r\n    self.intf.order = self.order;\r\n    self.intf.draw = self.draw;\r\n    self.intf.refresh = self.refresh;\r\n    self.intf.isComponent = self.isComponent;\r\n    self.intf.selectArea = self.selectArea;\r\n    self.intf.clipElement = self.clipElement;\r\n    self.intf.getSchemaFromData = self.getSchemaFromData;\r\n    self.intf.setFilter = self.setFilter;\r\n    self.intf.selectRow = self.selectRow;\r\n    self.intf.parentGrid = self.parentGrid;\r\n    self.intf.toggleTree = self.toggleTree;\r\n    self.intf.expandTree = self.expandTree;\r\n    self.intf.collapseTree = self.collapseTree;\r\n    self.intf.canvas = self.canvas;\r\n    self.intf.context = self.ctx;\r\n    self.intf.insertRow = self.insertRow;\r\n    self.intf.deleteRow = self.deleteRow;\r\n    self.intf.addRow = self.addRow;\r\n    self.intf.insertColumn = self.insertColumn;\r\n    self.intf.deleteColumn = self.deleteColumn;\r\n    self.intf.addColumn = self.addColumn;\r\n    self.intf.getClippingRect = self.getClippingRect;\r\n    self.intf.setRowHeight = self.setRowHeight;\r\n    self.intf.setColumnWidth = self.setColumnWidth;\r\n    self.intf.resetColumnWidths = self.resetColumnWidths;\r\n    self.intf.resetRowHeights = self.resetRowHeights;\r\n    self.intf.resize = self.resize;\r\n    self.intf.selectColumn = self.selectColumn;\r\n    self.intf.selectRow = self.selectRow;\r\n    self.intf.selectAll = self.selectAll;\r\n    self.intf.selectNone = self.selectNone;\r\n    self.intf.drawChildGrids = self.drawChildGrids;\r\n    self.intf.assertPxColor = self.assertPxColor;\r\n    self.intf.clearPxColorAssertions = self.clearPxColorAssertions;\r\n    self.intf.integerToAlpha = self.integerToAlpha;\r\n    self.intf.copy = self.copy;\r\n    self.intf.cut = self.cut;\r\n    self.intf.paste = self.paste;\r\n    self.intf.setStyleProperty = self.setStyleProperty;\r\n    Object.defineProperty(self.intf, 'defaults', {\r\n      get: function () {\r\n        return {\r\n          styles: self.defaults.styles.reduce(function (a, i) {\r\n            a[i[0]] = i[1];\r\n            return a;\r\n          }, {}),\r\n          attributes: self.defaults.attributes.reduce(function (a, i) {\r\n            a[i[0]] = i[1];\r\n            return a;\r\n          }, {}),\r\n        };\r\n      },\r\n    });\r\n    self.styleKeys = Object.keys(self.intf.defaults.styles);\r\n    self.styleKeys\r\n      .map(function (i) {\r\n        return self.hyphenateProperty(i, false);\r\n      })\r\n      .forEach(addStyleKeyIfNoneExists);\r\n    self.styleKeys\r\n      .map(function (i) {\r\n        return self.hyphenateProperty(i, true);\r\n      })\r\n      .forEach(addStyleKeyIfNoneExists);\r\n    self.DOMStyles = window.getComputedStyle(document.body, null);\r\n    self.styleKeys.concat(Object.keys(self.DOMStyles)).forEach(function (key) {\r\n      // unless this line is here, Object.keys() will not work on <instance>.style\r\n      publicStyleKeyIntf[key] = undefined;\r\n      Object.defineProperty(publicStyleKeyIntf, key, {\r\n        get: function () {\r\n          return self.getStyleProperty(key);\r\n        },\r\n        set: function (value) {\r\n          if (self.initialized) {\r\n            self.appliedInlineStyles[key] = value;\r\n          }\r\n          self.setStyleProperty(key, value);\r\n        },\r\n      });\r\n    });\r\n    Object.defineProperty(self.intf, 'shadowRoot', {\r\n      get: function () {\r\n        return self.shadowRoot;\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'activeCell', {\r\n      get: function () {\r\n        return self.activeCell;\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'hasFocus', {\r\n      get: function () {\r\n        return self.hasFocus;\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'hasActiveFilters', {\r\n      get: function () {\r\n        return self.hasActiveFilters();\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'style', {\r\n      get: function () {\r\n        return publicStyleKeyIntf;\r\n      },\r\n      set: function (valueObject) {\r\n        Object.keys(valueObject).forEach(function (key) {\r\n          self.setStyleProperty(key, valueObject[key], true);\r\n        });\r\n        self.draw(true);\r\n        self.dispatchEvent('stylechanged', {\r\n          name: 'style',\r\n          value: valueObject,\r\n        });\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'attributes', { value: {} });\r\n    Object.keys(self.attributes).forEach(function (key) {\r\n      Object.defineProperty(self.intf.attributes, key, {\r\n        get: function () {\r\n          return self.attributes[key];\r\n        },\r\n        set: function (value) {\r\n          self.attributes[key] = value;\r\n          if (key === 'name') {\r\n            self.tryLoadStoredSettings();\r\n          }\r\n          self.draw(true);\r\n          self.dispatchEvent('attributechanged', {\r\n            name: key,\r\n            value: value[key],\r\n          });\r\n        },\r\n      });\r\n    });\r\n    self.filters.string = function (value, filterFor) {\r\n      if (filterFor === self.attributes.blanksText) {\r\n        return self.blankValues.includes(\r\n          value == null ? value : String(value).trim(),\r\n        );\r\n      }\r\n\r\n      value = String(value);\r\n      var filterRegExp,\r\n        regEnd = /\\/(i|g|m)*$/,\r\n        pattern = regEnd.exec(filterFor),\r\n        flags = pattern ? pattern[0].substring(1) : '',\r\n        flagLength = flags.length;\r\n      self.invalidFilterRegEx = undefined;\r\n      if (filterFor.substring(0, 1) === '/' && pattern) {\r\n        try {\r\n          filterRegExp = new RegExp(\r\n            filterFor.substring(1, filterFor.length - (flagLength + 1)),\r\n            flags,\r\n          );\r\n        } catch (e) {\r\n          self.invalidFilterRegEx = e;\r\n          return;\r\n        }\r\n        return filterRegExp.test(value);\r\n      }\r\n      return value.toString\r\n        ? value\r\n            .toString()\r\n            .toLocaleUpperCase()\r\n            .indexOf(filterFor.toLocaleUpperCase()) !== -1\r\n        : false;\r\n    };\r\n    self.filters.number = function (value, filterFor) {\r\n      if (filterFor === self.attributes.blanksText) {\r\n        return self.blankValues.includes(\r\n          value == null ? value : String(value).trim(),\r\n        );\r\n      }\r\n\r\n      if (!filterFor) {\r\n        return true;\r\n      }\r\n      return value === filterFor;\r\n    };\r\n    ['formatters', 'filters', 'sorters'].forEach(self.initProp);\r\n    self.applyComponentStyle(false, self.intf);\r\n    self.reloadStoredValues();\r\n    if (self.args.data) {\r\n      self.intf.data = self.args.data;\r\n    }\r\n    if (self.intf.innerText || self.intf.textContent) {\r\n      if (self.intf.dataType === 'application/x-canvas-datagrid') {\r\n        self.intf.dataType = 'application/json+x-canvas-datagrid';\r\n      }\r\n      self.intf.data = self.intf.innerText || self.intf.textContent;\r\n    }\r\n    if (self.args.schema) {\r\n      self.intf.schema = self.args.schema;\r\n    }\r\n    if (self.isChildGrid || !self.isComponent) {\r\n      requestAnimationFrame(function () {\r\n        self.resize(true);\r\n      });\r\n    } else {\r\n      self.resize(true);\r\n    }\r\n    self.initialized = true;\r\n    return self;\r\n  };\r\n  /**\r\n   * Removes focus from the grid.\r\n   * @memberof canvasDatagrid\r\n   * @name blur\r\n   * @method\r\n   */\r\n  self.intf.blur = function (e) {\r\n    self.hasFocus = false;\r\n  };\r\n  /**\r\n   * Focuses on the grid.\r\n   * @memberof canvasDatagrid\r\n   * @name focus\r\n   * @method\r\n   */\r\n  self.intf.focus = function () {\r\n    self.hasFocus = true;\r\n    self.controlInput.focus();\r\n  };\r\n  if (self.shadowRoot || self.isChildGrid) {\r\n    Object.defineProperty(self.intf, 'height', {\r\n      get: function () {\r\n        if (self.shadowRoot) {\r\n          return self.shadowRoot.height;\r\n        }\r\n        return self.parentNode.height;\r\n      },\r\n      set: function (value) {\r\n        if (self.shadowRoot) {\r\n          self.shadowRoot.height = value;\r\n        } else {\r\n          self.parentNode.height = value;\r\n        }\r\n        self.resize(true);\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'width', {\r\n      get: function () {\r\n        if (self.shadowRoot) {\r\n          return self.shadowRoot.width;\r\n        }\r\n        return self.parentNode.width;\r\n      },\r\n      set: function (value) {\r\n        if (self.shadowRoot) {\r\n          self.shadowRoot.width = value;\r\n        } else {\r\n          self.parentNode.width = value;\r\n        }\r\n        self.resize(true);\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'parentNode', {\r\n      get: function () {\r\n        return self.parentNode;\r\n      },\r\n      set: function (value) {\r\n        if (!self.isChildGrid) {\r\n          throw new TypeError(\r\n            'Cannot set property parentNode which has only a getter',\r\n          );\r\n        }\r\n        self.parentNode = value;\r\n      },\r\n    });\r\n  }\r\n  Object.defineProperty(self.intf, 'visibleRowHeights', {\r\n    get: function () {\r\n      return self.visibleRowHeights;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'openChildren', {\r\n    get: function () {\r\n      return self.openChildren;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'childGrids', {\r\n    get: function () {\r\n      return Object.keys(self.childGrids).map(function (gridId) {\r\n        return self.childGrids[gridId];\r\n      });\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'isChildGrid', {\r\n    get: function () {\r\n      return self.isChildGrid;\r\n    },\r\n  });\r\n  Object.defineProperty(self, 'cursor', {\r\n    get: function () {\r\n      return self.parentNodeStyle.cursor;\r\n    },\r\n    set: function (value) {\r\n      if (value === 'cell') {\r\n        value = 'default';\r\n      }\r\n      if (self.currentCursor !== value) {\r\n        self.parentNodeStyle.cursor = value;\r\n        self.currentCursor = value;\r\n      }\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'orderDirection', {\r\n    get: function () {\r\n      return self.orderDirection;\r\n    },\r\n    set: function (value) {\r\n      if (value !== 'desc') {\r\n        value = 'asc';\r\n      }\r\n      self.orderDirection = value;\r\n      self.order(self.orderBy, self.orderDirection);\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'orderBy', {\r\n    get: function () {\r\n      return self.orderBy;\r\n    },\r\n    set: function (value) {\r\n      if (\r\n        self.getSchema().find(function (col) {\r\n          return col.name === value;\r\n        }) === undefined\r\n      ) {\r\n        throw new Error('Cannot sort by unknown column name.');\r\n      }\r\n      self.orderBy = value;\r\n      self.order(self.orderBy, self.orderDirection);\r\n    },\r\n  });\r\n  if (self.isComponent) {\r\n    Object.defineProperty(self.intf, 'offsetHeight', {\r\n      get: function () {\r\n        return self.canvas.offsetHeight;\r\n      },\r\n    });\r\n    Object.defineProperty(self.intf, 'offsetWidth', {\r\n      get: function () {\r\n        return self.canvas.offsetWidth;\r\n      },\r\n    });\r\n  }\r\n  Object.defineProperty(self.intf, 'scrollHeight', {\r\n    get: function () {\r\n      return self.scrollBox.scrollHeight;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'scrollWidth', {\r\n    get: function () {\r\n      return self.scrollBox.scrollWidth;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'scrollTop', {\r\n    get: function () {\r\n      return self.scrollBox.scrollTop;\r\n    },\r\n    set: function (value) {\r\n      self.scrollBox.scrollTop = value;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'scrollLeft', {\r\n    get: function () {\r\n      return self.scrollBox.scrollLeft;\r\n    },\r\n    set: function (value) {\r\n      self.scrollBox.scrollLeft = value;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'sizes', {\r\n    get: function () {\r\n      return self.sizes;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'parentDOMNode', {\r\n    get: function () {\r\n      return self.parentDOMNode;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'input', {\r\n    get: function () {\r\n      return self.input;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'controlInput', {\r\n    get: function () {\r\n      return self.controlInput;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'currentCell', {\r\n    get: function () {\r\n      return self.currentCell;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'visibleCells', {\r\n    get: function () {\r\n      return self.visibleCells;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'visibleRows', {\r\n    get: function () {\r\n      return self.visibleRows;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'selections', {\r\n    get: function () {\r\n      return self.selections;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'dragMode', {\r\n    get: function () {\r\n      return self.dragMode;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'changes', {\r\n    get: function () {\r\n      return self.changes;\r\n    },\r\n  });\r\n  self.intf.formatters = self.formatters;\r\n  Object.defineProperty(self.intf, 'dataType', {\r\n    get: function () {\r\n      return self.dataType;\r\n    },\r\n    set: function (value) {\r\n      if (!self.parsers[value]) {\r\n        throw new Error('No parser for MIME type ' + value);\r\n      }\r\n      self.dataType = value;\r\n    },\r\n  });\r\n  self.eventNames.forEach(function (eventName) {\r\n    Object.defineProperty(self.intf, 'on' + eventName, {\r\n      get: function () {\r\n        return self.componentL1Events[eventName];\r\n      },\r\n      set: function (value) {\r\n        self.events[eventName] = [];\r\n        self.componentL1Events[eventName] = value;\r\n        if (!value) {\r\n          return;\r\n        }\r\n        self.addEventListener(eventName, value);\r\n      },\r\n    });\r\n  });\r\n  Object.defineProperty(self.intf, 'frozenRow', {\r\n    get: function () {\r\n      return self.frozenRow;\r\n    },\r\n    set: function (val) {\r\n      if (isNaN(val)) {\r\n        throw new TypeError('Expected value for frozenRow to be a number.');\r\n      }\r\n      if (self.visibleRows.length < val) {\r\n        throw new RangeError(\r\n          'Cannot set a value larger than the number of visible rows.',\r\n        );\r\n      }\r\n      self.frozenRow = val;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'frozenColumn', {\r\n    get: function () {\r\n      return self.frozenColumn;\r\n    },\r\n    set: function (val) {\r\n      if (isNaN(val)) {\r\n        throw new TypeError('Expected value for frozenRow to be a number.');\r\n      }\r\n      if (self.getVisibleSchema().length < val) {\r\n        throw new RangeError(\r\n          'Cannot set a value larger than the number of visible columns.',\r\n        );\r\n      }\r\n      self.frozenColumn = val;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'scrollIndexRect', {\r\n    get: function () {\r\n      return {\r\n        top: self.scrollIndexTop,\r\n        right: self.scrollIndexRight,\r\n        bottom: self.scrollIndexBottom,\r\n        left: self.scrollIndexLeft,\r\n      };\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'scrollPixelRect', {\r\n    get: function () {\r\n      return {\r\n        top: self.scrollPixelTop,\r\n        right: self.scrollPixelRight,\r\n        bottom: self.scrollPixelBottom,\r\n        left: self.scrollPixelLeft,\r\n      };\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'rowOrder', {\r\n    get: function () {\r\n      return self.orders.rows;\r\n    },\r\n    set: function (val) {\r\n      if (!Array.isArray(val)) {\r\n        throw new TypeError('Value must be an array.');\r\n      }\r\n      if (!self.originalData || val.length < self.originalData.length) {\r\n        throw new RangeError(\r\n          'Array length must be equal to or greater than number of rows.',\r\n        );\r\n      }\r\n      self.orders.rows = val;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'columnOrder', {\r\n    get: function () {\r\n      return self.orders.columns;\r\n    },\r\n    set: function (val) {\r\n      if (!Array.isArray(val)) {\r\n        throw new TypeError('Value must be an array.');\r\n      }\r\n      if (val.length < self.getSchema().length) {\r\n        throw new RangeError(\r\n          'Array length must be equal to or greater than number of columns.',\r\n        );\r\n      }\r\n      self.orders.columns = val;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'selectionBounds', {\r\n    get: function () {\r\n      return self.getSelectionBounds();\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'selectedRows', {\r\n    get: function () {\r\n      return self.getSelectedData(true);\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'selectedCells', {\r\n    get: function () {\r\n      return self.getSelectedData();\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'visibleSchema', {\r\n    get: function () {\r\n      return self.getVisibleSchema().map(function eachDataRow(col) {\r\n        return col;\r\n      });\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'treeGridAttributes', {\r\n    get: function () {\r\n      return self.treeGridAttributes;\r\n    },\r\n    set: function setTreeGridAttributes(value) {\r\n      self.treeGridAttributes = value;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'cellGridAttributes', {\r\n    get: function () {\r\n      return self.cellGridAttributes;\r\n    },\r\n    set: function setCellGridAttributes(value) {\r\n      self.cellGridAttributes = value;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'ctx', {\r\n    get: function () {\r\n      return self.ctx;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'schema', {\r\n    get: function schemaGetter() {\r\n      return self.getSchema();\r\n    },\r\n    set: function schemaSetter(value) {\r\n      if (value === undefined) {\r\n        // Issue #89 - allow schema to be set to initialized state\r\n        self.schema = undefined;\r\n        self.tempSchema = undefined;\r\n        self.dispatchEvent('schemachanged', { schema: undefined });\r\n        return;\r\n      }\r\n      if (!Array.isArray(value) || typeof value[0] !== 'object') {\r\n        throw new Error('Schema must be an array of objects.');\r\n      }\r\n      if (value[0].name === undefined) {\r\n        throw new Error(\r\n          'Expected schema to contain an object with at least a name property.',\r\n        );\r\n      }\r\n      self.schema = value.map(function eachSchemaColumn(column, index) {\r\n        column.width = column.width || self.style.cellWidth;\r\n        column.filter = column.filter || self.filter(column.type);\r\n        column.type = column.type || 'string';\r\n        column.index = index;\r\n        column.columnIndex = index;\r\n        column.rowIndex = -1;\r\n        return column;\r\n      });\r\n      self.tempSchema = undefined;\r\n      self.createNewRowData();\r\n      self.createColumnOrders();\r\n      self.tryLoadStoredSettings();\r\n      if (\r\n        self.storedSettings &&\r\n        typeof self.storedSettings.visibility === 'object'\r\n      ) {\r\n        self.schema.forEach(function hideEachSchemaColumn(column, index) {\r\n          if (\r\n            self.storedSettings &&\r\n            self.storedSettings.visibility[column.name] !== undefined\r\n          ) {\r\n            column.hidden = !self.storedSettings.visibility[column.name];\r\n          }\r\n        });\r\n      }\r\n      self.resize(true);\r\n      self.dispatchEvent('schemachanged', { schema: self.schema });\r\n    },\r\n  });\r\n  /**\r\n   * Gets an array of currently registered MIME types.\r\n   * @memberof canvasDatagrid\r\n   * @name getDataTypes\r\n   * @method\r\n   */\r\n  self.intf.getTypes = function () {\r\n    return Object.keys(self.parsers);\r\n  };\r\n  self.parseInnerHtml = function (data) {\r\n    if (!data || /^ +$/.test(data)) {\r\n      return [];\r\n    }\r\n    try {\r\n      data = JSON.parse(data);\r\n    } catch (e) {\r\n      console.warn(\r\n        Error(\r\n          'Cannot parse application/json+x-canvas-datagrid formated data. ' +\r\n            e.message +\r\n            '  \\nNote: canvas-datagrid.innerHTML is for string data only.  ' +\r\n            'Use the canvas-datagrid.data property to set object data.',\r\n        ),\r\n      );\r\n    }\r\n    return data;\r\n  };\r\n  self.parsers['application/json+x-canvas-datagrid'] = function (\r\n    data,\r\n    callback,\r\n  ) {\r\n    self.parsers['application/x-canvas-datagrid'](\r\n      self.parseInnerHtml(data),\r\n      function (data, schema) {\r\n        return callback(data, schema);\r\n      },\r\n    );\r\n  };\r\n  self.parsers['application/x-canvas-datagrid'] = function (data, callback) {\r\n    return callback(data);\r\n  };\r\n  self.intf.parsers = self.parsers;\r\n  // send to dataType ETL function to extract from input data\r\n  // and transform into native [{}, {}] format\r\n  self.etl = function (data, callback) {\r\n    if (!self.intf.parsers[self.dataType]) {\r\n      throw new Error('Unsupported data type.');\r\n    }\r\n    self.intf.parsers[self.dataType](data, function (data, schema) {\r\n      // set the unfiltered/sorted data array\r\n      self.originalData = data;\r\n      self.viewData = Array.from(self.originalData);\r\n\r\n      if (Array.isArray(schema)) {\r\n        self.schema = schema;\r\n      }\r\n      // Issue #89 - allow schema to be auto-created every time data is set\r\n      if (self.attributes.autoGenerateSchema) {\r\n        self.schema = self.getSchemaFromData(data);\r\n      }\r\n      if (!self.schema) {\r\n        self.tempSchema = self.getSchemaFromData(data);\r\n      }\r\n      if (self.getSchema()) {\r\n        self.createColumnOrders();\r\n      }\r\n      // apply filter, sort, etc to incoming dataset, set viewData:\r\n      self.refresh();\r\n      // empty data was set\r\n      if (!self.schema && (self.originalData || []).length === 0) {\r\n        self.tempSchema = [{ name: '' }];\r\n      }\r\n      self.fitColumnToValues('cornerCell', true);\r\n      if (\r\n        (self.tempSchema && !self.schema) ||\r\n        self.attributes.autoGenerateSchema\r\n      ) {\r\n        self.createColumnOrders();\r\n        self.dispatchEvent('schemachanged', { schema: self.tempSchema });\r\n      }\r\n      callback();\r\n    });\r\n  };\r\n  Object.defineProperty(self.intf, 'viewData', {\r\n    get: function () {\r\n      return self.viewData;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'boundData', {\r\n    get: function () {\r\n      return self.originalData;\r\n    },\r\n  });\r\n  Object.defineProperty(self.intf, 'data', {\r\n    get: function dataGetter() {\r\n      return self.originalData;\r\n    },\r\n    set: function dataSetter(value) {\r\n      self.etl(value, function () {\r\n        self.changes = [];\r\n        self.createNewRowData();\r\n        if (\r\n          self.attributes.autoResizeColumns &&\r\n          self.originalData.length > 0 &&\r\n          self.storedSettings === undefined\r\n        ) {\r\n          self.autosize();\r\n        }\r\n        // set the header column to fit the numbers in it\r\n        self.fitColumnToValues('cornerCell', true);\r\n        self.createRowOrders();\r\n        self.tryLoadStoredSettings();\r\n        self.dispatchEvent('datachanged', { data: self.originalData });\r\n        self.resize(true);\r\n      });\r\n    },\r\n  });\r\n  self.initScrollBox = function () {\r\n    var sHeight = 0,\r\n      sWidth = 0,\r\n      scrollTop = 0,\r\n      scrollLeft = 0,\r\n      scrollHeight = 0,\r\n      scrollWidth = 0,\r\n      scrollBoxHeight = 20,\r\n      scrollBoxWidth = 20;\r\n    function setScrollTop(value, preventScrollEvent) {\r\n      if (isNaN(value)) {\r\n        throw new Error('ScrollTop value must be a number');\r\n      }\r\n      if (value < 0) {\r\n        value = 0;\r\n      }\r\n      if (value > scrollHeight) {\r\n        value = scrollHeight;\r\n      }\r\n      if (scrollHeight < 0) {\r\n        value = 0;\r\n      }\r\n      scrollTop = value;\r\n      if (!preventScrollEvent) {\r\n        self.scroll();\r\n      }\r\n      if (self.button) {\r\n        self.moveButtonPos();\r\n      }\r\n    }\r\n    function setScrollLeft(value, preventScrollEvent) {\r\n      if (isNaN(value)) {\r\n        throw new Error('ScrollLeft value must be a number');\r\n      }\r\n      if (value < 0) {\r\n        value = 0;\r\n      }\r\n      if (value > scrollWidth) {\r\n        value = scrollWidth;\r\n      }\r\n      if (scrollWidth < 0) {\r\n        value = 0;\r\n      }\r\n      scrollLeft = value;\r\n      if (!preventScrollEvent) {\r\n        self.scroll();\r\n      }\r\n      if (self.button) {\r\n        self.moveButtonPos();\r\n      }\r\n    }\r\n    self.scrollBox.toString = function () {\r\n      return (\r\n        '{\"width\": ' +\r\n        scrollWidth.toFixed(2) +\r\n        ', \"height\": ' +\r\n        scrollHeight.toFixed(2) +\r\n        ', \"left\": ' +\r\n        scrollLeft.toFixed(2) +\r\n        ', \"top\": ' +\r\n        scrollTop.toFixed(2) +\r\n        ', \"widthRatio\": ' +\r\n        self.scrollBox.widthBoxRatio.toFixed(5) +\r\n        ', \"heightRatio\": ' +\r\n        self.scrollBox.heightBoxRatio.toFixed(5) +\r\n        '}'\r\n      );\r\n    };\r\n    self.scrollBox.scrollTo = function (x, y, supressDrawEvent) {\r\n      setScrollLeft(x, true);\r\n      setScrollTop(y, supressDrawEvent);\r\n    };\r\n    Object.defineProperty(self.scrollBox, 'scrollBoxHeight', {\r\n      get: function () {\r\n        return scrollBoxHeight;\r\n      },\r\n      set: function (value) {\r\n        scrollBoxHeight = value;\r\n      },\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'scrollBoxWidth', {\r\n      get: function () {\r\n        return scrollBoxWidth;\r\n      },\r\n      set: function (value) {\r\n        scrollBoxWidth = value;\r\n      },\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'height', {\r\n      get: function () {\r\n        return sHeight;\r\n      },\r\n      set: function (value) {\r\n        sHeight = value;\r\n      },\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'width', {\r\n      get: function () {\r\n        return sWidth;\r\n      },\r\n      set: function (value) {\r\n        sWidth = value;\r\n      },\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'scrollTop', {\r\n      get: function () {\r\n        return scrollTop;\r\n      },\r\n      set: setScrollTop,\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'scrollLeft', {\r\n      get: function () {\r\n        return scrollLeft;\r\n      },\r\n      set: setScrollLeft,\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'scrollHeight', {\r\n      get: function () {\r\n        return scrollHeight;\r\n      },\r\n      set: function (value) {\r\n        if (scrollTop > value) {\r\n          scrollTop = Math.max(value, 0);\r\n        }\r\n        scrollHeight = value;\r\n      },\r\n    });\r\n    Object.defineProperty(self.scrollBox, 'scrollWidth', {\r\n      get: function () {\r\n        return scrollWidth;\r\n      },\r\n      set: function (value) {\r\n        if (scrollLeft > value) {\r\n          scrollLeft = Math.max(value, 0);\r\n        }\r\n        scrollWidth = value;\r\n      },\r\n    });\r\n  };\r\n  return;\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false, Event: false*/\r\n'use strict';\r\n\r\nexport default function (self) {\r\n  var zIndexTop, hoverScrollTimeout, autoCompleteContext;\r\n  function applyContextItemStyle(contextItemContainer) {\r\n    self.createInlineStyle(\r\n      contextItemContainer,\r\n      'canvas-datagrid-context-menu-item' + (self.mobile ? '-mobile' : ''),\r\n    );\r\n    contextItemContainer.addEventListener('mouseover', function () {\r\n      self.createInlineStyle(\r\n        contextItemContainer,\r\n        'canvas-datagrid-context-menu-item:hover',\r\n      );\r\n    });\r\n    contextItemContainer.addEventListener('mouseout', function () {\r\n      self.createInlineStyle(\r\n        contextItemContainer,\r\n        'canvas-datagrid-context-menu-item',\r\n      );\r\n    });\r\n  }\r\n  function createContextMenu(ev, pos, items, parentContextMenu) {\r\n    var container = document.createElement('div'),\r\n      upArrow = document.createElement('div'),\r\n      downArrow = document.createElement('div'),\r\n      children = [],\r\n      selectedIndex = -1,\r\n      intf = {},\r\n      rect;\r\n    if (!Array.isArray(items)) {\r\n      throw new Error('createContextMenu expects an array.');\r\n    }\r\n    function createItems() {\r\n      items.forEach(function (item) {\r\n        var contextItemContainer = document.createElement('div'),\r\n          childMenuArrow;\r\n        function removeChildContext(e) {\r\n          if (\r\n            e.relatedTarget === container ||\r\n            item.contextMenu.container === e.relatedTarget ||\r\n            childMenuArrow === e.relatedTarget ||\r\n            contextItemContainer === e.relatedTarget ||\r\n            item.contextMenu.container.contains(e.relatedTarget)\r\n          ) {\r\n            return;\r\n          }\r\n          item.contextMenu.dispose();\r\n          children.splice(children.indexOf(item.contextMenu), 1);\r\n          item.contextMenu = undefined;\r\n          contextItemContainer.removeEventListener(\r\n            'mouseout',\r\n            removeChildContext,\r\n          );\r\n          container.removeEventListener('mouseout', removeChildContext);\r\n          contextItemContainer.setAttribute('contextOpen', '0');\r\n          contextItemContainer.setAttribute('opening', '0');\r\n        }\r\n        function contextAddCallback(items) {\r\n          // check yet again if the user hasn't moved off\r\n          if (\r\n            contextItemContainer.getAttribute('opening') !== '1' ||\r\n            contextItemContainer.getAttribute('contextOpen') === '1'\r\n          ) {\r\n            return;\r\n          }\r\n          var cPos = contextItemContainer.getBoundingClientRect();\r\n          cPos = {\r\n            left:\r\n              cPos.left +\r\n              self.style.childContextMenuMarginLeft +\r\n              container.offsetWidth,\r\n            top: cPos.top + self.style.childContextMenuMarginTop,\r\n            bottom: cPos.bottom,\r\n            right: cPos.right,\r\n          };\r\n          item.contextMenu = createContextMenu(ev, cPos, items, intf);\r\n          contextItemContainer.setAttribute('contextOpen', '1');\r\n          contextItemContainer.addEventListener('mouseout', removeChildContext);\r\n          container.addEventListener('mouseout', removeChildContext);\r\n          children.push(item.contextMenu);\r\n        }\r\n        function createChildContext() {\r\n          var i;\r\n          if (contextItemContainer.getAttribute('contextOpen') === '1') {\r\n            return;\r\n          }\r\n          contextItemContainer.setAttribute('opening', '1');\r\n          if (typeof item.items === 'function') {\r\n            i = item.items.apply(intf, [\r\n              function (items) {\r\n                contextAddCallback(items);\r\n              },\r\n            ]);\r\n            if (i !== undefined && Array.isArray(i)) {\r\n              contextAddCallback(i);\r\n            }\r\n            return;\r\n          }\r\n          contextAddCallback(item.items);\r\n        }\r\n        function addItem(item) {\r\n          function addContent(content) {\r\n            if (content === null) {\r\n              return;\r\n            }\r\n            if (typeof content === 'function') {\r\n              return addContent(content(ev));\r\n            }\r\n            if (typeof content === 'object') {\r\n              contextItemContainer.appendChild(content);\r\n              return;\r\n            }\r\n            applyContextItemStyle(contextItemContainer);\r\n            contextItemContainer.innerHTML = content;\r\n            return;\r\n          }\r\n          addContent(item.title);\r\n          item.contextItemContainer = contextItemContainer;\r\n          if (\r\n            (item.items && item.items.length > 0) ||\r\n            typeof item.items === 'function'\r\n          ) {\r\n            childMenuArrow = document.createElement('div');\r\n            self.createInlineStyle(\r\n              childMenuArrow,\r\n              'canvas-datagrid-context-child-arrow',\r\n            );\r\n            childMenuArrow.innerHTML = self.style.childContextMenuArrowHTML;\r\n            contextItemContainer.appendChild(childMenuArrow);\r\n            contextItemContainer.addEventListener(\r\n              'mouseover',\r\n              createChildContext,\r\n            );\r\n            contextItemContainer.addEventListener('mouseout', function () {\r\n              contextItemContainer.setAttribute('opening', '0');\r\n            });\r\n          }\r\n          if (item.click) {\r\n            contextItemContainer.addEventListener('click', function (ev) {\r\n              item.click.apply(self, [ev]);\r\n            });\r\n          }\r\n        }\r\n        addItem(item);\r\n        container.appendChild(contextItemContainer);\r\n      });\r\n    }\r\n    function clickIndex(idx) {\r\n      items[idx].contextItemContainer.dispatchEvent(new Event('click'));\r\n    }\r\n    function checkArrowVisibility() {\r\n      if (container.scrollTop > 0) {\r\n        self.parentDOMNode.appendChild(upArrow);\r\n      } else if (upArrow.parentNode) {\r\n        upArrow.parentNode.removeChild(upArrow);\r\n      }\r\n      if (\r\n        container.scrollTop >=\r\n          container.scrollHeight - container.offsetHeight &&\r\n        downArrow.parentNode\r\n      ) {\r\n        downArrow.parentNode.removeChild(downArrow);\r\n      } else if (\r\n        container.scrollHeight - container.offsetHeight > 0 &&\r\n        !(\r\n          container.scrollTop >=\r\n          container.scrollHeight - container.offsetHeight\r\n        )\r\n      ) {\r\n        self.parentDOMNode.appendChild(downArrow);\r\n      }\r\n    }\r\n    function fade(element) {\r\n      var opacity = 1;\r\n      var timer = setInterval(function () {\r\n        if (opacity <= 0.1) {\r\n          clearInterval(timer);\r\n          element.style.display = 'none';\r\n          if (element.parentNode) {\r\n            element.parentNode.removeChild(element);\r\n          }\r\n        }\r\n        element.style.opacity = opacity;\r\n        element.style.filter = 'alpha(opacity=' + opacity * 100 + ')';\r\n        opacity -= opacity * 0.1;\r\n      }, self.attributes.animationDurationHideContextMenu * 0.1);\r\n    }\r\n    function unfade(element) {\r\n      var opacity = 0.1;\r\n      element.style.display = 'block';\r\n      var timer = setInterval(function () {\r\n        if (opacity >= 1) {\r\n          clearInterval(timer);\r\n        }\r\n        element.style.opacity = opacity;\r\n        element.style.filter = 'alpha(opacity=' + opacity * 100 + ')';\r\n        opacity += opacity * 0.1;\r\n      }, self.attributes.animationDurationShowContextMenu * 0.1);\r\n    }\r\n    function startHoverScroll(type) {\r\n      return function t() {\r\n        var a = self.attributes.contextHoverScrollAmount;\r\n        if (type === 'up' && container.scrollTop === 0) {\r\n          return;\r\n        }\r\n        if (type === 'down' && container.scrollTop === container.scrollHeight) {\r\n          return;\r\n        }\r\n        container.scrollTop += type === 'up' ? -a : a;\r\n        hoverScrollTimeout = setTimeout(\r\n          t,\r\n          self.attributes.contextHoverScrollRateMs,\r\n          type,\r\n        );\r\n      };\r\n    }\r\n    function endHoverScroll(type) {\r\n      return function () {\r\n        clearTimeout(hoverScrollTimeout);\r\n      };\r\n    }\r\n    function init() {\r\n      var loc = {},\r\n        s = self.scrollOffset(self.canvas);\r\n      if (zIndexTop === undefined) {\r\n        zIndexTop = self.style.contextMenuZIndex;\r\n      }\r\n      createItems();\r\n      self.createInlineStyle(\r\n        container,\r\n        'canvas-datagrid-context-menu' + (self.mobile ? '-mobile' : ''),\r\n      );\r\n      loc.x = pos.left - s.left;\r\n      loc.y = pos.top - s.top;\r\n      loc.height = 0;\r\n      zIndexTop += 1;\r\n      container.style.opacity = 0;\r\n      container.style.position = 'absolute';\r\n      upArrow.style.color = self.style.contextMenuArrowColor;\r\n      downArrow.style.color = self.style.contextMenuArrowColor;\r\n      [upArrow, downArrow].forEach(function (el) {\r\n        el.style.textAlign = 'center';\r\n        el.style.position = 'absolute';\r\n        el.style.zIndex = zIndexTop + 1;\r\n      });\r\n      container.style.zIndex = zIndexTop;\r\n      if (parentContextMenu && parentContextMenu.inputDropdown) {\r\n        container.style.maxHeight =\r\n          window.innerHeight -\r\n          loc.y -\r\n          self.style.autocompleteBottomMargin +\r\n          'px';\r\n        container.style.minWidth = pos.width + 'px';\r\n        loc.y += pos.height;\r\n      }\r\n      if (self.mobile) {\r\n        container.style.width = pos.width + 'px';\r\n      }\r\n      container.style.left = loc.x + 'px';\r\n      container.style.top = loc.y + 'px';\r\n      container.addEventListener('scroll', checkArrowVisibility);\r\n      container.addEventListener('wheel', function (e) {\r\n        if (self.hasFocus) {\r\n          container.scrollTop += e.deltaY;\r\n          container.scrollLeft += e.deltaX;\r\n        }\r\n        checkArrowVisibility();\r\n      });\r\n      upArrow.innerHTML = self.style.contextMenuArrowUpHTML;\r\n      downArrow.innerHTML = self.style.contextMenuArrowDownHTML;\r\n      container.appendChild(upArrow);\r\n      document.body.appendChild(downArrow);\r\n      document.body.appendChild(container);\r\n      unfade(container);\r\n      rect = container.getBoundingClientRect();\r\n      // TODO: fix !(parentContextMenu && parentContextMenu.inputDropdown) state (autocomplete)\r\n      if (rect.bottom > window.innerHeight) {\r\n        if (!(parentContextMenu && parentContextMenu.inputDropdown)) {\r\n          loc.y -=\r\n            rect.bottom +\r\n            self.style.contextMenuWindowMargin -\r\n            window.innerHeight;\r\n        }\r\n        if (loc.y < 0) {\r\n          loc.y = self.style.contextMenuWindowMargin;\r\n        }\r\n        if (\r\n          container.offsetHeight >\r\n          window.innerHeight - self.style.contextMenuWindowMargin\r\n        ) {\r\n          container.style.height =\r\n            window.innerHeight - self.style.contextMenuWindowMargin * 2 + 'px';\r\n        }\r\n      }\r\n      if (rect.right > window.innerWidth) {\r\n        loc.x -=\r\n          rect.right - window.innerWidth + self.style.contextMenuWindowMargin;\r\n      }\r\n      if (loc.x < 0) {\r\n        loc.x = self.style.contextMenuWindowMargin;\r\n      }\r\n      if (loc.y < 0) {\r\n        loc.y = self.style.contextMenuWindowMargin;\r\n      }\r\n      container.style.left = loc.x + 'px';\r\n      container.style.top = loc.y + 'px';\r\n      rect = container.getBoundingClientRect();\r\n      upArrow.style.top = rect.top + 'px';\r\n      downArrow.style.top =\r\n        rect.top + rect.height - downArrow.offsetHeight + 'px';\r\n      upArrow.style.left = rect.left + 'px';\r\n      downArrow.style.left = rect.left + 'px';\r\n      downArrow.style.width = container.offsetWidth + 'px';\r\n      upArrow.style.width = container.offsetWidth + 'px';\r\n      downArrow.addEventListener('mouseover', startHoverScroll('down'));\r\n      downArrow.addEventListener('mouseout', endHoverScroll('down'));\r\n      upArrow.addEventListener('mouseover', startHoverScroll('up'));\r\n      upArrow.addEventListener('mouseout', endHoverScroll('up'));\r\n      checkArrowVisibility();\r\n    }\r\n    intf.parentGrid = self.intf;\r\n    intf.parentContextMenu = parentContextMenu;\r\n    intf.container = container;\r\n    init();\r\n    intf.clickIndex = clickIndex;\r\n    intf.rect = rect;\r\n    intf.items = items;\r\n    intf.upArrow = upArrow;\r\n    intf.downArrow = downArrow;\r\n    intf.dispose = function () {\r\n      clearTimeout(hoverScrollTimeout);\r\n      children.forEach(function (c) {\r\n        c.dispose();\r\n      });\r\n      [downArrow, upArrow, container].forEach(function (el) {\r\n        fade(el);\r\n      });\r\n    };\r\n    Object.defineProperty(intf, 'selectedIndex', {\r\n      get: function () {\r\n        return selectedIndex;\r\n      },\r\n      set: function (value) {\r\n        if (typeof value !== 'number' || isNaN(value || !isFinite(value))) {\r\n          throw new Error('Context menu selected index must be a sane number.');\r\n        }\r\n        selectedIndex = value;\r\n        if (selectedIndex > items.length - 1) {\r\n          selectedIndex = items.length - 1;\r\n        }\r\n        if (selectedIndex < 0) {\r\n          selectedIndex = 0;\r\n        }\r\n        items.forEach(function (item, index) {\r\n          if (index === selectedIndex) {\r\n            return self.createInlineStyle(\r\n              item.contextItemContainer,\r\n              'canvas-datagrid-context-menu-item:hover',\r\n            );\r\n          }\r\n          self.createInlineStyle(\r\n            item.contextItemContainer,\r\n            'canvas-datagrid-context-menu-item',\r\n          );\r\n        });\r\n      },\r\n    });\r\n    return intf;\r\n  }\r\n  function createFilterContextMenuItems(e) {\r\n    var filterContainer = document.createElement('div'),\r\n      filterLabel = document.createElement('div'),\r\n      filterAutoCompleteButton = document.createElement('button'),\r\n      filterInput = document.createElement('input'),\r\n      n =\r\n        e.cell && e.cell.header\r\n          ? e.cell.header.title || e.cell.header.name\r\n          : '',\r\n      iRect;\r\n    function checkRegExpErrorState() {\r\n      filterInput.style.background = self.style.contextFilterInputBackground;\r\n      filterInput.style.color = self.style.contextFilterInputColor;\r\n      if (self.invalidFilterRegEx) {\r\n        filterInput.style.background =\r\n          self.style.contextFilterInvalidRegExpBackground;\r\n        filterInput.style.color = self.style.contextFilterInvalidRegExpColor;\r\n      }\r\n    }\r\n    function fillAutoComplete() {\r\n      var count = 0;\r\n      var items = {};\r\n      var blanksItem = [];\r\n\r\n      self.viewData.forEach(function (row) {\r\n        var cellValue =\r\n          row[e.cell.header.name] == null\r\n            ? row[e.cell.header.name]\r\n            : String(row[e.cell.header.name]).trim();\r\n        var value = self.blankValues.includes(cellValue)\r\n          ? self.attributes.blanksText\r\n          : cellValue;\r\n\r\n        if (items[value] || count > self.attributes.maxAutoCompleteItems) {\r\n          return;\r\n        }\r\n        count += 1;\r\n        items[value] = {\r\n          title: self.formatters[e.cell.header.type || 'string']({\r\n            cell: { value: value },\r\n          }),\r\n          click: function (e) {\r\n            filterInput.value = value;\r\n            e.stopPropagation();\r\n            filterInput.dispatchEvent(new Event('keyup'));\r\n            self.disposeAutocomplete();\r\n            return;\r\n          },\r\n        };\r\n      });\r\n\r\n      if (Object.keys(items).indexOf(self.attributes.blanksText) !== -1) {\r\n        blanksItem.push(items[self.attributes.blanksText]);\r\n        delete items[self.attributes.blanksText];\r\n      }\r\n\r\n      return blanksItem.concat(\r\n        Object.keys(items).map(function (key) {\r\n          return items[key];\r\n        }),\r\n      );\r\n    }\r\n\r\n    function createAutoCompleteContext(ev) {\r\n      if (ev && ['ArrowDown', 'ArrowUp', 'Enter', 'Tab'].includes(ev.key)) {\r\n        return;\r\n      }\r\n\r\n      var autoCompleteItems = fillAutoComplete();\r\n\r\n      iRect = filterInput.getBoundingClientRect();\r\n      if (autoCompleteContext) {\r\n        autoCompleteContext.dispose();\r\n        autoCompleteContext = undefined;\r\n      }\r\n      autoCompleteContext = createContextMenu(\r\n        e,\r\n        {\r\n          left: iRect.left,\r\n          top: iRect.top,\r\n          right: iRect.right,\r\n          bottom: iRect.bottom,\r\n          height: iRect.height,\r\n          width: iRect.width,\r\n        },\r\n        autoCompleteItems,\r\n        { inputDropdown: true },\r\n      );\r\n      autoCompleteContext.selectedIndex = 0;\r\n    }\r\n    self.createInlineStyle(filterLabel, 'canvas-datagrid-context-menu-label');\r\n    self.createInlineStyle(\r\n      filterAutoCompleteButton,\r\n      'canvas-datagrid-context-menu-filter-button',\r\n    );\r\n    self.createInlineStyle(\r\n      filterInput,\r\n      'canvas-datagrid-context-menu-filter-input',\r\n    );\r\n    checkRegExpErrorState();\r\n    filterInput.onclick = self.disposeAutocomplete;\r\n    filterInput.addEventListener('keydown', function (e) {\r\n      if (e.key === 'ArrowDown') {\r\n        autoCompleteContext.selectedIndex += 1;\r\n      }\r\n\r\n      if (e.key === 'ArrowUp') {\r\n        autoCompleteContext.selectedIndex -= 1;\r\n      }\r\n\r\n      if (e.key === 'Enter') {\r\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\r\n        self.disposeContextMenu();\r\n      }\r\n\r\n      if (e.key === 'Tab') {\r\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\r\n        e.preventDefault();\r\n      }\r\n\r\n      if (e.key === 'Escape') {\r\n        self.disposeContextMenu();\r\n      }\r\n    });\r\n    filterInput.addEventListener('keyup', function () {\r\n      self.setFilter(e.cell.header.name, filterInput.value);\r\n    });\r\n    filterInput.addEventListener('keyup', createAutoCompleteContext);\r\n    ['focus', 'blur', 'keydown', 'keyup', 'change'].forEach(function (en) {\r\n      filterInput.addEventListener(en, checkRegExpErrorState);\r\n    });\r\n    filterInput.value = e.cell.header\r\n      ? self.columnFilters[e.cell.header.name] || ''\r\n      : '';\r\n    filterLabel.innerHTML = self.attributes.filterOptionText.replace(/%s/g, n);\r\n    filterAutoCompleteButton.onclick = function () {\r\n      if (autoCompleteContext) {\r\n        return self.disposeAutocomplete();\r\n      }\r\n      createAutoCompleteContext();\r\n    };\r\n    filterAutoCompleteButton.innerHTML = self.style.contextFilterButtonHTML;\r\n    filterContainer.addEventListener('click', function (e) {\r\n      return e.stopPropagation();\r\n    });\r\n    filterContainer.appendChild(filterLabel);\r\n    filterContainer.appendChild(filterInput);\r\n    filterContainer.appendChild(filterAutoCompleteButton);\r\n    e.items.push({\r\n      title: filterContainer,\r\n    });\r\n    if (Object.keys(self.columnFilters).length) {\r\n      Object.keys(self.columnFilters).forEach(function (cf) {\r\n        var h = self.getHeaderByName(cf);\r\n        e.items.push({\r\n          title: self.attributes.removeFilterOptionText.replace(\r\n            /%s/g,\r\n            h.title || h.name,\r\n          ),\r\n          click: function removeFilterClick(e) {\r\n            e.preventDefault();\r\n            self.setFilter(cf, '');\r\n            self.controlInput.focus();\r\n          },\r\n        });\r\n      });\r\n    }\r\n  }\r\n  function addDefaultContextMenuItem(e) {\r\n    var isNormalCell =\r\n      !(\r\n        e.cell.isBackground ||\r\n        e.cell.isColumnHeaderCellCap ||\r\n        e.cell.isScrollBar ||\r\n        e.cell.isCorner ||\r\n        e.cell.isRowHeader\r\n      ) && e.cell.header;\r\n    if (self.attributes.showFilter && isNormalCell) {\r\n      createFilterContextMenuItems(e);\r\n    }\r\n    if (\r\n      self.attributes.showCopy &&\r\n      self.selections.reduce(function (p, r) {\r\n        return p + r.length;\r\n      }, 0) > 0\r\n    ) {\r\n      e.items.push({\r\n        title: self.attributes.copyText,\r\n        click: function () {\r\n          document.execCommand('copy');\r\n          self.disposeContextMenu();\r\n          self.controlInput.focus();\r\n        },\r\n      });\r\n    }\r\n    if (self.attributes.showPaste && self.clipBoardData) {\r\n      e.items.push({\r\n        title: self.attributes.pasteText,\r\n        click: function () {\r\n          self.paste(self.clipBoardData, e.cell.columnIndex, e.cell.rowIndex);\r\n          self.draw();\r\n        },\r\n      });\r\n    }\r\n    if (self.attributes.showColumnSelector) {\r\n      e.items.push({\r\n        title: self.attributes.columnSelectorText,\r\n        items: function () {\r\n          var d = [];\r\n          self.getSchema().forEach(function (column) {\r\n            function toggleColumnVisibility(e) {\r\n              column.hidden = !column.hidden;\r\n              self.dispatchEvent('togglecolumn', {\r\n                column: column,\r\n                hidden: column.hidden,\r\n              });\r\n              e.preventDefault();\r\n              self.stopPropagation(e);\r\n              self.disposeContextMenu();\r\n              self.resize(true);\r\n              self.setStorageData();\r\n            }\r\n            var el = document.createElement('div');\r\n            applyContextItemStyle(el);\r\n            el.addEventListener('touchstart', toggleColumnVisibility);\r\n            el.addEventListener('click', toggleColumnVisibility);\r\n            el.innerHTML =\r\n              (column.hidden\r\n                ? self.attributes.columnSelectorHiddenText\r\n                : self.attributes.columnSelectorVisibleText) +\r\n              (column.title || column.name);\r\n            d.push({\r\n              title: el,\r\n            });\r\n          });\r\n          return d;\r\n        },\r\n      });\r\n      if (e.cell && e.cell.header && e.cell.columnIndex > -1) {\r\n        e.items.push({\r\n          title: self.attributes.hideColumnText.replace(\r\n            /%s/gi,\r\n            e.cell.header.title || e.cell.header.name,\r\n          ),\r\n          click: function (ev) {\r\n            self.getSchema()[e.cell.columnIndex].hidden = true;\r\n            ev.preventDefault();\r\n            self.stopPropagation(ev);\r\n            self.disposeContextMenu();\r\n            self.setStorageData();\r\n            setTimeout(function () {\r\n              self.resize(true);\r\n            }, 10);\r\n          },\r\n        });\r\n      }\r\n    }\r\n    if (\r\n      self.attributes.saveAppearance &&\r\n      self.attributes.showClearSettingsOption &&\r\n      (Object.keys(self.sizes.rows).length > 0 ||\r\n        Object.keys(self.sizes.columns).length > 0)\r\n    ) {\r\n      e.items.push({\r\n        title: self.attributes.clearSettingsOptionText,\r\n        click: function (e) {\r\n          e.preventDefault();\r\n          self.sizes.rows = {};\r\n          self.sizes.columns = {};\r\n          self.createRowOrders();\r\n          self.createColumnOrders();\r\n          self.storedSettings = undefined;\r\n          self.dispatchEvent('resizecolumn', {\r\n            columnWidth: self.style.cellWidth,\r\n          });\r\n          self.dispatchEvent('resizerow', {\r\n            cellHeight: self.style.cellHeight,\r\n          });\r\n          self.setStorageData();\r\n          self.resize(true);\r\n          self.disposeContextMenu();\r\n          self.controlInput.focus();\r\n        },\r\n      });\r\n    }\r\n    if (\r\n      self.attributes.allowSorting &&\r\n      self.attributes.showOrderByOption &&\r\n      isNormalCell\r\n    ) {\r\n      e.items.push({\r\n        title: self.attributes.showOrderByOptionTextAsc.replace(\r\n          '%s',\r\n          e.cell.header.title || e.cell.header.name,\r\n        ),\r\n        click: function (ev) {\r\n          ev.preventDefault();\r\n          self.order(e.cell.header.name, 'asc');\r\n          self.controlInput.focus();\r\n        },\r\n      });\r\n      e.items.push({\r\n        title: self.attributes.showOrderByOptionTextDesc.replace(\r\n          '%s',\r\n          e.cell.header.title || e.cell.header.name,\r\n        ),\r\n        click: function (ev) {\r\n          ev.preventDefault();\r\n          self.order(e.cell.header.name, 'desc');\r\n          self.disposeContextMenu();\r\n          self.controlInput.focus();\r\n        },\r\n      });\r\n    }\r\n  }\r\n  self.disposeAutocomplete = function () {\r\n    if (autoCompleteContext) {\r\n      autoCompleteContext.dispose();\r\n      autoCompleteContext = undefined;\r\n    }\r\n  };\r\n  self.disposeContextMenu = function (event) {\r\n    document.removeEventListener('click', self.disposeContextMenu);\r\n    zIndexTop = self.style.contextMenuZIndex;\r\n    self.disposeAutocomplete();\r\n    if (self.contextMenu) {\r\n      self.contextMenu.dispose();\r\n    }\r\n    self.contextMenu = undefined;\r\n    if (event) {\r\n      self.canvas.focus();\r\n      self.mousedown(event);\r\n      self.mouseup(event);\r\n    }\r\n  };\r\n  self.contextmenuEvent = function (e, overridePos) {\r\n    if (!self.hasFocus && e.target !== self.canvas) {\r\n      return;\r\n    }\r\n    function createDisposeEvent() {\r\n      requestAnimationFrame(function () {\r\n        document.addEventListener('click', self.disposeContextMenu);\r\n        document.removeEventListener('mouseup', createDisposeEvent);\r\n      });\r\n    }\r\n    var contextPosition,\r\n      items = [],\r\n      pos = overridePos || self.getLayerPos(e),\r\n      ev = {\r\n        NativeEvent: e,\r\n        cell: self.getCellAt(pos.x, pos.y),\r\n        items: items,\r\n      };\r\n    if (!ev.cell.isGrid) {\r\n      addDefaultContextMenuItem(ev);\r\n    }\r\n    if (e.type !== 'mousedown' && self.dispatchEvent('contextmenu', ev)) {\r\n      return;\r\n    }\r\n    if (!ev.cell.isGrid) {\r\n      if (self.contextMenu) {\r\n        self.disposeContextMenu();\r\n      }\r\n      contextPosition = {\r\n        left:\r\n          pos.x +\r\n          pos.rect.left +\r\n          self.style.contextMenuMarginLeft +\r\n          self.canvasOffsetLeft,\r\n        top:\r\n          pos.y +\r\n          pos.rect.top +\r\n          self.style.contextMenuMarginTop +\r\n          self.canvasOffsetTop,\r\n        right: ev.cell.width + ev.cell.x + pos.rect.left,\r\n        bottom: ev.cell.height + ev.cell.y + pos.rect.top,\r\n        height: ev.cell.height,\r\n        width: ev.cell.width,\r\n      };\r\n      if (self.mobile) {\r\n        contextPosition.left = self.style.mobileContextMenuMargin + 'px';\r\n        contextPosition.width =\r\n          self.width - self.style.mobileContextMenuMargin * 2 + 'px';\r\n      }\r\n      if (e.type == 'mousedown') {\r\n        contextPosition.top += self.style.filterButtonMenuOffsetTop;\r\n      }\r\n      self.contextMenu = createContextMenu(ev, contextPosition, items);\r\n      if (e.type == 'mousedown') {\r\n        document.addEventListener('mouseup', createDisposeEvent);\r\n      } else {\r\n        createDisposeEvent();\r\n      }\r\n      e.preventDefault();\r\n    }\r\n  };\r\n  return;\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false, Event: false*/\r\n'use strict';\r\n\r\nexport default function (self) {\r\n  let zIndexTop;\r\n\r\n  function applyButtonMenuItemStyle(buttonMenuItemContainer) {\r\n    self.createInlineStyle(\r\n      buttonMenuItemContainer,\r\n      'canvas-datagrid-button-menu-item' + (self.mobile ? '-mobile' : ''),\r\n    );\r\n    buttonMenuItemContainer.addEventListener('mouseover', function () {\r\n      self.createInlineStyle(\r\n        buttonMenuItemContainer,\r\n        'canvas-datagrid-button-menu-item:hover',\r\n      );\r\n    });\r\n    buttonMenuItemContainer.addEventListener('mouseout', function () {\r\n      self.createInlineStyle(\r\n        buttonMenuItemContainer,\r\n        'canvas-datagrid-button-menu-item',\r\n      );\r\n    });\r\n  }\r\n\r\n  function applyButtonStyle(button) {\r\n    self.createInlineStyle(button, 'canvas-datagrid-button-wrapper');\r\n    button.addEventListener('mouseover', function () {\r\n      if (!self.buttonMenu) {\r\n        self.createInlineStyle(button, 'canvas-datagrid-button-wrapper:hover');\r\n      }\r\n    });\r\n    button.addEventListener('mouseout', function () {\r\n      if (!self.buttonMenu) {\r\n        self.createInlineStyle(button, 'canvas-datagrid-button-wrapper');\r\n      }\r\n    });\r\n  }\r\n\r\n  function createButton(pos, items, imgSrc) {\r\n    var wrapper = document.createElement('div'),\r\n      buttonArrow = document.createElement('div'),\r\n      buttonIcon = document.createElement('div'),\r\n      intf = {};\r\n\r\n    if (!Array.isArray(items)) {\r\n      throw new Error('createButton expects an array.');\r\n    }\r\n\r\n    function init() {\r\n      var loc = {},\r\n        s = self.scrollOffset(self.canvas);\r\n\r\n      if (zIndexTop === undefined) {\r\n        zIndexTop = self.style.buttonZIndex;\r\n      }\r\n\r\n      applyButtonStyle(wrapper);\r\n      self.createInlineStyle(buttonIcon, 'canvas-datagrid-button-icon');\r\n      self.createInlineStyle(buttonArrow, 'canvas-datagrid-button-arrow');\r\n\r\n      loc.x = pos.left - s.left;\r\n      loc.y = pos.top - s.top;\r\n      loc.height = 0;\r\n      zIndexTop += 1;\r\n      wrapper.style.position = 'absolute';\r\n      wrapper.style.zIndex = zIndexTop;\r\n      wrapper.style.left = loc.x + 'px';\r\n      wrapper.style.top = loc.y + 'px';\r\n      wrapper.left = pos.left + self.scrollBox.scrollLeft;\r\n      wrapper.top = pos.top + self.scrollBox.scrollTop;\r\n      buttonArrow.innerHTML = self.style.buttonArrowDownHTML;\r\n      if (imgSrc) {\r\n        let img = document.createElement('img');\r\n        img.setAttribute('src', imgSrc);\r\n        img.style.maxWidth = '100%';\r\n        img.style.height = '100%';\r\n        buttonIcon.appendChild(img);\r\n      }\r\n      wrapper.appendChild(buttonIcon);\r\n      wrapper.appendChild(buttonArrow);\r\n      document.body.appendChild(wrapper);\r\n      wrapper.addEventListener('click', toggleButtonMenu);\r\n    }\r\n\r\n    intf.wrapper = wrapper;\r\n    intf.items = items;\r\n    init();\r\n\r\n    intf.dispose = function () {\r\n      if (wrapper.parentNode) {\r\n        wrapper.parentNode.removeChild(wrapper);\r\n      }\r\n    };\r\n    return intf;\r\n  }\r\n\r\n  function toggleButtonMenu() {\r\n    function createDisposeEvent() {\r\n      requestAnimationFrame(function () {\r\n        document.addEventListener('click', self.disposeButtonMenu);\r\n      });\r\n    }\r\n    if (self.buttonMenu) {\r\n      self.disposeButtonMenu();\r\n    } else {\r\n      let pos = {\r\n        left: self.button.wrapper.left - self.scrollBox.scrollLeft,\r\n        top:\r\n          self.button.wrapper.top +\r\n          self.button.wrapper.offsetHeight -\r\n          self.scrollBox.scrollTop,\r\n      };\r\n      self.buttonMenu = createButtonMenu(pos, self.button.items);\r\n      self.createInlineStyle(\r\n        self.button.wrapper,\r\n        'canvas-datagrid-button-wrapper:active',\r\n      );\r\n      createDisposeEvent();\r\n    }\r\n  }\r\n\r\n  function createButtonMenu(pos, items) {\r\n    var buttonMenu = document.createElement('div'),\r\n      selectedIndex = -1,\r\n      intf = {},\r\n      rect;\r\n\r\n    function createItems() {\r\n      function addItem(item, menuItemContainer) {\r\n        function addContent(content) {\r\n          if (content === null) {\r\n            return;\r\n          }\r\n\r\n          if (typeof content === 'object') {\r\n            menuItemContainer.appendChild(content);\r\n            return;\r\n          }\r\n\r\n          applyButtonMenuItemStyle(menuItemContainer);\r\n          menuItemContainer.innerHTML = content;\r\n          return;\r\n        }\r\n\r\n        addContent(item.title);\r\n        item.buttonMenuItemContainer = menuItemContainer;\r\n\r\n        if (item.click) {\r\n          menuItemContainer.addEventListener('click', function (ev) {\r\n            item.click.apply(self, [ev]);\r\n            self.disposeButton();\r\n          });\r\n        }\r\n      }\r\n\r\n      for (let item of items) {\r\n        var buttonMenuItemContainer = document.createElement('div');\r\n        addItem(item, buttonMenuItemContainer);\r\n        buttonMenu.appendChild(buttonMenuItemContainer);\r\n      }\r\n    }\r\n\r\n    function clickIndex(idx) {\r\n      items[idx].buttonMenuItemContainer.dispatchEvent(new Event('click'));\r\n    }\r\n\r\n    function init() {\r\n      var loc = {},\r\n        s = self.scrollOffset(self.canvas);\r\n\r\n      if (zIndexTop === undefined) {\r\n        zIndexTop = self.style.buttonZIndex;\r\n      }\r\n\r\n      createItems();\r\n      self.createInlineStyle(\r\n        buttonMenu,\r\n        'canvas-datagrid-button-menu' + (self.mobile ? '-mobile' : ''),\r\n      );\r\n\r\n      loc.x = pos.left - s.left;\r\n      loc.y = pos.top - s.top;\r\n      loc.height = 0;\r\n      zIndexTop += 1;\r\n      buttonMenu.style.position = 'absolute';\r\n      buttonMenu.style.zIndex = zIndexTop;\r\n      buttonMenu.style.left = loc.x + 'px';\r\n      buttonMenu.style.top = loc.y + 'px';\r\n      document.body.appendChild(buttonMenu);\r\n      rect = buttonMenu.getBoundingClientRect();\r\n\r\n      if (rect.bottom > window.innerHeight) {\r\n        loc.y =\r\n          self.button.wrapper.top -\r\n          buttonMenu.offsetHeight -\r\n          self.scrollBox.scrollTop;\r\n        if (loc.y < 0) {\r\n          loc.y = self.style.buttonMenuWindowMargin;\r\n        }\r\n\r\n        if (\r\n          buttonMenu.offsetHeight >\r\n          window.innerHeight - self.style.buttonMenuWindowMargin\r\n        ) {\r\n          buttonMenu.style.height =\r\n            window.innerHeight - self.style.buttonMenuWindowMargin * 2 + 'px';\r\n        }\r\n      }\r\n\r\n      if (rect.right > window.innerWidth) {\r\n        loc.x -=\r\n          rect.right - window.innerWidth + self.style.buttonMenuWindowMargin;\r\n      }\r\n\r\n      if (loc.x < 0) {\r\n        loc.x = self.style.buttonMenuWindowMargin;\r\n      }\r\n\r\n      if (loc.y < 0) {\r\n        loc.y = self.style.buttonMenuWindowMargin;\r\n      }\r\n\r\n      buttonMenu.style.left = loc.x + 'px';\r\n      buttonMenu.style.top = loc.y + 'px';\r\n    }\r\n\r\n    intf.buttonMenu = buttonMenu;\r\n    init();\r\n    intf.clickIndex = clickIndex;\r\n    intf.rect = rect;\r\n    intf.items = items;\r\n\r\n    intf.dispose = function () {\r\n      if (buttonMenu.parentNode) {\r\n        buttonMenu.parentNode.removeChild(buttonMenu);\r\n      }\r\n    };\r\n\r\n    Object.defineProperty(intf, 'selectedIndex', {\r\n      get: function get() {\r\n        return selectedIndex;\r\n      },\r\n      set: function set(value) {\r\n        if (typeof value !== 'number' || isNaN(value) || !isFinite(value)) {\r\n          throw new Error('Button menu selected index must be a sane number.');\r\n        }\r\n\r\n        selectedIndex = value;\r\n\r\n        if (selectedIndex > items.length - 1) {\r\n          selectedIndex = items.length - 1;\r\n        }\r\n\r\n        if (selectedIndex < 0) {\r\n          selectedIndex = 0;\r\n        }\r\n\r\n        items.forEach(function (item, index) {\r\n          if (index === selectedIndex) {\r\n            return self.createInlineStyle(\r\n              item.buttonMenuItemContainer,\r\n              'canvas-datagrid-button-menu-item:hover',\r\n            );\r\n          }\r\n\r\n          self.createInlineStyle(\r\n            item.buttonMenuItemContainer,\r\n            'canvas-datagrid-button-menu-item',\r\n          );\r\n        });\r\n      },\r\n    });\r\n    return intf;\r\n  }\r\n\r\n  self.disposeButtonMenu = function () {\r\n    if (self.buttonMenu) {\r\n      document.removeEventListener('click', self.disposeButtonMenu);\r\n      self.buttonMenu.dispose();\r\n      self.buttonMenu = undefined;\r\n      self.createInlineStyle(\r\n        self.button.wrapper,\r\n        'canvas-datagrid-button-wrapper:hover',\r\n      );\r\n    }\r\n  };\r\n\r\n  self.disposeButton = function (e) {\r\n    if (e && e.keyCode !== 27) return;\r\n    document.removeEventListener('keydown', self.disposeButton);\r\n    zIndexTop = self.style.buttonZIndex;\r\n    self.disposeButtonMenu();\r\n\r\n    if (self.button) {\r\n      self.button.dispose();\r\n    }\r\n\r\n    self.button = undefined;\r\n  };\r\n\r\n  self.moveButtonPos = function () {\r\n    self.button.wrapper.style.left =\r\n      self.button.wrapper.left - self.scrollBox.scrollLeft + 'px';\r\n    self.button.wrapper.style.top =\r\n      self.button.wrapper.top - self.scrollBox.scrollTop + 'px';\r\n    self.disposeButtonMenu();\r\n  };\r\n\r\n  self.attachButton = function (pos, items, imgSrc) {\r\n    function createDisposeEvent() {\r\n      requestAnimationFrame(function () {\r\n        document.addEventListener('keydown', self.disposeButton);\r\n      });\r\n    }\r\n\r\n    if (self.button) {\r\n      self.disposeButton();\r\n    }\r\n\r\n    self.button = createButton(pos, items, imgSrc);\r\n    createDisposeEvent();\r\n  };\r\n  return;\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nexport default function (self) {\r\n  self.getClippingRect = function (ele) {\r\n    var boundingRect = self.position(self.parentNode),\r\n      eleRect = self.position(ele),\r\n      s = self.scrollOffset(self.canvas),\r\n      clipRect = {\r\n        x: 0,\r\n        y: 0,\r\n        h: 0,\r\n        w: 0,\r\n      },\r\n      parentRect = {\r\n        x: -Infinity,\r\n        y: -Infinity,\r\n        h: Infinity,\r\n        w: Infinity,\r\n      },\r\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\r\n      rowHeaderCellWidth = self.getRowHeaderCellWidth();\r\n    boundingRect.top -= s.top;\r\n    boundingRect.left -= s.left;\r\n    eleRect.top -= s.top;\r\n    eleRect.left -= s.left;\r\n    clipRect.h =\r\n      boundingRect.top +\r\n      boundingRect.height -\r\n      ele.offsetTop -\r\n      self.style.scrollBarWidth;\r\n    clipRect.w =\r\n      boundingRect.left +\r\n      boundingRect.width -\r\n      ele.offsetLeft -\r\n      self.style.scrollBarWidth;\r\n    clipRect.x = boundingRect.left + eleRect.left * -1 + rowHeaderCellWidth;\r\n    clipRect.y = boundingRect.top + eleRect.top * -1 + columnHeaderCellHeight;\r\n    return {\r\n      x: clipRect.x > parentRect.x ? clipRect.x : parentRect.x,\r\n      y: clipRect.y > parentRect.y ? clipRect.y : parentRect.y,\r\n      h: clipRect.h < parentRect.h ? clipRect.h : parentRect.h,\r\n      w: clipRect.w < parentRect.w ? clipRect.w : parentRect.w,\r\n    };\r\n  };\r\n  self.clipElement = function (ele) {\r\n    var clipRect = self.getClippingRect(ele);\r\n    if (clipRect.w < 0) {\r\n      clipRect.w = 0;\r\n    }\r\n    if (clipRect.h < 0) {\r\n      clipRect.h = 0;\r\n    }\r\n    ele.style.clip =\r\n      'rect(' +\r\n      clipRect.y +\r\n      'px,' +\r\n      clipRect.w +\r\n      'px,' +\r\n      clipRect.h +\r\n      'px,' +\r\n      clipRect.x +\r\n      'px' +\r\n      ')';\r\n    // INFO https://developer.mozilla.org/en-US/docs/Web/CSS/clip\r\n    // clip has been \"deprecated\" for clipPath.  Of course nothing but chrome\r\n    // supports clip path, so we'll keep using clip until someday clipPath becomes\r\n    // more widely support.  The code below works correctly, but setting clipPath and clip\r\n    // at the same time has undesirable results.\r\n    // ele.style.clipPath = 'polygon('\r\n    //     + clipRect.x + 'px ' + clipRect.y + 'px,'\r\n    //     + clipRect.x + 'px ' + clipRect.h + 'px,'\r\n    //     + clipRect.w + 'px ' + clipRect.h + 'px,'\r\n    //     + clipRect.w + 'px ' + clipRect.y + 'px'\r\n    //     + ')';\r\n  };\r\n  self.scrollOffset = function (e) {\r\n    var x = 0,\r\n      y = 0,\r\n      scrollingElement = document.scrollingElement || {\r\n        scrollLeft: 0,\r\n        scrollTop: 0,\r\n      };\r\n    while (\r\n      e.parentNode &&\r\n      e.nodeName !== 'CANVAS-DATAGRID' &&\r\n      e !== self.intf\r\n    ) {\r\n      if (\r\n        e.nodeType !== 'canvas-datagrid-tree' &&\r\n        e.nodeType !== 'canvas-datagrid-cell'\r\n      ) {\r\n        x -= e.scrollLeft;\r\n        y -= e.scrollTop;\r\n      }\r\n      e = e.parentNode;\r\n    }\r\n    return {\r\n      left: x - scrollingElement.scrollLeft,\r\n      top: y - scrollingElement.scrollTop,\r\n    };\r\n  };\r\n  self.resizeEditInput = function () {\r\n    if (self.input && self.input.editCell) {\r\n      var pos = self.canvas.getBoundingClientRect(),\r\n        s = self.scrollOffset(self.intf),\r\n        bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\r\n        borderWidth = self.style.cellBorderWidth * bm,\r\n        cell = self.getVisibleCellByIndex(\r\n          self.input.editCell.columnIndex,\r\n          self.input.editCell.rowIndex,\r\n        ) || { x: -100, y: -100, height: 0, width: 0 };\r\n      if (self.mobile) {\r\n        self.input.style.left = '0';\r\n        self.input.style.top =\r\n          self.height -\r\n          self.style.mobileEditInputHeight -\r\n          borderWidth -\r\n          1 +\r\n          'px';\r\n        self.input.style.height = self.style.mobileEditInputHeight + 'px';\r\n        self.input.style.width = self.width - borderWidth - 1 + 'px';\r\n        return;\r\n      }\r\n      self.input.style.left =\r\n        pos.left + cell.x + self.canvasOffsetLeft - s.left + 'px';\r\n      self.input.style.top =\r\n        pos.top +\r\n        cell.y -\r\n        self.style.cellBorderWidth +\r\n        self.canvasOffsetTop -\r\n        s.top +\r\n        'px';\r\n      self.input.style.height = cell.height - borderWidth + 'px';\r\n      self.input.style.width = cell.width - self.style.cellPaddingLeft + 'px';\r\n      self.clipElement(self.input);\r\n    }\r\n  };\r\n  self.position = function (e, ignoreScrollOffset) {\r\n    var x = 0,\r\n      y = 0,\r\n      s = e,\r\n      h,\r\n      w;\r\n    while (e.offsetParent && e.nodeName !== 'CANVAS-DATAGRID') {\r\n      x += e.offsetLeft;\r\n      y += e.offsetTop;\r\n      h = e.offsetHeight;\r\n      w = e.offsetWidth;\r\n      e = e.offsetParent;\r\n    }\r\n    if (ignoreScrollOffset) {\r\n      return { left: x, top: y, height: h, width: w };\r\n    }\r\n    e = s;\r\n    s = self.scrollOffset(e);\r\n    return { left: x + s.left, top: y + s.top, height: h, width: w };\r\n  };\r\n  self.getLayerPos = function (e) {\r\n    var rect = self.canvas.getBoundingClientRect(),\r\n      pos = {\r\n        x: e.clientX - rect.left,\r\n        y: e.clientY - rect.top,\r\n      };\r\n    if (self.isChildGrid) {\r\n      pos.x -= self.canvasOffsetLeft;\r\n      pos.y -= self.canvasOffsetTop;\r\n    }\r\n    return {\r\n      x: pos.x,\r\n      y: pos.y,\r\n      rect: rect,\r\n    };\r\n  };\r\n  /**\r\n   * Ends editing, optionally aborting the edit.\r\n   * @memberof canvasDatagrid\r\n   * @name endEdit\r\n   * @method\r\n   * @param {boolean} abort When true, abort the edit.\r\n   */\r\n  self.endEdit = function (abort) {\r\n    var cell = self.input.editCell,\r\n      y = cell.rowIndex;\r\n    function abortEdit() {\r\n      abort = true;\r\n    }\r\n    if (\r\n      self.dispatchEvent('beforeendedit', {\r\n        cell: cell,\r\n        newValue: self.input.value,\r\n        oldValue: cell.value,\r\n        abort: abortEdit,\r\n        input: self.input,\r\n      })\r\n    ) {\r\n      return false;\r\n    }\r\n    if (self.input.value !== cell.value && !abort) {\r\n      self.changes[y] = self.changes[y] || {};\r\n      self.changes[y][cell.header.name] = self.input.value;\r\n      if (!cell.data) {\r\n        self.originalData[cell.boundRowIndex] = {};\r\n        cell.data = self.originalData[cell.boundRowIndex];\r\n      }\r\n      cell.data[cell.header.name] = self.input.value;\r\n      if (y === self.viewData.length) {\r\n        if (\r\n          self.dispatchEvent('newrow', {\r\n            value: self.input.value,\r\n            defaultValue: cell.value,\r\n            aborted: abort,\r\n            cell: cell,\r\n            input: self.input,\r\n          })\r\n        ) {\r\n          return false;\r\n        }\r\n        self.addRow(cell.data);\r\n        self.createNewRowData();\r\n      }\r\n      self.draw(true);\r\n    }\r\n    if (self.input.parentNode) {\r\n      self.input.parentNode.removeChild(self.input);\r\n    }\r\n    self.intf.focus();\r\n    self.dispatchEvent('endedit', {\r\n      cell: cell,\r\n      value: self.input.value,\r\n      aborted: abort,\r\n      input: self.input,\r\n    });\r\n    self.input = undefined;\r\n    return true;\r\n  };\r\n  /**\r\n   * Begins editing at cell x, row y.\r\n   * @memberof canvasDatagrid\r\n   * @name beginEditAt\r\n   * @method\r\n   * @param {number} x The column index of the cell to edit.\r\n   * @param {number} y The row index of the cell to edit.\r\n   * @param {boolean} inEnterMode If true, starting to type in cell will replace the\r\n   * cell's previous value instead of appending, and using the arrow keys will allow\r\n   * the user to navigate to adjacent cells instead of moving the text cursor around\r\n   * (default is false, and means user is in 'edit' mode).\r\n   */\r\n  self.beginEditAt = function (x, y, NativeEvent, inEnterMode = false) {\r\n    if (!self.attributes.editable) {\r\n      return;\r\n    }\r\n    if (self.input) {\r\n      self.endEdit();\r\n    }\r\n    var cell = self.getVisibleCellByIndex(x, y),\r\n      s = self.getSchema(),\r\n      adjacentCells,\r\n      enumItems,\r\n      enu,\r\n      option,\r\n      valueInEnum;\r\n    if (!(cell && cell.header)) {\r\n      return;\r\n    }\r\n    //HACK for IE10, does not like literal enum\r\n    enu = cell.header['enum'];\r\n    if (\r\n      self.dispatchEvent('beforebeginedit', {\r\n        cell: cell,\r\n        NativeEvent: NativeEvent,\r\n      })\r\n    ) {\r\n      return false;\r\n    }\r\n    self.scrollIntoView(x, y);\r\n    self.setActiveCell(x, y);\r\n    adjacentCells = self.getAdjacentCells();\r\n    if (enu) {\r\n      self.input = document.createElement('select');\r\n    } else {\r\n      self.input = document.createElement(\r\n        self.attributes.multiLine ? 'textarea' : 'input',\r\n      );\r\n    }\r\n    cell = self.getVisibleCellByIndex(x, y);\r\n    //HACK on mobile devices sometimes edit can begin without the cell being in view, I don't know how.\r\n    if (!cell) {\r\n      return;\r\n    }\r\n    if (enu) {\r\n      // add enums\r\n      if (typeof enu === 'function') {\r\n        enumItems = enu.apply(self.intf, [{ cell: cell }]);\r\n      } else if (Array.isArray(enu)) {\r\n        enumItems = enu;\r\n      }\r\n      enumItems.forEach(function (e) {\r\n        var i = document.createElement('option'),\r\n          val,\r\n          title;\r\n        if (Array.isArray(e)) {\r\n          val = e[0];\r\n          title = e[1];\r\n        } else {\r\n          val = e;\r\n          title = e;\r\n        }\r\n        if (val === cell.value) {\r\n          valueInEnum = true;\r\n        }\r\n        i.value = val;\r\n        i.innerHTML = title;\r\n        self.input.appendChild(i);\r\n      });\r\n      if (!valueInEnum) {\r\n        option = document.createElement('option');\r\n        option.value = cell.value;\r\n        option.innerHTML = cell.value;\r\n        self.input.appendChild(option);\r\n      }\r\n      self.input.addEventListener('change', function () {\r\n        self.endEdit();\r\n        self.draw(true);\r\n      });\r\n    }\r\n    // if the user has not prevented the default action, append to the body\r\n    if (\r\n      !self.dispatchEvent('appendeditinput', { cell: cell, input: self.input })\r\n    ) {\r\n      document.body.appendChild(self.input);\r\n    }\r\n    self.createInlineStyle(\r\n      self.input,\r\n      self.mobile\r\n        ? 'canvas-datagrid-edit-mobile-input'\r\n        : 'canvas-datagrid-edit-input',\r\n    );\r\n    self.input.style.position = 'absolute';\r\n    self.input.editCell = cell;\r\n    self.resizeEditInput();\r\n    self.input.style.zIndex = self.style.editCellZIndex;\r\n    self.input.style.fontSize =\r\n      parseInt(self.style.editCellFontSize, 10) * self.scale + 'px';\r\n\r\n    var cellValueIsEmpty = [null, undefined].indexOf(cell.value) !== -1;\r\n    var shouldClearCellValue = cellValueIsEmpty || inEnterMode;\r\n\r\n    self.input.value = shouldClearCellValue ? '' : cell.value;\r\n    self.input.focus();\r\n    self.input.addEventListener('click', self.stopPropagation);\r\n    self.input.addEventListener('dblclick', self.stopPropagation);\r\n    self.input.addEventListener('mouseup', self.stopPropagation);\r\n    self.input.addEventListener('mousedown', self.stopPropagation);\r\n    self.input.addEventListener('keydown', function (e) {\r\n      var nx = cell.columnIndex,\r\n        ny = cell.rowIndex;\r\n\r\n      if (e.key === 'Escape') {\r\n        self.endEdit(true); // end edit and abort the value change\r\n        self.draw(true);\r\n      } else if (e.key === 'Enter' && self.attributes.multiLine && e.altKey) {\r\n        self.input.value = self.input.value + '\\n';\r\n        self.input.scrollTop = self.input.scrollHeight;\r\n      } else if (e.key === 'Enter') {\r\n        self.endEdit();\r\n\r\n        // Move to cell in next or previous row\r\n        var nextRowIndex = e.shiftKey\r\n          ? Math.max(0, ny - 1)\r\n          : Math.min(ny + 1, self.viewData.length - 1);\r\n\r\n        if (nextRowIndex !== ny) {\r\n          self.scrollIntoView(nx, nextRowIndex);\r\n          self.setActiveCell(nx, nextRowIndex);\r\n        }\r\n\r\n        self.draw(true);\r\n      } else if (\r\n        ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key) &&\r\n        inEnterMode\r\n      ) {\r\n        switch (e.key) {\r\n          case 'ArrowUp':\r\n            ny = Math.max(0, ny - 1);\r\n            break;\r\n          case 'ArrowDown':\r\n            ny = Math.min(ny + 1, self.viewData.length - 1);\r\n            break;\r\n          case 'ArrowLeft':\r\n            nx = Math.max(nx - 1, 0);\r\n            break;\r\n          case 'ArrowRight':\r\n            nx = adjacentCells.right;\r\n            break;\r\n        }\r\n\r\n        self.endEdit();\r\n\r\n        self.scrollIntoView(nx, ny);\r\n        self.setActiveCell(nx, ny);\r\n\r\n        self.draw(true);\r\n      } else if (e.key === 'Tab') {\r\n        e.preventDefault();\r\n        if (!self.endEdit()) {\r\n          return;\r\n        }\r\n        if (e.shiftKey) {\r\n          nx = adjacentCells.left;\r\n        } else {\r\n          nx = adjacentCells.right;\r\n        }\r\n        if (adjacentCells.left === x && e.shiftKey) {\r\n          nx = adjacentCells.last;\r\n          ny -= 1;\r\n        }\r\n        if (adjacentCells.right === x && !e.shiftKey) {\r\n          nx = adjacentCells.first;\r\n          ny += 1;\r\n        }\r\n        if (ny < 0) {\r\n          ny = self.viewData.length - 1;\r\n        }\r\n        if (ny > self.viewData.length - 1) {\r\n          ny = 0;\r\n        }\r\n        self.scrollIntoView(nx, ny);\r\n        self.beginEditAt(nx, ny, e);\r\n      }\r\n    });\r\n\r\n    self.dispatchEvent('beginedit', { cell: cell, input: self.input });\r\n  };\r\n  self.createInlineStyle = function (el, className) {\r\n    var css = {\r\n      'canvas-datagrid-button-wrapper': {\r\n        display: 'inline-block',\r\n        padding: self.style.buttonPadding,\r\n        borderWidth: '1px',\r\n        borderStyle: 'solid',\r\n        borderColor: self.style.buttonBorderColor,\r\n        cursor: 'pointer',\r\n        background: self.style.buttonBackgroundColor,\r\n        userSelect: 'none',\r\n      },\r\n      'canvas-datagrid-button-wrapper:hover': {\r\n        borderColor: self.style.buttonBorderColor,\r\n        background: self.style.buttonHoverBackgroundColor,\r\n      },\r\n      'canvas-datagrid-button-wrapper:active': {\r\n        borderColor: self.style.buttonActiveBorderColor,\r\n        background: self.style.buttonActiveBackgroundColor,\r\n      },\r\n      'canvas-datagrid-button-icon': {\r\n        width: '18px',\r\n        height: '18px',\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n      },\r\n      'canvas-datagrid-button-arrow': {\r\n        display: 'inline-block',\r\n        color: self.style.buttonArrowColor,\r\n        fontSize: '9px',\r\n      },\r\n      'canvas-datagrid-button-menu-item-mobile': {\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.contextMenuFontFamily,\r\n        fontSize: self.style.contextMenuFontSize,\r\n        color: 'inherit',\r\n        background: 'inherit',\r\n        margin: self.style.contextMenuItemMargin,\r\n        borderRadius: self.style.contextMenuItemBorderRadius,\r\n        verticalAlign: 'middle',\r\n      },\r\n      'canvas-datagrid-button-menu-item': {\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.contextMenuFontFamily,\r\n        fontSize: self.style.contextMenuFontSize,\r\n        color: 'inherit',\r\n        background: 'inherit',\r\n        margin: self.style.contextMenuItemMargin,\r\n        borderRadius: self.style.contextMenuItemBorderRadius,\r\n        verticalAlign: 'middle',\r\n      },\r\n      'canvas-datagrid-button-menu-item:hover': {\r\n        background: self.style.contextMenuHoverBackground,\r\n        color: self.style.contextMenuHoverColor,\r\n      },\r\n      'canvas-datagrid-button-menu-label': {\r\n        margin: self.style.contextMenuLabelMargin,\r\n        display: self.style.contextMenuLabelDisplay,\r\n        minWidth: self.style.contextMenuLabelMinWidth,\r\n        maxWidth: self.style.contextMenuLabelMaxWidth,\r\n      },\r\n      'canvas-datagrid-button-menu-mobile': {\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.contextMenuFontFamily,\r\n        fontSize: self.style.contextMenuFontSize,\r\n        background: self.style.contextMenuBackground,\r\n        color: self.style.contextMenuColor,\r\n        border: self.style.contextMenuBorder,\r\n        padding: self.style.contextMenuPadding,\r\n        borderRadius: self.style.contextMenuBorderRadius,\r\n        opacity: self.style.contextMenuOpacity,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n      },\r\n      'canvas-datagrid-button-menu': {\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.contextMenuFontFamily,\r\n        fontSize: self.style.contextMenuFontSize,\r\n        background: self.style.contextMenuBackground,\r\n        color: self.style.contextMenuColor,\r\n        border: self.style.contextMenuBorder,\r\n        padding: self.style.contextMenuPadding,\r\n        borderRadius: self.style.contextMenuBorderRadius,\r\n        opacity: self.style.contextMenuOpacity,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        cursor: self.style.contextMenuCursor,\r\n      },\r\n      'canvas-datagrid-context-menu-filter-input': {\r\n        height: '19px',\r\n        verticalAlign: 'bottom',\r\n        marginLeft: '2px',\r\n        padding: '0',\r\n        background: self.style.contextFilterInputBackground,\r\n        color: self.style.contextFilterInputColor,\r\n        border: self.style.contextFilterInputBorder,\r\n        borderRadius: self.style.contextFilterInputBorderRadius,\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.contextFilterInputFontFamily,\r\n        fontSize: self.style.contextFilterInputFontSize,\r\n      },\r\n      'canvas-datagrid-context-menu-filter-button': {\r\n        height: '19px',\r\n        verticalAlign: 'bottom',\r\n        marginLeft: '2px',\r\n        padding: '0',\r\n        background: self.style.contextMenuBackground,\r\n        color: self.style.contextMenuColor,\r\n        border: self.style.contextFilterButtonBorder,\r\n        borderRadius: self.style.contextFilterButtonBorderRadius,\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.contextMenuFilterButtonFontFamily,\r\n        fontSize: self.style.contextMenuFilterButtonFontSize,\r\n      },\r\n      'canvas-datagrid-context-child-arrow': {\r\n        cssFloat: 'right',\r\n        color: self.style.childContextMenuArrowColor,\r\n        fontSize: self.style.contextMenuChildArrowFontSize,\r\n        fontFamily: self.style.contextMenuFontFamily,\r\n        verticalAlign: 'middle',\r\n      },\r\n      'canvas-datagrid-autocomplete': {\r\n        fontFamily: self.style.contextMenuFontFamily,\r\n        fontSize: self.style.contextMenuFontSize,\r\n        background: self.style.contextMenuBackground,\r\n        color: self.style.contextMenuColor,\r\n        border: self.style.contextMenuBorder,\r\n        padding: self.style.contextMenuPadding,\r\n        borderRadius: self.style.contextMenuBorderRadius,\r\n        opacity: self.style.contextMenuOpacity,\r\n        position: 'absolute',\r\n        zIndex: 9999,\r\n        overflow: 'hidden',\r\n      },\r\n      'canvas-datagrid-autocomplete-item': {\r\n        background: self.style.contextMenuBackground,\r\n        color: self.style.contextMenuColor,\r\n      },\r\n      'canvas-datagrid-autocomplete-item:hover': {\r\n        background: self.style.contextMenuHoverBackground,\r\n        color: self.style.contextMenuHoverColor,\r\n      },\r\n      'canvas-datagrid-canvas': {\r\n        position: 'absolute',\r\n        zIndex: '-1',\r\n      },\r\n      'canvas-datagrid': {\r\n        display: 'block',\r\n      },\r\n      'canvas-datagrid-control-input': {\r\n        position: 'fixed',\r\n        top: '-5px',\r\n        left: '-5px',\r\n        border: 'none',\r\n        opacity: '0',\r\n        cursor: 'pointer',\r\n        width: '1px',\r\n        height: '1px',\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.contextMenuFontFamily,\r\n        fontSize: self.style.contextMenuFontSize,\r\n      },\r\n      'canvas-datagrid-edit-mobile-input': {\r\n        boxSizing: 'content-box',\r\n        outline: 'none',\r\n        margin: '0',\r\n        padding: '0 0 0 0',\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.mobileEditFontFamily,\r\n        fontSize: self.style.mobileEditFontSize,\r\n        border: self.style.editCellBorder,\r\n        color: self.style.editCellColor,\r\n        background: self.style.editCellBackgroundColor,\r\n        appearance: 'none',\r\n        webkitAppearance: 'none',\r\n        mozAppearance: 'none',\r\n        borderRadius: '0',\r\n      },\r\n      'canvas-datagrid-edit-input': {\r\n        boxSizing: 'content-box',\r\n        outline: 'none',\r\n        margin: '0',\r\n        padding: '0 0 0 ' + self.style.editCellPaddingLeft + 'px',\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.editCellFontFamily,\r\n        fontSize: self.style.editCellFontSize,\r\n        boxShadow: self.style.editCellBoxShadow,\r\n        border: self.style.editCellBorder,\r\n        color: self.style.editCellColor,\r\n        background: self.style.editCellBackgroundColor,\r\n        appearance: 'none',\r\n        webkitAppearance: 'none',\r\n        mozAppearance: 'none',\r\n        borderRadius: '0',\r\n      },\r\n      'canvas-datagrid-context-menu-item-mobile': {\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.contextMenuFontFamily,\r\n        fontSize: self.style.contextMenuFontSize,\r\n        color: 'inherit',\r\n        background: 'inherit',\r\n        margin: self.style.contextMenuItemMargin,\r\n        borderRadius: self.style.contextMenuItemBorderRadius,\r\n        verticalAlign: 'middle',\r\n      },\r\n      'canvas-datagrid-context-menu-item': {\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.contextMenuFontFamily,\r\n        fontSize: self.style.contextMenuFontSize,\r\n        color: 'inherit',\r\n        background: 'inherit',\r\n        margin: self.style.contextMenuItemMargin,\r\n        borderRadius: self.style.contextMenuItemBorderRadius,\r\n        verticalAlign: 'middle',\r\n      },\r\n      'canvas-datagrid-context-menu-item:hover': {\r\n        background: self.style.contextMenuHoverBackground,\r\n        color: self.style.contextMenuHoverColor,\r\n      },\r\n      'canvas-datagrid-context-menu-label': {\r\n        margin: self.style.contextMenuLabelMargin,\r\n        display: self.style.contextMenuLabelDisplay,\r\n        minWidth: self.style.contextMenuLabelMinWidth,\r\n        maxWidth: self.style.contextMenuLabelMaxWidth,\r\n      },\r\n      'canvas-datagrid-context-menu-mobile': {\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.contextMenuFontFamily,\r\n        fontSize: self.style.contextMenuFontSize,\r\n        background: self.style.contextMenuBackground,\r\n        color: self.style.contextMenuColor,\r\n        border: self.style.contextMenuBorder,\r\n        padding: self.style.contextMenuPadding,\r\n        borderRadius: self.style.contextMenuBorderRadius,\r\n        opacity: self.style.contextMenuOpacity,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n      },\r\n      'canvas-datagrid-context-menu': {\r\n        lineHeight: 'normal',\r\n        fontWeight: 'normal',\r\n        fontFamily: self.style.contextMenuFontFamily,\r\n        fontSize: self.style.contextMenuFontSize,\r\n        background: self.style.contextMenuBackground,\r\n        color: self.style.contextMenuColor,\r\n        border: self.style.contextMenuBorder,\r\n        padding: self.style.contextMenuPadding,\r\n        borderRadius: self.style.contextMenuBorderRadius,\r\n        opacity: self.style.contextMenuOpacity,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        cursor: self.style.contextMenuCursor,\r\n      },\r\n      'canvas-datagrid-invalid-search-regExp': {\r\n        background: self.style.contextMenuFilterInvalidExpresion,\r\n      },\r\n    };\r\n    if (css[className]) {\r\n      Object.keys(css[className]).map(function (prop) {\r\n        el.style[prop] = css[className][prop];\r\n      });\r\n    }\r\n    return;\r\n  };\r\n  self.appendTo = function (e) {\r\n    self.parentNode = e;\r\n    self.setDom();\r\n  };\r\n  self.setDom = function () {\r\n    if (self.isChildGrid) {\r\n      self.parentGrid = self.parentNode.parentGrid;\r\n      self.ctx = self.parentGrid.context;\r\n      self.canvas = self.parentGrid.canvas;\r\n      self.controlInput = self.parentGrid.controlInput;\r\n      self.eventParent = self.canvas;\r\n    } else {\r\n      self.controlInput = self.controlInput || document.createElement('input');\r\n      self.controlInput.onblur = self.intf.blur;\r\n      self.createInlineStyle(\r\n        self.controlInput,\r\n        'canvas-datagrid-control-input',\r\n      );\r\n      self.isChildGrid = false;\r\n      self.parentDOMNode = self.parentNode;\r\n      self.parentIsCanvas = /^canvas$/i.test(self.parentDOMNode.tagName);\r\n      if (self.parentIsCanvas) {\r\n        self.canvas = self.parentDOMNode;\r\n      } else {\r\n        self.canvas = document.createElement('canvas');\r\n        self.parentDOMNode.appendChild(self.canvas);\r\n      }\r\n      document.body.appendChild(self.controlInput);\r\n      self.createInlineStyle(self.canvas, 'canvas-datagrid');\r\n      self.ctx = self.canvas.getContext('2d');\r\n      self.ctx.textBaseline = 'alphabetic';\r\n      self.eventParent = self.canvas;\r\n    }\r\n    self.parentNodeStyle = self.canvas.style;\r\n    self.controlInput.setAttribute('readonly', true);\r\n    self.controlInput.addEventListener('blur', function (e) {\r\n      if (e.target !== self.canvas) {\r\n        self.hasFocus = false;\r\n      }\r\n    });\r\n    self.eventParent.addEventListener('scroll', self.resize, false);\r\n    self.eventParent.addEventListener('touchstart', self.touchstart, false);\r\n    self.eventParent.addEventListener('mouseup', self.mouseup, false);\r\n    self.eventParent.addEventListener('mousedown', self.mousedown, false);\r\n    self.eventParent.addEventListener('dblclick', self.dblclick, false);\r\n    self.eventParent.addEventListener('click', self.click, false);\r\n    document.body.addEventListener('mousemove', self.mousemove);\r\n    self[self.isChildGrid ? 'parentGrid' : 'eventParent'].addEventListener(\r\n      'wheel',\r\n      self.scrollWheel,\r\n      false,\r\n    );\r\n    self.canvas.addEventListener('contextmenu', self.contextmenuEvent, false);\r\n    self.controlInput.addEventListener('copy', self.copy);\r\n    self.controlInput.addEventListener('cut', self.cut);\r\n    self.controlInput.addEventListener('paste', self.paste);\r\n    self.controlInput.addEventListener('keypress', self.keypress, false);\r\n    self.controlInput.addEventListener('keyup', self.keyup, false);\r\n    self.controlInput.addEventListener('keydown', self.keydown, false);\r\n    window.addEventListener('resize', self.resize);\r\n  };\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true*/\r\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nexport default function (self) {\r\n  /**\r\n   * Converts a integer into a letter A - ZZZZZ...\r\n   * @memberof canvasDatagrid\r\n   * @name integerToAlpha\r\n   * @method\r\n   * @param {column} n The number to convert.\r\n   */\r\n  self.integerToAlpha = function (n) {\r\n    var ordA = 'a'.charCodeAt(0),\r\n      ordZ = 'z'.charCodeAt(0),\r\n      len = ordZ - ordA + 1,\r\n      s = '';\r\n    while (n >= 0) {\r\n      s = String.fromCharCode((n % len) + ordA) + s;\r\n      n = Math.floor(n / len) - 1;\r\n    }\r\n    return s;\r\n  };\r\n  /**\r\n   * Inserts a new column before the specified index into the schema.\r\n   * @tutorial schema\r\n   * @memberof canvasDatagrid\r\n   * @name insertColumn\r\n   * @method\r\n   * @param {column} c The column to insert into the schema.\r\n   * @param {number} index The index of the column to insert before.\r\n   */\r\n  self.insertColumn = function (c, index) {\r\n    var s = self.getSchema();\r\n    if (s.length < index) {\r\n      throw new Error('Index is beyond the length of the schema.');\r\n    }\r\n    self.validateColumn(c, s);\r\n    s.splice(index, 0, c);\r\n\r\n    self.originalData.forEach(function (row, rowIndex) {\r\n      self.applyDefaultValue(row, c, rowIndex);\r\n    });\r\n    self.intf.schema = s;\r\n\r\n    self.refresh();\r\n  };\r\n  /**\r\n   * Deletes a column from the schema at the specified index.\r\n   * @memberof canvasDatagrid\r\n   * @name deleteColumn\r\n   * @tutorial schema\r\n   * @method\r\n   * @param {number} index The index of the column to delete.\r\n   */\r\n  self.deleteColumn = function (index) {\r\n    var schema = self.getSchema();\r\n\r\n    // remove data matching this column name from data\r\n    self.originalData.forEach(function (row) {\r\n      delete row[schema[index].name];\r\n    });\r\n\r\n    schema.splice(index, 1);\r\n    self.intf.schema = schema;\r\n\r\n    self.refresh();\r\n  };\r\n  /**\r\n   * Adds a new column into the schema.\r\n   * @tutorial schema\r\n   * @memberof canvasDatagrid\r\n   * @name addColumn\r\n   * @method\r\n   * @param {column} c The column to add to the schema.\r\n   */\r\n  self.addColumn = function (c) {\r\n    var s = self.getSchema();\r\n    self.validateColumn(c, s);\r\n    s.push(c);\r\n    self.originalData.forEach(function (row, rowIndex) {\r\n      self.applyDefaultValue(row, c, rowIndex);\r\n    });\r\n    self.intf.schema = s;\r\n\r\n    self.refresh();\r\n  };\r\n  /**\r\n   * Deletes a row from the dataset at the specified index.\r\n   * @memberof canvasDatagrid\r\n   * @name deleteRow\r\n   * @method\r\n   * @param {number} index The index of the row to delete.\r\n   */\r\n  self.deleteRow = function (index) {\r\n    self.originalData.splice(index, 1);\r\n    self.setFilter();\r\n    self.resize(true);\r\n  };\r\n  /**\r\n   * Inserts a new row into the dataset before the specified index.\r\n   * @memberof canvasDatagrid\r\n   * @name insertRow\r\n   * @method\r\n   * @param {object} d data.\r\n   * @param {number} index The index of the row to insert before.\r\n   */\r\n  self.insertRow = function (d, index) {\r\n    if (self.originalData.length < index) {\r\n      throw new Error('Index is beyond the length of the dataset.');\r\n    }\r\n    self.originalData.splice(index, 0, d);\r\n    self.getSchema().forEach(function (c) {\r\n      if (d[c.name] === undefined) {\r\n        self.applyDefaultValue(self.originalData[index], c, index);\r\n      }\r\n    });\r\n\r\n    // setFilter calls .refresh(), so we need not call it again:\r\n    self.setFilter();\r\n\r\n    self.resize(true);\r\n  };\r\n  /**\r\n   * Adds a new row into the dataset.\r\n   * @memberof canvasDatagrid\r\n   * @name addRow\r\n   * @method\r\n   * @param {object} d data.\r\n   */\r\n  self.addRow = function (d) {\r\n    self.originalData.push(d);\r\n    self.getSchema().forEach(function (c) {\r\n      if (d[c.name] === undefined) {\r\n        self.applyDefaultValue(\r\n          self.originalData[self.originalData.length - 1],\r\n          c,\r\n          self.originalData.length - 1,\r\n        );\r\n      }\r\n    });\r\n\r\n    // setFilter calls .refresh(), so we need not call it again:\r\n    self.setFilter();\r\n\r\n    self.resize(true);\r\n  };\r\n  /**\r\n   * Sets the height of a given row by index number.\r\n   * @memberof canvasDatagrid\r\n   * @name setRowHeight\r\n   * @method\r\n   * @param {number} rowIndex The index of the row to set.\r\n   * @param {number} height Height to set the row to.\r\n   */\r\n  self.setRowHeight = function (rowIndex, height) {\r\n    self.sizes.rows[rowIndex] = height;\r\n    self.draw(true);\r\n  };\r\n  /**\r\n   * Sets the width of a given column by index number.\r\n   * @memberof canvasDatagrid\r\n   * @name setColumnWidth\r\n   * @method\r\n   * @param {number} colIndex The index of the column to set.\r\n   * @param {number} width Width to set the column to.\r\n   */\r\n  self.setColumnWidth = function (colIndex, width) {\r\n    self.sizes.columns[colIndex] = width;\r\n    self.draw(true);\r\n  };\r\n  /**\r\n   * Removes any changes to the width of the columns due to user or api interaction, setting them back to the schema or style default.\r\n   * @memberof canvasDatagrid\r\n   * @name resetColumnWidths\r\n   * @tutorial schema\r\n   * @method\r\n   */\r\n  self.resetColumnWidths = function () {\r\n    self.sizes.columns = {};\r\n    self.draw(true);\r\n  };\r\n  /**\r\n   * Removes any changes to the height of the rows due to user or api interaction, setting them back to the schema or style default.\r\n   * @memberof canvasDatagrid\r\n   * @name resetRowHeights\r\n   * @tutorial schema\r\n   * @method\r\n   */\r\n  self.resetRowHeights = function () {\r\n    self.sizes.rows = {};\r\n    self.draw(true);\r\n  };\r\n  /**\r\n   * Sets the value of the filter.\r\n   * @memberof canvasDatagrid\r\n   * @name setFilter\r\n   * @method\r\n   * @param {string} column Name of the column to filter.\r\n   * @param {string} value The value to filter for.\r\n   */\r\n  self.setFilter = function (column, value) {\r\n    if (column === undefined && value === undefined) {\r\n      self.columnFilters = {};\r\n    } else if (column && (value === '' || value === undefined)) {\r\n      delete self.columnFilters[column];\r\n    } else {\r\n      self.columnFilters[column] = value;\r\n      if (self.attributes.showFilterInCell) {\r\n        self.filterable.rows.push(0);\r\n        self.orders.columns.forEach(function (value, index) {\r\n          self.filterable.columns.push(index);\r\n        });\r\n      }\r\n    }\r\n    if (!Object.keys(self.columnFilters).length) {\r\n      self.filterable = {\r\n        rows: [],\r\n        columns: [],\r\n      };\r\n    }\r\n    self.refresh();\r\n  };\r\n  /**\r\n   * Returns the number of pixels to scroll down to line up with row rowIndex.\r\n   * @memberof canvasDatagrid\r\n   * @name findRowScrollTop\r\n   * @method\r\n   * @param {number} rowIndex The row index of the row to scroll find.\r\n   */\r\n  self.findRowScrollTop = function (rowIndex) {\r\n    if (self.scrollCache.y[rowIndex] === undefined) {\r\n      throw new RangeError(\r\n        `Row index ${rowIndex} out of range: ${self.scrollCache.y.length}.`,\r\n      );\r\n    }\r\n    return self.scrollCache.y[rowIndex];\r\n  };\r\n  /**\r\n   * Returns the number of pixels to scroll to the left to line up with column columnIndex.\r\n   * @memberof canvasDatagrid\r\n   * @name findColumnScrollLeft\r\n   * @method\r\n   * @param {number} columnIndex The column index of the column to find.\r\n   */\r\n  self.findColumnScrollLeft = function (columnIndex) {\r\n    var i = Math.max(columnIndex - 1, 0);\r\n    if (self.scrollCache.x[i] === undefined) {\r\n      throw new Error('Column index out of range.');\r\n    }\r\n    return (\r\n      self.scrollCache.x[i] -\r\n      self.getColumnWidth(self.orders.columns[columnIndex])\r\n    );\r\n  };\r\n  /**\r\n   * Scrolls to the cell at columnIndex x, and rowIndex y.  If you define both rowIndex and columnIndex additional calculations can be made to center the cell using the target cell's height and width.  Defining only one rowIndex or only columnIndex will result in simpler calculations.\r\n   * @memberof canvasDatagrid\r\n   * @name gotoCell\r\n   * @method\r\n   * @param {number} x The column index of the cell to scroll to.\r\n   * @param {number} y The row index of the cell to scroll to.\r\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\r\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\r\n   */\r\n  self.gotoCell = function (x, y, offsetX, offsetY) {\r\n    var targetX = x === undefined ? undefined : self.findColumnScrollLeft(x),\r\n      targetY = y === undefined ? undefined : self.findRowScrollTop(y),\r\n      cell,\r\n      sbw =\r\n        self.scrollBox.width -\r\n        (self.scrollBox.verticalBarVisible ? self.style.scrollBarWidth : 0),\r\n      sbh =\r\n        self.scrollBox.height -\r\n        (self.scrollBox.horizontalBarVisible ? self.style.scrollBarWidth : 0);\r\n    offsetX = offsetX === undefined ? 0 : offsetX;\r\n    offsetY = offsetY === undefined ? 0 : offsetY;\r\n    targetX -= sbw * offsetX;\r\n    targetY -= sbh * offsetY;\r\n    if (x !== undefined && y !== undefined) {\r\n      self.scrollBox.scrollTo(targetX, targetY);\r\n      requestAnimationFrame(function () {\r\n        cell = self.getVisibleCellByIndex(x, y);\r\n        // HACK: just don't offset if the target cell cannot be seen\r\n        // TODO: offset does not work on very small grids, not sure why\r\n        if (!cell) {\r\n          return;\r\n        }\r\n        targetX += cell.width * offsetX;\r\n        targetY += cell.height * offsetY;\r\n        self.scrollBox.scrollTo(targetX, targetY);\r\n      });\r\n    } else if (x !== undefined) {\r\n      self.scrollBox.scrollLeft = targetX;\r\n    } else if (y !== undefined) {\r\n      self.scrollBox.scrollTop = targetY;\r\n    }\r\n  };\r\n  /**\r\n   * Scrolls the row y.\r\n   * @memberof canvasDatagrid\r\n   * @name gotoRow\r\n   * @method\r\n   * @param {number} y The row index of the cell to scroll to.\r\n   */\r\n  self.gotoRow = function (y) {\r\n    self.gotoCell(0, y);\r\n  };\r\n  /**\r\n   * Add a button into the cell.\r\n   * @memberof canvasDatagrid\r\n   * @name addButton\r\n   * @method\r\n   * @param {number} columnIndex The column index of the cell to to add a button.\r\n   * @param {number} rowIndex The row index of the cell to to add a button.\r\n   * @param {object} offset Offset how far go away from cell.\r\n   * @param {object} items a list of items to add into button menu.\r\n   * @param {string} imgSrc icon path to add into button.\r\n   */\r\n  self.addButton = function (columnIndex, rowIndex, offset, items, imgSrc) {\r\n    var cells = self.visibleCells.filter(function (c) {\r\n      return c.sortColumnIndex === columnIndex && c.sortRowIndex === rowIndex;\r\n    });\r\n\r\n    self.attachButton(\r\n      {\r\n        top: cells[0].y + cells[0].height + offset.y,\r\n        left: cells[0].x + cells[0].width + offset.x,\r\n      },\r\n      items,\r\n      imgSrc,\r\n    );\r\n  };\r\n  /**\r\n   * Scrolls the cell at cell x, row y into view if it is not already.\r\n   * @memberof canvasDatagrid\r\n   * @name scrollIntoView\r\n   * @method\r\n   * @param {number} x The column index of the cell to scroll into view.\r\n   * @param {number} y The row index of the cell to scroll into view.\r\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\r\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\r\n   */\r\n  self.scrollIntoView = function (x, y, offsetX, offsetY) {\r\n    if (\r\n      self.visibleCells.filter(function (cell) {\r\n        return (\r\n          (cell.rowIndex === y || y === undefined) &&\r\n          (cell.columnIndex === x || x === undefined) &&\r\n          cell.x > 0 &&\r\n          cell.y > 0 &&\r\n          cell.x + cell.width < self.width &&\r\n          cell.y + cell.height < self.height\r\n        );\r\n      }).length === 0\r\n    ) {\r\n      self.gotoCell(x, y, offsetX, offsetY);\r\n    }\r\n  };\r\n  /**\r\n   * Sets the active cell. Requires redrawing.\r\n   * @memberof canvasDatagrid\r\n   * @name setActiveCell\r\n   * @method\r\n   * @param {number} x The column index of the cell to set active.\r\n   * @param {number} y The row index of the cell to set active.\r\n   */\r\n  self.setActiveCell = function (x, y) {\r\n    if (x < 0) {\r\n      x = 0;\r\n    }\r\n    if (y < 0) {\r\n      y = 0;\r\n    }\r\n    self.activeCell = {\r\n      rowIndex: y,\r\n      columnIndex: x,\r\n    };\r\n  };\r\n  /**\r\n   * Removes the selection.\r\n   * @memberof canvasDatagrid\r\n   * @name selectNone\r\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\r\n   * @method\r\n   */\r\n  self.selectNone = function (dontDraw) {\r\n    self.selections = [];\r\n    self.dispatchEvent('selectionchanged', {\r\n      selectedData: self.getSelectedData(),\r\n      selections: self.selections,\r\n      selectionBounds: self.selectionBounds,\r\n      selectedCells: self.getSelectedCells(),\r\n    });\r\n    if (dontDraw) {\r\n      return;\r\n    }\r\n    self.draw();\r\n  };\r\n  /**\r\n   * Selects every visible cell.\r\n   * @memberof canvasDatagrid\r\n   * @name selectAll\r\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\r\n   * @method\r\n   */\r\n  self.selectAll = function (dontDraw) {\r\n    self.selectArea({\r\n      top: 0,\r\n      left: -1,\r\n      right: self.getSchema().length - 1,\r\n      bottom: self.viewData.length - 1,\r\n    });\r\n    if (dontDraw) {\r\n      return;\r\n    }\r\n    self.draw();\r\n  };\r\n  /**\r\n   * Returns true if indices of columns next to the selected columnIndex is selected on every row.\r\n   * @memberof canvasDatagrid\r\n   * @name isMultiColumnsSelected\r\n   * @method\r\n   * @param {number} columnIndex The column index to check.\r\n   */\r\n  self.isMultiColumnsSelected = function (columnIndex) {\r\n    var multiColIsSelected = true;\r\n    self.viewData.forEach(function (row, rowIndex) {\r\n      var columnIndices = self.selections[rowIndex];\r\n      if (\r\n        !columnIndices ||\r\n        columnIndices.length <= 1 ||\r\n        columnIndices.indexOf(columnIndex) === -1\r\n      ) {\r\n        multiColIsSelected = false;\r\n      } else if (columnIndices.length > 1) {\r\n        if (columnIndices[0] != columnIndex) multiColIsSelected = false;\r\n        else {\r\n          for (var i = 0; i < columnIndices.length - 1; i++) {\r\n            if (columnIndices[i] + 1 != columnIndices[i + 1]) {\r\n              multiColIsSelected = false;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return multiColIsSelected;\r\n  };\r\n  /**\r\n   * Returns true if the selected columnIndex is selected on every row.\r\n   * @memberof canvasDatagrid\r\n   * @name isColumnSelected\r\n   * @method\r\n   * @param {number} columnIndex The column index to check.\r\n   */\r\n  self.isColumnSelected = function (columnIndex) {\r\n    var colIsSelected = true;\r\n    self.viewData.forEach(function (row, rowIndex) {\r\n      if (\r\n        !self.selections[rowIndex] ||\r\n        self.selections[rowIndex].indexOf(columnIndex) === -1\r\n      ) {\r\n        colIsSelected = false;\r\n      }\r\n    });\r\n    return colIsSelected;\r\n  };\r\n  /**\r\n   * Runs the defined method on each selected cell.\r\n   * @memberof canvasDatagrid\r\n   * @name forEachSelectedCell\r\n   * @method\r\n   * @param {number} fn The function to execute.  The signature of the function is: (data, rowIndex, columnName).\r\n   * @param {number} expandToRow When true the data in the array is expanded to the entire row.\r\n   */\r\n  self.forEachSelectedCell = function (fn, expandToRow) {\r\n    var d = [],\r\n      s = expandToRow ? self.getSchema() : self.getVisibleSchema(),\r\n      l = self.viewData.length;\r\n    self.selections.forEach(function (row, index) {\r\n      if (index === l) {\r\n        return;\r\n      }\r\n      if (row.length === 0) {\r\n        d[index] = null;\r\n        return;\r\n      }\r\n      d[index] = {};\r\n      row.forEach(function (col) {\r\n        if (col === -1 || !s[col]) {\r\n          return;\r\n        }\r\n        fn(self.viewData, index, s[col].name);\r\n      });\r\n    });\r\n  };\r\n  /**\r\n   * Selects a column.\r\n   * @memberof canvasDatagrid\r\n   * @name selectColumn\r\n   * @method\r\n   * @param {number} columnIndex The column index to select.\r\n   * @param {boolean} toggleSelectMode When true, behaves as if you were holding control/command when you clicked the column.\r\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the column.\r\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\r\n   */\r\n  self.selectColumn = function (columnIndex, ctrl, shift, supressEvent) {\r\n    var s, e, x;\r\n    function addCol(i) {\r\n      self.viewData.forEach(function (row, rowIndex) {\r\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\r\n        if (self.selections[rowIndex].indexOf(i) === -1) {\r\n          self.selections[rowIndex].push(i);\r\n        }\r\n      });\r\n    }\r\n    function removeCol(i) {\r\n      self.viewData.forEach(function (row, rowIndex) {\r\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\r\n        if (self.selections[rowIndex].indexOf(i) !== -1) {\r\n          self.selections[rowIndex].splice(\r\n            self.selections[rowIndex].indexOf(i),\r\n            1,\r\n          );\r\n        }\r\n      });\r\n    }\r\n    if (shift) {\r\n      if (!self.activeCell) {\r\n        return;\r\n      }\r\n      s = Math.min(self.activeCell.columnIndex, columnIndex);\r\n      e = Math.max(self.activeCell.columnIndex, columnIndex);\r\n      for (x = s; e > x; x += 1) {\r\n        addCol(x);\r\n      }\r\n    }\r\n    if (!ctrl && !shift) {\r\n      self.selections = [];\r\n      self.activeCell.columnIndex = columnIndex;\r\n      self.activeCell.rowIndex = self.scrollIndexTop;\r\n    }\r\n    if (ctrl && self.isColumnSelected(columnIndex)) {\r\n      removeCol(columnIndex);\r\n    } else {\r\n      addCol(columnIndex);\r\n    }\r\n    if (supressEvent) {\r\n      return;\r\n    }\r\n    self.dispatchEvent('selectionchanged', {\r\n      selectedData: self.getSelectedData(),\r\n      selections: self.selections,\r\n      selectionBounds: self.getSelectionBounds(),\r\n      selectedCells: self.getSelectedCells(),\r\n    });\r\n  };\r\n  /**\r\n   * Selects a row.\r\n   * @memberof canvasDatagrid\r\n   * @name selectRow\r\n   * @method\r\n   * @param {number} rowIndex The row index to select.\r\n   * @param {boolean} ctrl When true, behaves as if you were holding control/command when you clicked the row.\r\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the row.\r\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\r\n   */\r\n  self.selectRow = function (rowIndex, ctrl, shift, supressEvent) {\r\n    var x,\r\n      st,\r\n      en,\r\n      s = self.getVisibleSchema();\r\n    self.isMultiRowsSelected = false;\r\n    function de() {\r\n      if (supressEvent) {\r\n        return;\r\n      }\r\n      self.dispatchEvent('selectionchanged', {\r\n        selectedData: self.getSelectedData(),\r\n        selections: self.selections,\r\n        selectionBounds: self.selectionBounds,\r\n        selectedCells: self.getSelectedCells(),\r\n      });\r\n    }\r\n    function addRow(ri) {\r\n      self.selections[ri] = [];\r\n      self.selections[ri].push(-1);\r\n      s.forEach(function (col, index) {\r\n        self.selections[ri].push(self.orders.columns.indexOf(col.index));\r\n      });\r\n    }\r\n    if (self.dragAddToSelection === false || self.dragObject === undefined) {\r\n      if (\r\n        self.selections[rowIndex] &&\r\n        self.selections[rowIndex].length - 1 === s.length\r\n      ) {\r\n        if (ctrl) {\r\n          self.selections[rowIndex] = [];\r\n          de();\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    if (self.dragAddToSelection === true || self.dragObject === undefined) {\r\n      if (shift && self.dragObject === undefined) {\r\n        if (!self.activeCell) {\r\n          return;\r\n        }\r\n        st = Math.min(self.activeCell.rowIndex, rowIndex);\r\n        en = Math.max(self.activeCell.rowIndex, rowIndex);\r\n        for (x = st; en >= x; x += 1) {\r\n          addRow(x);\r\n        }\r\n      } else {\r\n        addRow(rowIndex);\r\n      }\r\n    }\r\n    de();\r\n  };\r\n  /**\r\n   * Collapse a tree grid by row index.\r\n   * @memberof canvasDatagrid\r\n   * @name collapseTree\r\n   * @method\r\n   * @param {number} index The index of the row to collapse.\r\n   */\r\n  self.collapseTree = function (rowIndex) {\r\n    self.dispatchEvent('collapsetree', {\r\n      childGrid: self.childGrids[rowIndex],\r\n      data: self.viewData[rowIndex],\r\n      rowIndex: rowIndex,\r\n    });\r\n    self.openChildren[rowIndex].blur();\r\n    self.openChildren[rowIndex].dispose();\r\n    delete self.openChildren[rowIndex];\r\n    delete self.sizes.trees[rowIndex];\r\n    delete self.childGrids[rowIndex];\r\n    self.dispatchEvent('resizerow', {\r\n      cellHeight: self.style.cellHeight,\r\n    });\r\n    self.resize(true);\r\n    self.draw(true);\r\n  };\r\n  /**\r\n   * Expands a tree grid by row index.\r\n   * @memberof canvasDatagrid\r\n   * @name expandTree\r\n   * @method\r\n   * @param {number} index The index of the row to expand.\r\n   */\r\n  self.expandTree = function (rowIndex) {\r\n    var trArgs = self.args.treeGridAttributes || {},\r\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\r\n      rowHeaderCellWidth =\r\n        self.sizes.columns.cornerCell || self.style.rowHeaderCellWidth,\r\n      h = self.sizes.trees[rowIndex] || self.style.treeGridHeight,\r\n      treeGrid;\r\n    if (!self.childGrids[rowIndex]) {\r\n      trArgs.debug = self.attributes.debug;\r\n      trArgs.name = self.attributes.saveAppearance\r\n        ? self.attributes.name + 'tree' + rowIndex\r\n        : undefined;\r\n      trArgs.style = trArgs.style || self.style;\r\n      trArgs.parentNode = {\r\n        parentGrid: self.intf,\r\n        nodeType: 'canvas-datagrid-tree',\r\n        offsetHeight: h,\r\n        offsetWidth: self.width - rowHeaderCellWidth,\r\n        header: { width: self.width - rowHeaderCellWidth },\r\n        offsetLeft: rowHeaderCellWidth,\r\n        offsetTop: columnHeaderCellHeight,\r\n        offsetParent: self.intf.parentNode,\r\n        parentNode: self.intf.parentNode,\r\n        style: 'tree',\r\n        data: self.viewData[rowIndex],\r\n      };\r\n      treeGrid = self.createGrid(trArgs);\r\n      self.childGrids[rowIndex] = treeGrid;\r\n    }\r\n    treeGrid = self.childGrids[rowIndex];\r\n    treeGrid.visible = true;\r\n    self.dispatchEvent('expandtree', {\r\n      treeGrid: treeGrid,\r\n      data: self.viewData[rowIndex],\r\n      rowIndex: rowIndex,\r\n    });\r\n    self.openChildren[rowIndex] = treeGrid;\r\n    self.sizes.trees[rowIndex] = h;\r\n    self.dispatchEvent('resizerow', { height: self.style.cellHeight });\r\n    self.resize(true);\r\n  };\r\n  /**\r\n   * Toggles tree grid open and close by row index.\r\n   * @memberof canvasDatagrid\r\n   * @name toggleTree\r\n   * @method\r\n   * @param {number} index The index of the row to toggle.\r\n   */\r\n  self.toggleTree = function (rowIndex) {\r\n    var i = self.openChildren[rowIndex];\r\n    if (i) {\r\n      return self.collapseTree(rowIndex);\r\n    }\r\n    self.expandTree(rowIndex);\r\n  };\r\n  /**\r\n   * Returns a header from the schema by name.\r\n   * @memberof canvasDatagrid\r\n   * @name getHeaderByName\r\n   * @tutorial schema\r\n   * @method\r\n   * @returns {header} header with the selected name, or undefined.\r\n   * @param {string} name The name of the column to resize.\r\n   */\r\n  self.getHeaderByName = function (name) {\r\n    var x,\r\n      i = self.getSchema();\r\n    for (x = 0; x < i.length; x += 1) {\r\n      if (i[x].name === name) {\r\n        return i[x];\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Resizes a column to fit the longest value in the column. Call without a value to resize all columns.\r\n   * Warning, can be slow on very large record sets (1m records ~3-5 seconds on an i7).\r\n   * @memberof canvasDatagrid\r\n   * @name fitColumnToValues\r\n   * @method\r\n   * @param {string} name The name of the column to resize.\r\n   */\r\n  self.fitColumnToValues = function (name, internal) {\r\n    if (!self.canvas) {\r\n      return;\r\n    }\r\n\r\n    const columnIndex =\r\n      name === 'cornerCell' ? -1 : self.getHeaderByName(name).index;\r\n\r\n    const newSize = Math.max(\r\n      self.findColumnMaxTextLength(name),\r\n      self.style.minColumnWidth,\r\n    );\r\n\r\n    self.sizes.columns[columnIndex] = newSize;\r\n\r\n    self.dispatchEvent('resizecolumn', {\r\n      x: newSize,\r\n      y: self.resizingStartingHeight,\r\n      draggingItem: self.currentCell,\r\n    });\r\n\r\n    if (!internal) {\r\n      self.resize();\r\n      self.draw(true);\r\n    }\r\n  };\r\n  /**\r\n   * Checks if a cell is currently visible.\r\n   * @memberof canvasDatagrid\r\n   * @name isCellVisible\r\n   * @overload\r\n   * @method\r\n   * @returns {boolean} when true, the cell is visible, when false the cell is not currently drawn.\r\n   * @param {number} columnIndex The column index of the cell to check.\r\n   * @param {number} rowIndex The row index of the cell to check.\r\n   */\r\n  self.isCellVisible = function (cell, rowIndex) {\r\n    // overload\r\n    if (rowIndex !== undefined) {\r\n      return (\r\n        self.visibleCells.filter(function (c) {\r\n          return c.columnIndex === cell && c.rowIndex === rowIndex;\r\n        }).length > 0\r\n      );\r\n    }\r\n    var x,\r\n      l = self.visibleCells.length;\r\n    for (x = 0; x < l; x += 1) {\r\n      if (\r\n        cell.x === self.visibleCells[x].x &&\r\n        cell.y === self.visibleCells[x].y\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  /**\r\n   * Sets the order of the data.\r\n   * @memberof canvasDatagrid\r\n   * @name order\r\n   * @method\r\n   * @param {number} columnName Name of the column to be sorted.\r\n   * @param {string} direction `asc` for ascending or `desc` for descending.\r\n   * @param {function} [sortFunction] When defined, override the default sorting method defined in the column's schema and use this one.\r\n   * @param {bool} [dontSetStorageData] Don't store this setting for future use.\r\n   */\r\n  self.order = function (\r\n    columnName,\r\n    direction,\r\n    sortFunction,\r\n    dontSetStorageData,\r\n  ) {\r\n    var f,\r\n      c = self.getSchema().filter(function (col) {\r\n        return col.name === columnName;\r\n      });\r\n    if (\r\n      self.dispatchEvent('beforesortcolumn', {\r\n        name: columnName,\r\n        direction: direction,\r\n      })\r\n    ) {\r\n      return;\r\n    }\r\n    self.orderBy = columnName;\r\n    self.orderDirection = direction;\r\n    if (!self.viewData || self.viewData.length === 0) {\r\n      return;\r\n    }\r\n    if (c.length === 0) {\r\n      throw new Error('Cannot sort.  No such column name');\r\n    }\r\n    f = sortFunction || c[0].sorter || self.sorters[c[0].type];\r\n    if (!f && c[0].type !== undefined) {\r\n      console.warn(\r\n        'Cannot sort type \"%s\" falling back to string sort.',\r\n        c[0].type,\r\n      );\r\n    }\r\n    self.orderings.add(\r\n      columnName,\r\n      direction,\r\n      typeof f === 'function' ? f : self.sorters.string,\r\n    );\r\n    self.refresh();\r\n    self.dispatchEvent('sortcolumn', {\r\n      name: columnName,\r\n      direction: direction,\r\n    });\r\n\r\n    if (dontSetStorageData) {\r\n      return;\r\n    }\r\n    self.setStorageData();\r\n  };\r\n  self.isInGrid = function (e) {\r\n    if (e.x < 0 || e.x > self.width || e.y < 0 || e.y > self.height) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  /**\r\n   * Moves the current selection relative to the its current position.  Note: this method does not move the selected data, just the selection itself.\r\n   * @memberof canvasDatagrid\r\n   * @name moveSelection\r\n   * @method\r\n   * @param {number} offsetX The number of columns to offset the selection.\r\n   * @param {number} offsetY The number of rows to offset the selection.\r\n   */\r\n  self.moveSelection = function (offsetX, offsetY) {\r\n    var sel = [];\r\n    self.selections.forEach(function (row, rowIndex) {\r\n      sel[rowIndex + offsetY] = [];\r\n      row.forEach(function (colIndex) {\r\n        sel[rowIndex + offsetY].push(colIndex + offsetX);\r\n      });\r\n    });\r\n    self.selections = sel;\r\n  };\r\n  /**\r\n   * Deletes currently selected data.\r\n   * @memberof canvasDatagrid\r\n   * @name deleteSelectedData\r\n   * @method\r\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\r\n   */\r\n  self.deleteSelectedData = function (dontDraw) {\r\n    const affectedCells = self.clearSelectedCells();\r\n\r\n    self.dispatchEvent('afterdelete', {\r\n      cells: affectedCells,\r\n    });\r\n\r\n    if (dontDraw) {\r\n      return;\r\n    }\r\n\r\n    requestAnimationFrame(() => self.draw());\r\n  };\r\n  /**\r\n   * Moves data in the provided selection to another position in the grid.  Moving data off the edge of the schema (columns/x) will truncate data.\r\n   * @memberof canvasDatagrid\r\n   * @name moveTo\r\n   * @method\r\n   * @param {array} sel 2D array representing selected rows and columns.  `canvasDatagrid.selections` is in this format and can be used here.\r\n   * @param {number} x The column index to start inserting the selection at.\r\n   * @param {number} y The row index to start inserting the selection at.\r\n   */\r\n  self.moveTo = function (sel, x, y) {\r\n    var selectedData = self.getSelectedData(),\r\n      visibleSchema = self.getVisibleSchema(),\r\n      selectionLength = sel.length,\r\n      xi,\r\n      maxRowLength = -Infinity,\r\n      minXi = Infinity,\r\n      yi = y - 1;\r\n\r\n    sel.forEach(function (row, rowIndex) {\r\n      if (rowIndex === selectionLength) {\r\n        return;\r\n      }\r\n      if (row.length === 0) {\r\n        return;\r\n      }\r\n      minXi = Math.min(self.getVisibleColumnIndexOf(x), minXi);\r\n      maxRowLength = Math.max(maxRowLength, row.length);\r\n      row.forEach(function (colIndex) {\r\n        // intentional redef of colIndex\r\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\r\n        if (!visibleSchema[colIndex]) {\r\n          return;\r\n        }\r\n        // TODO:\r\n        if (!self.data[rowIndex]) {\r\n          self.data[rowIndex] = {};\r\n        }\r\n        // TODO:\r\n        self.data[rowIndex][visibleSchema[colIndex].name] = null;\r\n      });\r\n    });\r\n\r\n    sel.forEach(function (row, index) {\r\n      var lastSourceIndex;\r\n      yi += 1;\r\n      xi = self.getVisibleColumnIndexOf(x);\r\n      row.forEach(function (colIndex, cidx) {\r\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\r\n        if (cidx > 0) {\r\n          // this confusing bit of nonsense figures out\r\n          // if the selection has skipped cells\r\n          xi += colIndex - lastSourceIndex;\r\n        }\r\n        lastSourceIndex = colIndex;\r\n        if (\r\n          colIndex === -1 ||\r\n          !visibleSchema[xi] ||\r\n          !visibleSchema[colIndex] ||\r\n          // TODO:\r\n          self.data.length - 1 < yi ||\r\n          yi < 0\r\n        ) {\r\n          return;\r\n        }\r\n        // TODO:\r\n        if (!self.data[yi]) {\r\n          self.data[yi] = {};\r\n        }\r\n        // TODO:\r\n        self.data[yi][visibleSchema[xi].name] =\r\n          selectedData[index][visibleSchema[colIndex].name];\r\n      });\r\n    });\r\n  };\r\n  /**\r\n   * Checks if a given column is visible.\r\n   * @memberof canvasDatagrid\r\n   * @name isColumnVisible\r\n   * @method\r\n   * @returns {boolean} When true, the column is visible.\r\n   * @param {number} columnIndex Column index.\r\n   */\r\n  self.isColumnVisible = function (columnIndex) {\r\n    return (\r\n      self.visibleCells.filter(function (c) {\r\n        return c.columnIndex === columnIndex;\r\n      }).length > 0\r\n    );\r\n  };\r\n  /**\r\n   * Checks if a given row is visible.\r\n   * @memberof canvasDatagrid\r\n   * @name isRowVisible\r\n   * @method\r\n   * @returns {boolean} When true, the row is visible.\r\n   * @param {number} rowIndex Row index.\r\n   */\r\n  self.isRowVisible = function (rowIndex) {\r\n    return (\r\n      self.visibleCells.filter(function (c) {\r\n        return c.rowIndex === rowIndex;\r\n      }).length > 0\r\n    );\r\n  };\r\n  /**\r\n   * Gets the cell at columnIndex and rowIndex.\r\n   * @memberof canvasDatagrid\r\n   * @name getVisibleCellByIndex\r\n   * @method\r\n   * @returns {cell} cell at the selected location.\r\n   * @param {number} x Column index.\r\n   * @param {number} y Row index.\r\n   */\r\n  self.getVisibleCellByIndex = function (x, y) {\r\n    return self.visibleCells.filter(function (c) {\r\n      return c.columnIndex === x && c.rowIndex === y;\r\n    })[0];\r\n  };\r\n  /**\r\n   * Gets the cell at grid pixel coordinate x and y.  Author's note.  This function ties drawing and events together.  This is a very complex function and is core to the component.\r\n   * @memberof canvasDatagrid\r\n   * @name getCellAt\r\n   * @method\r\n   * @returns {cell} cell at the selected location.\r\n   * @param {number} x Number of pixels from the left.\r\n   * @param {number} y Number of pixels from the top.\r\n   */\r\n  self.getCellAt = function (x, y, useTouchScrollZones) {\r\n    function getBorder(entitiy) {\r\n      if (\r\n        entitiy.x + entitiy.width - self.attributes.borderResizeZone * 0.4 <\r\n          x &&\r\n        entitiy.x + entitiy.width + self.attributes.borderResizeZone * 0.6 > x\r\n      ) {\r\n        return 'r';\r\n      }\r\n      if (\r\n        entitiy.x - self.attributes.borderResizeZone * 0.4 < x &&\r\n        entitiy.x + self.attributes.borderResizeZone * 0.6 > x\r\n      ) {\r\n        return 'l';\r\n      }\r\n      if (\r\n        entitiy.y + entitiy.height - self.attributes.borderResizeZone * 0.4 <\r\n          y &&\r\n        entitiy.y + entitiy.height + self.attributes.borderResizeZone * 0.6 > y\r\n      ) {\r\n        return 'b';\r\n      }\r\n      if (\r\n        entitiy.y - self.attributes.borderResizeZone * 0.4 < y &&\r\n        entitiy.y + self.attributes.borderResizeZone * 0.6 > y\r\n      ) {\r\n        return 't';\r\n      }\r\n    }\r\n    if (!self.visibleCells) {\r\n      return;\r\n    }\r\n    var border,\r\n      tsz = useTouchScrollZones ? self.attributes.touchScrollZone : 0,\r\n      moveMode = self.attributes.borderDragBehavior === 'move',\r\n      i,\r\n      l = self.visibleCells.length,\r\n      moveBorder,\r\n      xBorderBehavior = moveMode ? self.cursorGrab : 'ew-resize',\r\n      yBorderBehavior = moveMode ? self.cursorGrab : 'ns-resize',\r\n      cell,\r\n      entitiy;\r\n    if (!self.visibleCells || !self.visibleCells.length) {\r\n      return;\r\n    }\r\n    self.hasFocus = true;\r\n    if (!(y < self.height && y > 0 && x < self.width && x > 0)) {\r\n      self.hasFocus = false;\r\n      return {\r\n        dragContext: 'inherit',\r\n        context: 'inherit',\r\n      };\r\n    }\r\n    for (i = 0; i < l; i += 1) {\r\n      cell = self.visibleCells[i];\r\n      // interactive dimensions of the cell.  used for touch \"over size\" zones\r\n      entitiy = {\r\n        x: cell.x,\r\n        y: cell.y,\r\n        height: cell.height,\r\n        width: cell.width,\r\n      };\r\n      if (\r\n        useTouchScrollZones &&\r\n        /(vertical|horizontal)-scroll-/.test(cell.style)\r\n      ) {\r\n        entitiy.x -= tsz;\r\n        entitiy.y -= tsz;\r\n        entitiy.height += tsz;\r\n        entitiy.width += tsz;\r\n      }\r\n      if (\r\n        entitiy.x - self.style.cellBorderWidth < x &&\r\n        entitiy.x + entitiy.width + self.style.cellBorderWidth > x &&\r\n        entitiy.y - self.style.cellBorderWidth < y &&\r\n        entitiy.y + entitiy.height + self.style.cellBorderWidth > y\r\n      ) {\r\n        if (/frozen-row-marker/.test(cell.style)) {\r\n          cell.dragContext = cell.style;\r\n          cell.context = 'row-resize';\r\n          return cell;\r\n        }\r\n        if (/frozen-column-marker/.test(cell.style)) {\r\n          cell.dragContext = cell.style;\r\n          cell.context = 'col-resize';\r\n          return cell;\r\n        }\r\n        if (/selection-handle-/.test(cell.style)) {\r\n          cell.dragContext = cell.style;\r\n          cell.context = 'crosshair';\r\n          return cell;\r\n        }\r\n        if (/vertical-scroll-(bar|box)/.test(cell.style)) {\r\n          cell.dragContext = 'vertical-scroll-box';\r\n          cell.context = 'vertical-scroll-box';\r\n          cell.isScrollBar = true;\r\n          cell.isVerticalScrollBar = true;\r\n          if (y > self.scrollBox.box.v.y + self.scrollBox.scrollBoxHeight) {\r\n            cell.dragContext = 'vertical-scroll-bottom';\r\n            cell.context = 'vertical-scroll-bottom';\r\n          } else if (y < self.scrollBox.box.v.y) {\r\n            cell.dragContext = 'vertical-scroll-top';\r\n            cell.context = 'vertical-scroll-top';\r\n          }\r\n          self.cursor = 'default';\r\n          return cell;\r\n        }\r\n        if (/horizontal-scroll-(bar|box)/.test(cell.style)) {\r\n          cell.dragContext = 'horizontal-scroll-box';\r\n          cell.context = 'horizontal-scroll-box';\r\n          cell.isScrollBar = true;\r\n          cell.isHorizontalScrollBar = true;\r\n          if (x > self.scrollBox.box.h.x + self.scrollBox.scrollBoxWidth) {\r\n            cell.dragContext = 'horizontal-scroll-right';\r\n            cell.context = 'horizontal-scroll-right';\r\n          } else if (x < self.scrollBox.box.h.x) {\r\n            cell.dragContext = 'horizontal-scroll-left';\r\n            cell.context = 'horizontal-scroll-left';\r\n          }\r\n          self.cursor = 'default';\r\n          return cell;\r\n        }\r\n        border = getBorder(entitiy);\r\n        // check if the border of this cell is the border of the selection and if so show move cursor in move mode\r\n        moveBorder =\r\n          moveMode &&\r\n          cell.selectionBorder &&\r\n          cell.selectionBorder.indexOf(border) !== -1;\r\n        if (\r\n          ['l', 'r'].indexOf(border) !== -1 &&\r\n          (self.attributes.allowColumnResize || moveBorder) &&\r\n          ((self.attributes.allowColumnResizeFromCell && cell.isNormal) ||\r\n            !cell.isNormal ||\r\n            moveBorder) &&\r\n          ((self.attributes.allowRowHeaderResize &&\r\n            (cell.isRowHeader || cell.isCorner)) ||\r\n            !(cell.isRowHeader && cell.isCorner))\r\n        ) {\r\n          if (\r\n            (cell.isColumnHeader ||\r\n              cell.isCorner ||\r\n              (self.attributes.allowColumnResizeFromCell && cell.isNormal)) &&\r\n            border === 'r'\r\n          ) {\r\n            cell.context = 'ew-resize';\r\n            cell.dragContext = 'ew-resize';\r\n            return cell;\r\n          }\r\n          if (!(cell.isColumnHeader || cell.isCorner) && moveBorder) {\r\n            cell.context = xBorderBehavior;\r\n            cell.dragContext = border + '-move';\r\n            return cell;\r\n          }\r\n        }\r\n        if (\r\n          ['t', 'b'].indexOf(border) !== -1 &&\r\n          cell.rowIndex > -1 &&\r\n          (self.attributes.allowRowResize || moveBorder) &&\r\n          ((self.attributes.allowRowResizeFromCell && cell.isNormal) ||\r\n            !cell.isNormal ||\r\n            moveBorder) &&\r\n          !cell.isColumnHeader\r\n        ) {\r\n          if (\r\n            (cell.isRowHeader ||\r\n              cell.isCorner ||\r\n              (self.attributes.allowRowResizeFromCell && cell.isNormal)) &&\r\n            border === 'b'\r\n          ) {\r\n            cell.context = 'ns-resize';\r\n            cell.dragContext = 'ns-resize';\r\n            return cell;\r\n          }\r\n          if (!(cell.isRowHeader || cell.isCorner) && moveBorder) {\r\n            cell.context = yBorderBehavior;\r\n            cell.dragContext = border + '-move';\r\n            return cell;\r\n          }\r\n        }\r\n        if (cell.style === 'columnHeaderCell') {\r\n          cell.context = 'cell';\r\n          cell.dragContext = 'column-reorder';\r\n          return cell;\r\n        }\r\n        if (cell.style === 'rowHeaderCell') {\r\n          if (\r\n            self.attributes.rowGrabZoneSize +\r\n              (cell.y - self.style.cellBorderWidth) <\r\n              y ||\r\n            !self.attributes.allowRowReordering\r\n          ) {\r\n            cell.dragContext = 'cell';\r\n            cell.context = 'cell';\r\n          } else {\r\n            cell.context = self.cursorGrab;\r\n            cell.dragContext = 'row-reorder';\r\n          }\r\n          return cell;\r\n        }\r\n        if (cell.isGrid) {\r\n          self.hasFocus = false;\r\n          cell.dragContext = 'cell-grid';\r\n          cell.context = 'cell-grid';\r\n          return cell;\r\n        }\r\n        if (cell.style === 'tree-grid') {\r\n          self.hasFocus = false;\r\n          cell.dragContext = 'tree';\r\n          cell.context = 'tree';\r\n          return cell;\r\n        }\r\n        cell.dragContext = 'cell';\r\n        cell.context = 'cell';\r\n        return cell;\r\n      }\r\n    }\r\n    self.hasFocus = true;\r\n    self.cursor = 'default';\r\n    return {\r\n      dragContext: 'background',\r\n      context: 'background',\r\n      style: 'background',\r\n      isBackground: true,\r\n    };\r\n  };\r\n  /**\r\n   * Gets the bounds of current selection.\r\n   * @returns {rect} selection.\r\n   * @memberof canvasDatagrid\r\n   * @name getSelectionBounds\r\n   * @method\r\n   */\r\n  self.getSelectionBounds = function () {\r\n    var low = { x: Infinity, y: Infinity },\r\n      high = { x: -Infinity, y: -Infinity };\r\n    self.selections.forEach(function (row, rowIndex) {\r\n      var maxCol, minCol;\r\n      low.y = rowIndex < low.y ? rowIndex : low.y;\r\n      high.y = rowIndex > high.y ? rowIndex : high.y;\r\n      maxCol = Math.max.apply(null, row);\r\n      minCol = Math.min.apply(null, row);\r\n      low.x = minCol < low.x ? minCol : low.x;\r\n      high.x = maxCol > high.x ? maxCol : high.x;\r\n    });\r\n    return {\r\n      top: low.y,\r\n      left: low.x,\r\n      bottom: high.y,\r\n      right: high.x,\r\n    };\r\n  };\r\n  /**\r\n   * Returns an auto generated schema based on data structure.\r\n   * @memberof canvasDatagrid\r\n   * @name getSchemaFromData\r\n   * @method\r\n   * @tutorial schema\r\n   * @returns {schema} schema A schema based on the first item in the data array.\r\n   */\r\n  self.getSchemaFromData = function (d) {\r\n    d = d || self.originalData;\r\n    return Object.keys(d[0] || { ' ': '' }).map(function mapEachSchemaColumn(\r\n      key,\r\n      index,\r\n    ) {\r\n      var type = self.getBestGuessDataType(key, d),\r\n        i = {\r\n          name: key,\r\n          title: isNaN(parseInt(key, 10))\r\n            ? key\r\n            : self.integerToAlpha(key).toUpperCase(),\r\n          index: index,\r\n          columnIndex: index,\r\n          type: type,\r\n          filter: self.filter(type),\r\n        };\r\n      if (\r\n        self.storedSettings &&\r\n        self.storedSettings.visibility &&\r\n        self.storedSettings.visibility[i.name] !== undefined\r\n      ) {\r\n        i.hidden = !self.storedSettings.visibility[i.name];\r\n      }\r\n      return i;\r\n    });\r\n  };\r\n  /**\r\n   * Clears the change log grid.changes that keeps track of changes to the data set.\r\n   * This does not undo changes or alter data it is simply a convince array to keep\r\n   * track of changes made to the data since last this method was called.\r\n   * @memberof canvasDatagrid\r\n   * @name clearChangeLog\r\n   * @method\r\n   */\r\n  self.clearChangeLog = function () {\r\n    self.changes = [];\r\n  };\r\n  /**\r\n   * Selects an area of the grid.\r\n   * @memberof canvasDatagrid\r\n   * @name selectArea\r\n   * @method\r\n   * @param {rect} bounds A rect object representing the selected values.\r\n   */\r\n  self.selectArea = function (bounds, ctrl) {\r\n    self.selectionBounds = bounds || self.selectionBounds;\r\n    var ev,\r\n      x,\r\n      y,\r\n      s = self.getSchema();\r\n    if (!ctrl) {\r\n      self.selections = [];\r\n    }\r\n    if (\r\n      self.selectionBounds.top < -1 ||\r\n      self.selectionBounds.bottom > self.viewData.length ||\r\n      self.selectionBounds.left < -1 ||\r\n      self.selectionBounds.right > s.length\r\n    ) {\r\n      throw new Error('Impossible selection area');\r\n    }\r\n    for (\r\n      x = self.selectionBounds.top;\r\n      x <= self.selectionBounds.bottom;\r\n      x += 1\r\n    ) {\r\n      self.selections[x] = [];\r\n      for (\r\n        y = self.selectionBounds.left;\r\n        y <= self.selectionBounds.right;\r\n        y += 1\r\n      ) {\r\n        if (self.selections[x].indexOf(y) === -1) {\r\n          self.selections[x].push(y);\r\n        }\r\n      }\r\n    }\r\n    ev = {\r\n      selections: self.selections,\r\n      selectionBounds: self.selectionBounds,\r\n      selectedCells: self.getSelectedCells(),\r\n    };\r\n    Object.defineProperty(ev, 'selectedData', {\r\n      get: function () {\r\n        return self.getSelectedData();\r\n      },\r\n    });\r\n    self.dispatchEvent('selectionchanged', ev);\r\n  };\r\n  /**\r\n   * Returns the maximum text width for a given column by column name.\r\n   * @memberof canvasDatagrid\r\n   * @name findColumnMaxTextLength\r\n   * @method\r\n   * @returns {number} The number of pixels wide the maximum width value in the selected column.\r\n   * @param {string} name The name of the column to calculate the value's width of.\r\n   */\r\n  self.findColumnMaxTextLength = function (name) {\r\n    var m = -Infinity;\r\n    if (name === 'cornerCell') {\r\n      self.ctx.font = self.style.rowHeaderCellFont;\r\n      return (\r\n        self.ctx.measureText(\r\n          (\r\n            self.viewData.length + (self.attributes.showNewRow ? 1 : 0)\r\n          ).toString(),\r\n        ).width +\r\n        self.style.autosizePadding +\r\n        self.style.autosizeHeaderCellPadding +\r\n        self.style.rowHeaderCellPaddingRight +\r\n        self.style.rowHeaderCellPaddingLeft +\r\n        (self.attributes.tree\r\n          ? self.style.treeArrowWidth +\r\n            self.style.treeArrowMarginLeft +\r\n            self.style.treeArrowMarginRight\r\n          : 0)\r\n      );\r\n    }\r\n    var formatter = null;\r\n    self.getSchema().forEach(function (col) {\r\n      if (col.name !== name) {\r\n        return;\r\n      }\r\n      self.ctx.font = self.style.columnHeaderCellFont;\r\n      var t =\r\n        self.ctx.measureText(col.title || col.name).width +\r\n        self.style.headerCellPaddingRight +\r\n        self.style.headerCellPaddingLeft;\r\n      m = t > m ? t : m;\r\n      formatter = self.formatters[col.type];\r\n    });\r\n    self.viewData.forEach(function (row) {\r\n      var text = row[name];\r\n      if (formatter) {\r\n        text = formatter({ cell: { value: text } });\r\n      }\r\n      self.ctx.font = self.style.cellFont;\r\n      var t =\r\n        self.ctx.measureText(text).width +\r\n        self.style.cellPaddingRight +\r\n        self.style.cellPaddingLeft +\r\n        self.style.cellAutoResizePadding;\r\n      m = t > m ? t : m;\r\n    });\r\n    return m;\r\n  };\r\n  /**\r\n   * Gets the total width of all header columns.\r\n   * @memberof canvasDatagrid\r\n   * @name getHeaderWidth\r\n   * @method\r\n   */\r\n  self.getHeaderWidth = function () {\r\n    return self.getVisibleSchema().reduce(function (total, header) {\r\n      return total + parseInt(header.width || self.style.cellWidth, 10);\r\n    }, 0);\r\n  };\r\n  /**\r\n   * Gets the height of a row by index.\r\n   * @memberof canvasDatagrid\r\n   * @name getRowHeight\r\n   * @method\r\n   * @param {number} rowIndex The row index to lookup.\r\n   */\r\n  self.getRowHeight = function (rowIndex) {\r\n    return (self.sizes.rows[rowIndex] || self.style.cellHeight) * self.scale;\r\n  };\r\n  /**\r\n   * Gets the width of a column by index.\r\n   * @memberof canvasDatagrid\r\n   * @name getColumnWidth\r\n   * @method\r\n   * @param {number} columnIndex The column index to lookup.\r\n   */\r\n  self.getColumnWidth = function (columnIndex) {\r\n    return (\r\n      (self.sizes.columns[columnIndex] ||\r\n        self.getSchema()[columnIndex].width ||\r\n        self.style.cellWidth) * self.scale\r\n    );\r\n  };\r\n  self.formatters.string = function cellFormatterString(e) {\r\n    return e.cell.value !== undefined ? e.cell.value : '';\r\n  };\r\n  self.formatters.rowHeaderCell = self.formatters.string;\r\n  self.formatters.headerCell = self.formatters.string;\r\n  self.formatters.number = self.formatters.string;\r\n  self.formatters.int = self.formatters.string;\r\n  self.formatters.html = self.formatters.string;\r\n  self.sorters.string = function (columnName, direction) {\r\n    var asc = direction === 'asc';\r\n    return function (a, b) {\r\n      const aValue = a[columnName] || '';\r\n      const bValue = b[columnName] || '';\r\n      if (asc) {\r\n        if (!aValue.localeCompare) {\r\n          return 1;\r\n        }\r\n        return aValue.localeCompare(bValue);\r\n      }\r\n      if (!bValue.localeCompare) {\r\n        return 1;\r\n      }\r\n      return bValue.localeCompare(aValue);\r\n    };\r\n  };\r\n  self.sorters.number = function (columnName, direction) {\r\n    var asc = direction === 'asc';\r\n    return function (a, b) {\r\n      if (asc) {\r\n        return a[columnName] - b[columnName];\r\n      }\r\n      return b[columnName] - a[columnName];\r\n    };\r\n  };\r\n  self.sorters.date = function (columnName, direction) {\r\n    var asc = direction === 'asc';\r\n    return function (a, b) {\r\n      if (asc) {\r\n        return (\r\n          new Date(a[columnName]).getTime() - new Date(b[columnName]).getTime()\r\n        );\r\n      }\r\n      return (\r\n        new Date(b[columnName]).getTime() - new Date(a[columnName]).getTime()\r\n      );\r\n    };\r\n  };\r\n}\r\n","/*jslint browser: true, unparam: true, todo: true, evil: true*/\r\n/*globals Reflect: false, HTMLElement: true, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\r\n'use strict';\r\n\r\nimport component from './component';\r\nimport defaults from './defaults';\r\nimport draw from './draw';\r\nimport events from './events';\r\nimport touch from './touch';\r\nimport intf from './intf';\r\nimport contextMenu from './contextMenu';\r\nimport button from './button';\r\nimport dom from './dom';\r\nimport publicMethods from './publicMethods';\r\n\r\nvar webComponent = component();\r\n\r\nvar modules = [\r\n  defaults,\r\n  draw,\r\n  events,\r\n  touch,\r\n  intf,\r\n  contextMenu,\r\n  button,\r\n  dom,\r\n  publicMethods,\r\n];\r\n\r\nfunction Grid(args) {\r\n  args = args || {};\r\n  var self = {};\r\n  self.isComponent = args.component === undefined;\r\n  self.isChildGrid =\r\n    args.parentNode &&\r\n    /canvas-datagrid-(cell|tree)/.test(args.parentNode.nodeType);\r\n  if (self.isChildGrid) {\r\n    self.intf = {};\r\n  } else {\r\n    self.intf = self.isComponent\r\n      ? eval('Reflect.construct(HTMLElement, [], new.target)')\r\n      : document.createElement('canvas');\r\n  }\r\n  self.args = args;\r\n  self.intf.args = args;\r\n  self.applyComponentStyle = webComponent.applyComponentStyle;\r\n  self.hyphenateProperty = webComponent.hyphenateProperty;\r\n  self.dehyphenateProperty = webComponent.dehyphenateProperty;\r\n  self.createGrid = function grid(args) {\r\n    args.component = false;\r\n    return new Grid(args);\r\n  };\r\n\r\n  modules.forEach(function (module) {\r\n    module(self);\r\n  });\r\n\r\n  if (self.isChildGrid) {\r\n    self.shadowRoot = args.parentNode.shadowRoot;\r\n    self.parentNode = args.parentNode;\r\n  } else {\r\n    self.shadowRoot = self.intf.attachShadow({ mode: 'open' });\r\n    self.parentNode = self.shadowRoot;\r\n  }\r\n  self.init();\r\n  self.observer = webComponent.getObserver();\r\n  return self.intf;\r\n}\r\nif (window.HTMLElement) {\r\n  Grid.prototype = Object.create(window.HTMLElement.prototype);\r\n}\r\n// export web component\r\nif (window.customElements) {\r\n  Grid.observedAttributes = webComponent.getObservableAttributes();\r\n  Grid.prototype.disconnectedCallback = webComponent.disconnectedCallback;\r\n  Grid.prototype.attributeChangedCallback =\r\n    webComponent.attributeChangedCallback;\r\n  Grid.prototype.connectedCallback = webComponent.connectedCallback;\r\n  Grid.prototype.adoptedCallback = webComponent.adoptedCallback;\r\n  window.customElements.define('canvas-datagrid', Grid);\r\n}\r\n\r\n// export global\r\nif (\r\n  window &&\r\n  !window.canvasDatagrid &&\r\n  !window.require &&\r\n  // Present to exclude global declarations from ES Module bundles\r\n  !window.EXCLUDE_GLOBAL\r\n) {\r\n  window.canvasDatagrid = function (args) {\r\n    return new Grid(args);\r\n  };\r\n}\r\n\r\n// export amd loader\r\nexport default function canvasDatagrid(args) {\r\n  args = args || {};\r\n  var i,\r\n    tKeys = [\r\n      'style',\r\n      'formatters',\r\n      'sorters',\r\n      'filters',\r\n      'treeGridAttributes',\r\n      'cellGridAttributes',\r\n      'data',\r\n      'schema',\r\n    ];\r\n  if (window.customElements) {\r\n    i = document.createElement('canvas-datagrid');\r\n    Object.keys(args).forEach(function (argKey) {\r\n      // set data and parentNode after everything else\r\n      if (argKey === 'data') {\r\n        return;\r\n      }\r\n      if (argKey === 'parentNode') {\r\n        return;\r\n      }\r\n      // top level keys in args\r\n      if (tKeys.indexOf(argKey) !== -1) {\r\n        tKeys.forEach(function (tKey) {\r\n          if (args[tKey] === undefined || tKey !== argKey) {\r\n            return;\r\n          }\r\n          if (['formatters', 'sorters', 'filters'].indexOf(argKey) !== -1) {\r\n            if (typeof args[tKey] === 'object' && args[tKey] !== null) {\r\n              Object.keys(args[tKey]).forEach(function (sKey) {\r\n                i[tKey][sKey] = args[tKey][sKey];\r\n              });\r\n            }\r\n          } else {\r\n            i[tKey] = args[tKey];\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      // all others are attribute level keys\r\n      i.attributes[argKey] = args[argKey];\r\n    });\r\n    if (args.data) {\r\n      i.data = args.data;\r\n    }\r\n    // add to the dom very last to avoid redraws\r\n    if (args.parentNode) {\r\n      args.parentNode.appendChild(i);\r\n    }\r\n    return i;\r\n  }\r\n  args.component = false;\r\n  i = new Grid(args);\r\n  if (args.parentNode && args.parentNode.appendChild) {\r\n    args.parentNode.appendChild(i);\r\n  }\r\n  return i;\r\n}\r\n"],"names":["self","defaults","attributes","styles","typeMap","component","getObserver","dehyphenateProperty","prop","replace","nextLetterCap","p","Array","prototype","forEach","call","char","toUpperCase","hyphenateProperty","cust","toLowerCase","applyComponentStyle","supressChangeAndDrawEvents","intf","isComponent","cStyle","window","getComputedStyle","tagName","canvas","defs","computedStyle","def","val","getPropertyValue","setStyleProperty","dispatchEvent","requestAnimationFrame","resize","style","data","strData","JSON","parse","e","Error","schema","strSchema","number","strNum","n","parseInt","isNaN","boolean","strBool","test","string","str","getObservableAttributes","i","attrs","attr","push","disconnectedCallback","connected","connectedCallback","this","parentDOMNode","innerHTML","appendChild","observe","adoptedCallback","attributeChangedCallback","attrName","oldVal","newVal","tfn","dataType","base","item","filter","addEventListener","Function","name","MutationObserver","perfCounters","cachedImagesDrawn","drawCount","perfWindowSize","entityCount","scrollDebugCounters","touchPPSCounters","fillArray","low","high","step","x","undefined","drawHtml","cell","img","v","formattedValue","cacheKey","toString","rowIndex","columnIndex","Math","round","canvasOffsetLeft","y","canvasOffsetTop","htmlImageCache","height","width","complete","ctx","drawImage","Image","onload","loaded","Object","keys","html","draw","src","btoa","radiusRect","w","h","radius","r","b","beginPath","moveTo","lineTo","quadraticCurveTo","fillRect","strokeRect","fillText","text","clipFrozenArea","mode","lastFrozenColumnPixel","lastFrozenRowPixel","clip","fillHandle","selectionHandleType","arc","PI","fill","fillCircle","strokeHandle","stroke","strokeCircle","addBorderLine","c","pos","t","l","internal","isChildGrid","parentGrid","visible","checkScrollHeight","cx","cy","treeGrid","rowOpen","rowHeight","cornerCell","rowData","aCell","my","mx","xHover","yHover","drawCorner","en","m","d","viewData","bc","gridBorderCollapse","selectionBorders","moveBorders","selectionHandles","rowHeaders","length","u","currentCell","columnHeaderCellHeight","getColumnHeaderCellHeight","rowHeaderCellWidth","getRowHeaderCellWidth","cellHeight","performance","now","visibleRowHeights","orders","rows","createRowOrders","save","visibleRows","getSchema","visibleCells","parentNode","offsetTop","offsetLeft","fillStyle","gridBackgroundColor","ln","min","frozenRow","scrollBox","scrollLeft","scrollPixelLeft","cellBorderWidth","drawRow","allowFreezingRows","frozenMarkerBorderWidth","frozenMarkerWidth","drawFrozenRows","columnOrderIndex","rowOrderIndex","headerIndex","g","snapToRow","scrollTop","scrollPixelTop","scrollIndexTop","scrollIndexBottom","scrollPixelBottom","showNewRow","showRowHeaders","scrollIndexLeft","columns","drawCell","newRow","restore","drawRows","cl","activeCell","frozenColumn","selectionMode","lineWidth","activeCellOverlayBorderWidth","strokeStyle","activeCellOverlayBorderColor","getHeaderWidth","drawActiveCell","o","columnHeaderCell","header","nonFrozenHeaderWidth","drawHeaderColumnRange","start","end","hidden","title","cellWidth","type","index","order","rArgs","rhIndex","filteredRowNumber","getBoundRowIndexFromViewRowIndex","originalData","rowHeaderValue","hasActiveFilters","rowHeaderCell","headerDescription","sizes","openChildren","drawRowHeader","showColumnHeaders","columnHeaderCellBorderWidth","scrollBarWidth","isColumnHeaderCell","isColumnHeaderCellCap","endCap","drawHeaders","allowFreezingColumns","frozenMarkerHoverColor","frozenMarkerColor","frozenMarkerHoverBorderColor","frozenMarkerBorderColor","unshift","freezeMarkerPosition","frozenMarkerActiveColor","frozenMarkerActiveBorderColor","dragMode","mobile","allowMovingSelection","selectionHandleBorderWidth","selectionHandleBorderColor","selectionHandleColor","hw","selectionHandleSize","tr","br","tl","bl","addselectionHandle","az","touchSelectHandleZone","ax","ay","reorderObject","dragOffset","reorderMarkerBackgroundColor","reorderMarkerBorderWidth","reorderMarkerBorderColor","k","selections","getRowHeight","reorderMarkerIndexBorderWidth","reorderMarkerIndexBorderColor","reorderTarget","sortRowIndex","selectedColumns","getColumnWidth","sortColumnIndex","drawReorderMarkers","movingSelection","moveOverlayBorderWidth","moveOverlayBorderColor","setLineDash","moveOverlayBorderSegments","gridBorderWidth","gridBorderColor","dsb","selectionOverlayBorderWidth","selectionOverlayBorderColor","drawSelectionBorders","entities","scrollBarBoxMargin","scrollBarBorderColor","scrollBarBorderWidth","horizontalBox","scrollCache","horizontalBar","scrollBoxWidth","scrollWidth","verticalBox","verticalBar","scrollBoxHeight","scrollHeight","horizontalBarVisible","scrollBarBackgroundColor","scrollBarBoxColor","horizontalBoxVisible","context","scrollBarActiveColor","scrollBarBoxBorderRadius","verticalBarVisible","verticalBoxVisible","scrollBarCornerBorderColor","scrollBarCornerBackgroundColor","corner","showPerformance","debug","pop","font","debugFont","perf","reduce","a","toFixed","perfDelta","frozenColumnsWidth","s","getFrozenColumnsWidth","htmlImages","scale","startScale","scaleDelta","zoomDeltaStart","touchLength","touches","touchPosition","touchPosition1","scrollIndex","scrollPixel","canvasOffset","touchDelta","touchAnimateTo","scrollAnimation","touchPPS","xPPS","yPPS","touchPPST","xPPST","yPPST","touchDuration","pointerLockPosition","size","mouse","touch","touchStart","hasFocus","dragContext","textAlign","debugBackgroundColor","key","debugColor","px","py","debugPerfChartBackground","debugScrollHeightColor","debugScrollWidthColor","debugPerformanceColor","debugEntitiesColor","debugTouchPPSXColor","debugTouchPPSYColor","dpl","apply","perfArr","arrIndex","max","color","useAbs","abs","drawPerfLine","debugPerfChartTextColor","drawPerfLines","createBorderOverlayArray","drawArray","propPrefix","offsetPoint","selectionBorder","isRowHeader","indexOf","isHeader","cellGridAttributes","cellStyle","isCorner","isColumnHeader","isFilterable","filterable","includes","wrap","cellWhiteSpace","selected","hovered","hovers","hoverMode","openedFilter","selectedFilterButton","active","rawValue","isGrid","activeHeader","f","formatters","orderByArrowSize","treeArrowSize","ev","value","row","nodeType","fontHeight","horizontalAlignment","verticalAlignment","paddingLeft","paddingTop","paddingRight","paddingBottom","whiteSpace","lineHeight","cellLineHeight","lineSpacing","cellLineSpacing","offsetWidth","offsetHeight","offsetParent","viewRowIndex","viewColumnIndex","boundRowIndex","boundColumnIndex","getBoundColumnIndexFromViewColumnIndex","isNormal","gridId","calculatedLineHeight","paddedWidth","paddedHeight","userHeight","userWidth","cellHeightWithChildGrid","cellWidthWithChildGrid","tree","mt","treeArrowMarginTop","mr","treeArrowMarginRight","ml","treeArrowMarginLeft","aw","treeArrowWidth","ah","treeArrowHeight","treeArrowColor","treeArrowBorderColor","drawTreeArrow","showRowNumbers","childGrids","saveAppearance","createGrid","cellGridHeight","grid","orderBy","columnHeaderOrderByArrowMarginTop","columnHeaderOrderByArrowMarginLeft","columnHeaderOrderByArrowMarginRight","columnHeaderOrderByArrowWidth","columnHeaderOrderByArrowHeight","columnHeaderOrderByArrowColor","columnHeaderOrderByArrowBorderColor","orderDirection","drawOrderByArrow","orderByArrowWidth","console","warn","columnFilters","filterTextPrefix","splitChar","lines","word","elWidth","plWidth","clippedVal","previousLine","words","split","textHeight","autoResize","autoResizeRows","et","ellipsisText","line","cHeight","measureText","curSplitChar","measure","arr","map","splice","originText","stepLength","direction","substr","wrapText","vPos","hPos","stringify","pw","idx","idx_ord","drawText","selectionBorderTop","selectionBorderRight","selectionHandle","selectionBorderLeft","selectionBorderBottom","selectionHandleBehavior","createHandlesOverlayArray","moveOffset","posX","filterButtonWidth","posY","filterButtonHeight","filterButtonBorderColor","filterButtonBackgroundColor","filterButtonActiveBackgroundColor","onFilterButton","filterButtonHoverBackgroundColor","filterButtonBorderRadius","filterButtonArrowHeight","filterButtonArrowWidth","filterButtonArrowColor","filterButtonArrowBorderColor","drawFilterButtonArrow","drawFilterButton","isSorting","orderings","showRowNumberGaps","previousRowNumber","barHeight","rowHeaderCellRowNumberGapHeight","barColor","rowHeaderCellRowNumberGapColor","treeHeight","rowSansTreeHeight","trees","scrollIndexRight","scrollPixelRight","module","exports","defineProperty","enumerable","get","Symbol","toStringTag","__esModule","create","bind","default","hasOwnProperty","concat","modifier","legacyModifier","navigation","editing","ui","device","imeCompositionKeys","koreanSpecific","japaneseSpecific","commonFunction","multimedia","multimediaNumpad","audio","speech","application","browser","mobilePhone","tv","mediaControls","isSupportedHtml","pasteValue","some","expression","IGNORE_NODETYPES","isHtmlTable","sanitizeElementData","element","elementData","innerText","String","trim","parseHtmlText","doc","DOMParser","parseFromString","querySelector","parseHtmlTable","querySelectorAll","childNodes","childNode","col","parseText","parseData","mimeType","htmlSafe","createTextString","selectedData","isNeat","values","join","createHTMLString","htmlString","wheeling","stopPropagation","fn","events","removeEventListener","sfn","defaultPrevented","preventDefault","getRatio","maxPixelRatio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","drawAfterResize","dims","vb","nb","co","isScrollBoxCorner","sbw","ratio","bm","cellBorder","columnHeaderCellBorder","dataHeight","dataWidth","ch","accumulator","column","va","setCanvasSize","args","top","left","setScrollBoxSize","checkScrollBoxVisibility","widthBoxRatio","heightBoxRatio","scrollBarBoxMinSize","scrollBarBoxWidth","bar","box","page","pageUpDownOverlap","resizeEditInput","scroll","overflowX","overflowY","dim","appliedInlineStyles","parentNodeStyle","dontDraw","floor","ellipsisCache","mousemove","overridePos","contextMenu","input","getLayerPos","dragBounds","sBounds","delta","ctrl","ctrlKey","metaKey","persistantSelectionMode","singleSelectionMode","getCellAt","NativeEvent","previousCell","clearTimeout","scrollTimer","isInGrid","rowBoundaryCrossed","columnBoundaryCrossed","cellBoundaryCrossed","prefix","draggingItem","dragItem","cursor","selecting","dragStart","dragStartObject","shiftKey","bottom","right","getSelectionBounds","ignoreNextClick","contextmenuEvent","rect","dragAddToSelection","event","getSelectedData","selectedCells","getSelectedCells","selectionBounds","selectRow","selectArea","isMultiRowsSelected","autoScrollOnMousemove","movedVertically","autoScrollMargin","movedHorizontally","autoScrollZone","click","startingBounds","endEdit","setActiveCell","selectAll","checkSelectionChange","columnHeaderClickBehavior","treeArrowClickRadius","toggleTree","sb","dragResizeColumn","resizingStartingWidth","resizingStartingHeight","minColumnWidth","minRowHeight","resizeScrollZone","resizeChildGrids","globalRowResize","stopDragResize","hasMoved","dragItemIsSelected","isColumnSelected","fitSelectedColumns","document","body","setStorageData","scrollGrid","scrollPointerLock","scrollStartMode","movementX","movementY","scrollMode","scrollStart","scrollModes","setTimeout","scrollRepeatRate","selectionScrollIncrement","stopScrollGrid","exitPointerLock","dragReorder","columReorder","rowReorder","allowColumnReordering","allowRowReordering","isMultiColumnsSelected","selectColumn","source","target","reorderDeadZone","getVisibleCellByIndex","stopDragReorder","oIndex","tIndex","odata","cr","sortColumnIndices","seletedColumnIndices","deleteCount","selectedRows","dragMove","stopDragMove","moveSelection","freezeMove","stopFreezeMove","startFreezeMove","mousedown","lastMouseDownTarget","button","move","freeze","requestPointerLock","dragging","mouseup","controlInput","focus","getAdjacentCells","first","last","keydown","adjacentCells","cols","keepFocusOnMouseOut","isPrintableKeyEvent","beginEditAt","selectNone","deleteSelectedData","Number","isArrowKey","firstSelectedRowIndex","findIndex","el","firstSelectedRow","firstSelectedColumnIndex","lastSelectedColumn","yAtTop","yAtBottom","xAtLeft","xAtRight","selection","shift","scrollIntoView","selectionFollowsActiveCell","keyup","keypress","dblclick","fitColumnToValues","autosize","scrollWheel","deltaX","deltaY","deltaMode","touchHaltAnimation","scrollTo","pasteData","startRowIndex","startColIndex","cellData","forEachSelectedCell","colName","realRowIndex","cells","existingRowData","newRowData","assign","colIndex","columnName","boundRowIndexMap","affectedCells","getNextVisibleColumnIndex","visibleColumnIndex","getVisibleSchema","getVisibleColumnIndexOf","paste","editable","clipboardItems","Map","from","clipboardData","items","supportedMimeTypes","pasteableItems","itemToPaste","startCell","len","pasteType","getAsString","cut","copySelectedCellsToClipboard","clearSelectedCells","copy","touchMoving","touchScrollTimeout","animationFrames","getTouchPos","touchIndex","getBoundingClientRect","clientX","clientY","easingFunctions","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easing","touchEasingMethod","calculatePPSTimed","touchSigmaTimed","calculatePPS","touchSigma","touchEndAnimation","touchReleaseAnimationDurationMs","stopAnimation","touchEditCell","touchstart","changedTouches","startingCell","disposeContextMenu","clearInterval","calculatePPSTimer","touchContextTimeout","touchStartEvent","zoomAltered","touchStart1","touchScrollStart","touchContextMenuTimeMs","setInterval","touchEndEvents","touchmove","passive","touchend","touchcancel","touchSelect","handleType","touchSelecting","bounds","rw","rScrollZone","lScrollZone","bScrollZone","tScrollZone","t1","t2","touchDeadZone","touchZoomSensitivity","touchZoomMin","touchZoomMax","selectionScrollZone","touchScroll","touchMove","dz","touchReleaseAcceleration","scrollAnimationPPSThreshold","ctor","treeGridAttributes","storageName","invalidSearchExpClass","localStyleLibraryStorageKey","add","sortFunction","sort","filters","sorters","parsers","schemaHashes","changes","componentL1Events","eventNames","expandToRow","viewDataLength","orderedIndex","entries","firstRowAsString","rowAsString","rowDict","textString","copiedData","setData","has","visibility","localStorage","setItem","tempSchema","createColumnOrders","selectedColumn","applyDefaultValue","defaultValue","createNewRowData","getSchemaNameHash","getFilteredAndSortedViewData","newViewData","originalRowIndex","headerName","filterText","getHeaderByName","currentFilterFunction","filterFrozenRows","sortFn","rowA","rowB","rowIndexB","sortFrozenRows","refresh","getBestGuessDataType","drawChildGrids","gridKey","setTimer","validateColumn","setDefaults","obj1","obj2","setAttributes","setStyle","findColumnMaxTextLength","dispose","removeChild","eventParent","contextmenu","observer","disconnect","tryLoadStoredSettings","reloadStoredValues","storedSettings","_typeof","getDomRoot","shadowRoot","host","getFontName","fontStyle","getFontHeight","parseFloat","parseStyleValue","initProp","propName","getStyleProperty","styleKeys","supressDrawAndEvent","isDim","getItem","message","init","initialized","publicStyleKeyIntf","initScrollBox","setDom","ie","navigator","userAgent","edge","webKit","moz","blankValues","cursorGrab","cursorGrabing","cursorGrabbing","appendTo","clearChangeLog","gotoCell","gotoRow","addButton","findColumnScrollLeft","findRowScrollTop","isCellVisible","isRowVisible","isColumnVisible","clipElement","getSchemaFromData","setFilter","expandTree","collapseTree","insertRow","deleteRow","addRow","insertColumn","deleteColumn","addColumn","getClippingRect","setRowHeight","setColumnWidth","resetColumnWidths","resetRowHeights","assertPxColor","clearPxColorAssertions","integerToAlpha","addStyleKeyIfNoneExists","DOMStyles","set","valueObject","filterFor","blanksText","filterRegExp","pattern","exec","flags","substring","flagLength","invalidFilterRegEx","RegExp","toLocaleUpperCase","textContent","blur","TypeError","currentCursor","find","eventName","RangeError","isArray","getTypes","parseInnerHtml","callback","etl","autoGenerateSchema","autoResizeColumns","sHeight","sWidth","setScrollTop","preventScrollEvent","moveButtonPos","setScrollLeft","supressDrawEvent","zIndexTop","hoverScrollTimeout","autoCompleteContext","applyContextItemStyle","contextItemContainer","createInlineStyle","createContextMenu","parentContextMenu","loc","container","createElement","upArrow","downArrow","children","selectedIndex","checkArrowVisibility","startHoverScroll","contextHoverScrollAmount","contextHoverScrollRateMs","endHoverScroll","scrollOffset","contextMenuZIndex","childMenuArrow","removeChildContext","relatedTarget","contains","setAttribute","contextAddCallback","getAttribute","cPos","childContextMenuMarginLeft","childContextMenuMarginTop","createChildContext","addContent","content","childContextMenuArrowHTML","addItem","opacity","position","contextMenuArrowColor","zIndex","inputDropdown","maxHeight","innerHeight","autocompleteBottomMargin","minWidth","contextMenuArrowUpHTML","contextMenuArrowDownHTML","display","timer","animationDurationShowContextMenu","unfade","contextMenuWindowMargin","innerWidth","clickIndex","Event","animationDurationHideContextMenu","isFinite","createFilterContextMenuItems","iRect","filterContainer","filterLabel","filterAutoCompleteButton","filterInput","checkRegExpErrorState","background","contextFilterInputBackground","contextFilterInputColor","contextFilterInvalidRegExpBackground","contextFilterInvalidRegExpColor","createAutoCompleteContext","count","blanksItem","autoCompleteItems","cellValue","maxAutoCompleteItems","disposeAutocomplete","onclick","filterOptionText","contextFilterButtonHTML","cf","removeFilterOptionText","contextPosition","isNormalCell","isBackground","isScrollBar","showFilter","showCopy","copyText","execCommand","showPaste","clipBoardData","pasteText","showColumnSelector","columnSelectorText","toggleColumnVisibility","columnSelectorHiddenText","columnSelectorVisibleText","hideColumnText","showClearSettingsOption","clearSettingsOptionText","columnWidth","allowSorting","showOrderByOption","showOrderByOptionTextAsc","showOrderByOptionTextDesc","addDefaultContextMenuItem","contextMenuMarginLeft","contextMenuMarginTop","mobileContextMenuMargin","filterButtonMenuOffsetTop","createDisposeEvent","createButton","imgSrc","wrapper","buttonArrow","buttonIcon","buttonZIndex","buttonMenu","applyButtonStyle","buttonArrowDownHTML","maxWidth","toggleButtonMenu","disposeButtonMenu","createItems","menuItemContainer","buttonMenuItemContainer","applyButtonMenuItemStyle","disposeButton","buttonMenuWindowMargin","createButtonMenu","keyCode","attachButton","ele","boundingRect","eleRect","clipRect","parentRect","Infinity","scrollingElement","nodeName","editCell","borderWidth","mobileEditInputHeight","cellPaddingLeft","ignoreScrollOffset","abort","newValue","oldValue","aborted","inEnterMode","enumItems","enu","option","valueInEnum","multiLine","editCellZIndex","fontSize","editCellFontSize","cellValueIsEmpty","shouldClearCellValue","nx","ny","altKey","nextRowIndex","className","css","padding","buttonPadding","borderStyle","borderColor","buttonBorderColor","buttonBackgroundColor","userSelect","buttonHoverBackgroundColor","buttonActiveBorderColor","buttonActiveBackgroundColor","verticalAlign","buttonArrowColor","fontWeight","fontFamily","contextMenuFontFamily","contextMenuFontSize","margin","contextMenuItemMargin","borderRadius","contextMenuItemBorderRadius","contextMenuHoverBackground","contextMenuHoverColor","contextMenuLabelMargin","contextMenuLabelDisplay","contextMenuLabelMinWidth","contextMenuLabelMaxWidth","contextMenuBackground","contextMenuColor","border","contextMenuBorder","contextMenuPadding","contextMenuBorderRadius","contextMenuOpacity","overflow","contextMenuCursor","marginLeft","contextFilterInputBorder","contextFilterInputBorderRadius","contextFilterInputFontFamily","contextFilterInputFontSize","contextFilterButtonBorder","contextFilterButtonBorderRadius","contextMenuFilterButtonFontFamily","contextMenuFilterButtonFontSize","cssFloat","childContextMenuArrowColor","contextMenuChildArrowFontSize","boxSizing","outline","mobileEditFontFamily","mobileEditFontSize","editCellBorder","editCellColor","editCellBackgroundColor","appearance","webkitAppearance","mozAppearance","editCellPaddingLeft","editCellFontFamily","boxShadow","editCellBoxShadow","contextMenuFilterInvalidExpresion","onblur","parentIsCanvas","getContext","textBaseline","ordA","charCodeAt","fromCharCode","showFilterInCell","offsetX","offsetY","targetX","targetY","sbh","offset","multiColIsSelected","columnIndices","colIsSelected","supressEvent","addCol","st","de","ri","dragObject","childGrid","trArgs","treeGridHeight","newSize","dontSetStorageData","sorter","sel","xi","visibleSchema","selectionLength","maxRowLength","minXi","yi","lastSourceIndex","cidx","useTouchScrollZones","getBorder","entitiy","borderResizeZone","moveBorder","tsz","touchScrollZone","moveMode","borderDragBehavior","xBorderBehavior","yBorderBehavior","isVerticalScrollBar","isHorizontalScrollBar","allowColumnResize","allowColumnResizeFromCell","allowRowHeaderResize","allowRowResize","allowRowResizeFromCell","rowGrabZoneSize","maxCol","minCol","rowHeaderCellFont","autosizePadding","autosizeHeaderCellPadding","rowHeaderCellPaddingRight","rowHeaderCellPaddingLeft","formatter","columnHeaderCellFont","headerCellPaddingRight","headerCellPaddingLeft","cellFont","cellPaddingRight","cellAutoResizePadding","total","headerCell","int","asc","aValue","bValue","localeCompare","date","Date","getTime","webComponent","modules","dom","publicMethods","Grid","eval","attachShadow","canvasDatagrid","tKeys","customElements","argKey","tKey","sKey","HTMLElement","observedAttributes","define","require"],"mappings":"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"}